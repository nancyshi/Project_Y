{"version":3,"sources":["../../../../../assets/scripts/mainScene/assets/scripts/mainScene/mainSceneMgr.js"],"names":["cc","Class","extends","Component","properties","sectionNameLabelNode","Node","levelNodes","connectLineNodes","levelNodePrefab","Prefab","levelNodesConnectLinePrefab","selectedSection","physicalLabelNode","heartLabelNode","mailSysButtonNode","signInSysButtonNode","welfarySysButtonNode","addHeartButtonNode","addPhysicalPowerButtonNode","selectSectionButtonNode","levelNodeStartPosition","v2","levelNodesHorDis","levelNodesVerDis","levelNodesNumPerLine","rotaedCopiedRadius","isShowingNoti","onLoad","setupData","setupUI","playBgm","start","self","path","require","bgmPath","loader","loadRes","err","res","audioEngine","stopAll","play","getComponent","Label","string","playerData","heart","toString","physicalPower","systemsMgr","on","showSystem","redPointShowCondition","mails","unReadNum","key","oneMail","status","signInStatus","flag","initAdWatchedFlag","active","tween","repeatForever","to","angle","delay","setupSectionPerformance","currentSection","log","textConfig","destroyAllChildren","removeAllChildren","sectionConfig","config","sectionTitle","getTextByIdAndLanguageType","sectionTitleTextId","sectionDes","sectionDescripTextId","showText","levels","index","oneLevel","oneLevelNode","instantiate","mgr","level","levelNumLabelNode","parseInt","_checkLevelStatus","delegate","_setupLevelNodePosition","addChild","children","oneNode","preNode","connectLine","v","x","y","width","mag","degree","signAngle","Math","PI","result","_getMidPointOfTwoPoints","position","givenNode","givenIndex","levelNodePositions","length","nodesNum","baseVector","rotate","point1","point2","_checkSectionStatus","givenSection","givneLevel","sectionKey","_getSectionKeyByLevel","sectionStatus","currentLevel","levelsArry","indexOf","givenLevel","levelId","oneConfig","levelsConfig","dataMonitored","value","oneMgr","update","dt","notificationMgr","notiArry","noties","temp","oneStr","showNoti","splice","node","call"],"mappings":"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","file":"mainSceneMgr.js","sourceRoot":"../../../../../assets/scripts/mainScene","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        sectionNameLabelNode: cc.Node,\n        levelNodes: cc.Node,\n        connectLineNodes: cc.Node,\n        levelNodePrefab: cc.Prefab,\n        levelNodesConnectLinePrefab: cc.Prefab,\n        selectedSection: null,\n        physicalLabelNode: cc.Node,\n        heartLabelNode: cc.Node,\n        mailSysButtonNode: cc.Node,\n        signInSysButtonNode: cc.Node,\n        welfarySysButtonNode: cc.Node,\n        addHeartButtonNode: cc.Node,\n        addPhysicalPowerButtonNode: cc.Node,\n        selectSectionButtonNode: cc.Node,\n        levelNodeStartPosition: cc.v2(0,0),\n        levelNodesHorDis: 10,\n        levelNodesVerDis: 20,\n        levelNodesNumPerLine: 4,\n\n        rotaedCopiedRadius: 300,\n        isShowingNoti: false\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.setupData()\n        this.setupUI()\n        this.playBgm()\n        this.rotaedCopiedRadius = 500\n        //require(\"gameMgr\")._generateLevelSceneConfig()\n    },\n\n    start () {\n        \n\n    },\n    playBgm(){\n        var self = this\n        var path = require(\"sectionConfig\")[this.selectedSection].bgmPath\n        cc.loader.loadRes(path,function(err,res){\n            cc.audioEngine.stopAll()\n            cc.audioEngine.play(res,true,1)\n        })\n    },\n    setupUI() {\n        this.heartLabelNode.getComponent(cc.Label).string = require(\"dataMgr\").playerData.heart.toString()\n        this.physicalLabelNode.getComponent(cc.Label).string = require(\"dataMgr\").playerData.physicalPower.toString()\n        var systemsMgr = require(\"systemsMgr\")\n        this.mailSysButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"mailSys\")\n        })\n        this.mailSysButtonNode.getComponent(\"redPointMgr\").redPointShowCondition = function() {\n            var mails = require(\"dataMgr\").playerData.mails\n            var unReadNum = 0\n            for (var key in mails) {\n                var oneMail = mails[key]\n                if (oneMail.status == 0) {\n                    unReadNum += 1\n                }\n            }\n            if (unReadNum > 0) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n\n\n        this.signInSysButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"signInSys\")\n        })\n        this.signInSysButtonNode.getComponent(\"redPointMgr\").redPointShowCondition = function() {\n            var signInStatus = require(\"dataMgr\").playerData.signInStatus\n            switch(signInStatus) {\n                case 1:\n                    return true\n                case 2:\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        this.addPhysicalPowerButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"addPropertyNumSys\",1)\n        })\n        this.addHeartButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"addPropertyNumSys\",2)\n        })\n\n        var flag = require(\"dataMgr\").playerData.initAdWatchedFlag\n        if (flag == 1) {\n            this.welfarySysButtonNode.active = false\n        }\n        else {\n            cc.tween(this.welfarySysButtonNode)\n                .repeatForever(cc.tween()\n                    .to(0.3,{angle: -45})\n                    .to(0.3,{angle: 0})\n                    .to(0.3,{angle: 45})\n                    .to(0.3,{angle: 0})\n                    .delay(1)\n                )\n                .start()\n            \n            this.welfarySysButtonNode.on(\"click\",function(){\n                systemsMgr.showSystem(\"welfarySys\")\n            })\n        }\n\n        this.selectSectionButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"selectSectionSys\")\n        })\n\n        this.setupSectionPerformance()\n    },\n\n    setupData() {\n        this.selectedSection = require(\"dataMgr\").playerData.currentSection\n    },\n\n    setupSectionPerformance() {\n        if (this.selectedSection == null) {\n            cc.log(\"not selected one section, can not setup section of mainScene mgr\")\n            return\n        }\n        var textConfig = require(\"textConfig\")\n        this.levelNodes.destroyAllChildren()\n        this.levelNodes.removeAllChildren()\n        this.connectLineNodes.destroyAllChildren()\n        this.connectLineNodes.removeAllChildren()\n        var sectionConfig = require(\"sectionConfig\")\n        var config = sectionConfig[this.selectedSection]\n        var sectionTitle = textConfig.getTextByIdAndLanguageType(config.sectionTitleTextId)\n        var sectionDes = textConfig.getTextByIdAndLanguageType(config.sectionDescripTextId)\n        var showText = sectionTitle + \" \" + sectionDes\n        this.sectionNameLabelNode.getComponent(cc.Label).string = showText\n\n        var levels = config.levels\n        for (var index in levels) {\n            var oneLevel = levels[index]\n            var oneLevelNode = cc.instantiate(this.levelNodePrefab)\n            var mgr = oneLevelNode.getComponent(\"levelNodeMgr\")\n            mgr.level = oneLevel\n            mgr.levelNumLabelNode.getComponent(cc.Label).string = (parseInt(index) + 1).toString()\n            mgr.status = this._checkLevelStatus(oneLevel)\n            mgr.delegate = this\n            this._setupLevelNodePosition(oneLevelNode,index)\n            this.levelNodes.addChild(oneLevelNode)\n        }\n\n        for (var index in this.levelNodes.children){\n            if (index == 0) {\n                continue\n            }\n            var oneNode = this.levelNodes.children[index]\n            var preNode = this.levelNodes.children[(index - 1)]\n            var connectLine = cc.instantiate(this.levelNodesConnectLinePrefab)\n            var v = cc.v2(preNode.x - oneNode.x, preNode.y - oneNode.y)\n            connectLine.width = v.mag()\n            var degree= v.signAngle(cc.v2(1,0)) / Math.PI * 180\n            connectLine.angle = -degree\n            var result = this._getMidPointOfTwoPoints(oneNode.position, preNode.position)\n            connectLine.x = result.x\n            connectLine.y = result.y\n            this.connectLineNodes.addChild(connectLine)\n        }\n    },\n    _setupLevelNodePosition(givenNode, givenIndex) {\n        var sectionConfig = require(\"sectionConfig\")[this.selectedSection]\n        var levelNodePositions = sectionConfig.levelNodePositions\n        if (levelNodePositions == null || levelNodePositions.length == 0) {\n            //lined\n\n            // var rowIndex = givenIndex % this.levelNodesNumPerLine\n            // var colIndex = Math.floor(givenIndex / this.levelNodesNumPerLine)\n\n            // var maxX = this.levelNodeStartPosition.x + this.levelNodesHorDis * (this.levelNodesNumPerLine - 1)\n            // if (colIndex % 2 == 0) {\n            //     givenNode.x = this.levelNodeStartPosition.x + rowIndex * this.levelNodesHorDis\n            // }\n            // else {\n            //     givenNode.x = maxX - rowIndex * this.levelNodesHorDis\n            // }\n            // givenNode.y = this.levelNodeStartPosition.y + colIndex * this.levelNodesVerDis\n            \n            // var levelNodeStart = this.node.getChildByName(\"sectionNameLabel\").getChildByName(\"levelNodeStart\")\n            // givenNode.x = levelNodeStart.x\n            \n            // givenNode.y = levelNodeStart.y + givenIndex * this.levelNodesVerDis\n\n            //rotated copied\n            var nodesNum = sectionConfig.levels.length\n            var angle = 2 * Math.PI / nodesNum\n            var baseVector = cc.v2(this.rotaedCopiedRadius,0)\n            var v = baseVector.rotate(-givenIndex * angle)\n            givenNode.x = v.x\n            givenNode.y = v.y\n        }\n        else {\n            givenNode.x = levelNodePositions[givenIndex].x\n            givenNode.y = levelNodePositions[givenIndex].y\n        }\n    },\n\n    _getMidPointOfTwoPoints(point1,point2) {\n        var v = cc.v2(point2.x - point1.x, point2.y - point1.y)\n        var x = point1.x + v.x / 2\n        var y = point1.y + v.y / 2\n        return cc.v2(x,y)\n    },\n\n\n    _checkSectionStatus(givenSection) {\n        var currentSection = require(\"dataMgr\").playerData.currentSection\n        if (typeof givenSection !== \"number\") {\n            givenSection = parseInt(givenSection)\n        }\n        if (givenSection > currentSection) {\n            return 0 //locked\n        }\n        else if (givenSection < currentSection) {\n            return 1 //unlocked\n        }\n        else if (givenSection == currentSection) {\n            return 2 //current\n        }\n    },\n\n    _checkLevelStatus(givneLevel) {\n        var sectionKey = this._getSectionKeyByLevel(givneLevel)\n        if (sectionKey == false) {\n            return false //no such level\n        }\n       \n        var sectionStatus = this._checkSectionStatus(sectionKey)\n        switch(sectionStatus) {\n            case 0:\n                return 0 //locked\n            case 1:\n                return 1 //unlocked\n            case 2:\n                var currentLevel = require(\"dataMgr\").playerData.currentLevel\n                if (currentLevel == givneLevel) {\n                    return 2 //current\n                }\n\n                var sectionConfig = require(\"sectionConfig\")[sectionKey]\n                var levelsArry = sectionConfig.levels\n                if (levelsArry.indexOf(givneLevel) > levelsArry.indexOf(currentLevel)) {\n                    return 0 //locked\n                }\n                return 1 //unlocked\n        }\n    },\n    _getSectionKeyByLevel(givenLevel) {\n        var levelId = parseInt(givenLevel)\n        var sectionConfig = require(\"sectionConfig\")\n        for (var key in sectionConfig) {\n            var oneConfig = sectionConfig[key]\n            var levelsConfig = oneConfig.levels\n            if (levelsConfig.indexOf(levelId) != -1) {\n                return key\n            }\n        }\n\n        return false\n    },\n\n\n    dataMonitored(key,value) {\n        if (key == \"physicalPower\") {\n            this.physicalLabelNode.getComponent(cc.Label).string = value.toString()\n        }\n        else if (key == \"heart\") {\n            this.heartLabelNode.getComponent(cc.Label).string = value.toString()\n        }\n        for(var index in this.levelNodes.children) {\n            var oneMgr = this.levelNodes.children[index].getComponent(\"levelNodeMgr\")\n            oneMgr.dataMonitored(key,value)\n        }\n    },\n\n    update (dt) {\n        var notificationMgr = require(\"notificationMgr\")\n        var notiArry = notificationMgr.noties\n        if (notiArry.length > 0 && this.isShowingNoti == false) {\n            this.isShowingNoti = true\n            var self = this\n            var temp = function() {\n                if (notiArry.length == 0) {\n                    self.isShowingNoti = false\n                    return\n                }\n\n                var oneStr = notiArry[0]\n                notificationMgr.showNoti(oneStr)\n                notiArry.splice(0,1)\n                cc.tween(self.node)\n                    .delay(0.3)\n                    .call(function(){\n                        temp()\n                    })\n            }\n\n            temp()\n        }\n    },\n});\n"]}