{"version":3,"sources":["../../../../../assets/scripts/components/assets/scripts/components/redPointMgr.js"],"names":["cc","Class","extends","Component","properties","redPointPrefab","Prefab","redPoint","offset","v2","redPointShowCondition","get","_redPointShowCondition","set","value","setupRedPoint","start","log","node","name","showRedPoint","hideRedPoint","oneRedPoint","instantiate","getNodeRightHeadPoint","givenNode","x","anchorX","width","y","anchorY","height","targetX","targetY","addChild","active"],"mappings":"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","file":"redPointMgr.js","sourceRoot":"../../../../../assets/scripts/components","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        redPointPrefab: cc.Prefab,\n        redPoint: null,\n        offset: cc.v2(5,10),\n        redPointShowCondition: {\n            get() {\n                return this._redPointShowCondition\n            },\n            set(value) {\n                //init setup\n                this._redPointShowCondition = value\n                this.setupRedPoint()\n            }\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    setupRedPoint() {\n        if (this.redPointShowCondition == null || typeof this.redPointShowCondition !== \"function\") {\n            cc.log(\"no condition of redpoint, or condition is not a function from node \" + this.node.name)\n            return\n        }\n\n        if (this.redPointShowCondition() == true) {\n            this.showRedPoint()\n        }\n        else {\n            this.hideRedPoint()\n        }\n    },\n\n    showRedPoint() {\n        if (this.redPoint == null) {\n            var oneRedPoint = cc.instantiate(this.redPointPrefab)\n            var getNodeRightHeadPoint = function(givenNode) {\n                var x = (1 - givenNode.anchorX) * givenNode.width\n                var y = (1 - givenNode.anchorY) * givenNode.height\n                return cc.v2(x,y)\n            }\n            var targetX = getNodeRightHeadPoint(this.node).x + this.offset.x\n            var targetY = getNodeRightHeadPoint(this.node).y + this.offset.y\n            oneRedPoint.x = targetX\n            oneRedPoint.y = targetY\n            this.redPoint = oneRedPoint\n            this.node.addChild(oneRedPoint)\n        }\n        \n        this.redPoint.active = true\n    },\n\n    hideRedPoint() {\n        if (this.redPoint == null) {\n            var oneRedPoint = cc.instantiate(this.redPointPrefab)\n            var getNodeRightHeadPoint = function(givenNode) {\n                var x = (1 - givenNode.anchorX) * givenNode.width\n                var y = (1 - givenNode.anchorY) * givenNode.height\n                return cc.v2(x,y)\n            }\n            var targetX = getNodeRightHeadPoint(this.node).x + this.offset.x\n            var targetY = getNodeRightHeadPoint(this.node).y + this.offset.y\n            oneRedPoint.x = targetX\n            oneRedPoint.y = targetY\n            this.redPoint = oneRedPoint\n            this.node.addChild(oneRedPoint)\n        }\n\n        this.redPoint.active = false\n    }\n\n    // update (dt) {},\n});\n"]}