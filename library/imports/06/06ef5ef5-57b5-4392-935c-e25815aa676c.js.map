{"version":3,"sources":["../../../../../assets/scripts/libs/assets/scripts/libs/networkMgr.js"],"names":["Networkmgr","cc","Class","extends","Component","properties","delegate","retryDelta","retryTime","retryingFlag","currentRetryTime","retryResult","get","_retryResult","set","value","retryWaitingNode","destroy","longConnectXhr","_longConnectXhr","XMLHttpRequest","start","sendMessage","msg","port","ip","suffix","successCallBack","xhr","onreadystatechange","readyState","status","url","toString","open","send","makeMessageObj","moduleName","messageTypeName","gloableConfig","require","netWorkMessageConfigs","moduleObj","basicIp","basicPort","message","obj","error","sendMessageByMsgObj","msgObj","useLongConnectXhr","log","self","msgForSend","JSON","stringify","onerror","loader","loadRes","err","res","instantiate","name","bg","getChildByName","winsize","director","getWinSize","width","height","on","node","addChild","scheduleOnce","onAllRetryFailed","ontimeout","startHeartBeat","messageObj","playerId","playerData","id","response","responseText","parse","type","messages","index","oneMessage","mailId","timeStamp","tag","mail","mails","schedule","sharedMgr","module","exports"],"mappings":"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","file":"networkMgr.js","sourceRoot":"../../../../../assets/scripts/libs","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar Networkmgr = cc.Class({\n    extends: cc.Component,\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        delegate: null,\n\n        retryDelta: 0.5,\n        retryTime: 3,\n        retryingFlag: false,\n        currentRetryTime: 3,\n\n        retryResult: {\n            get() {\n                return this._retryResult\n            },\n            set(value) {\n                this._retryResult = value\n                if (value == true) {\n                    if (this.retryWaitingNode != null) {\n                        this.retryWaitingNode.destroy()\n                    }\n                }\n            }\n        },\n\n        retryWaitingNode: null,\n\n        longConnectXhr: {\n            get() {\n                if (this._longConnectXhr == null) {\n                    this._longConnectXhr = new XMLHttpRequest()\n                    //this._longConnectXhr.timeout = 100000000\n                }\n                return this._longConnectXhr\n            }\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n\n    sendMessage(msg,port,ip,suffix,successCallBack) {\n        var xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                successCallBack(xhr)\n            }\n        }\n        var url = \"http://\" + ip + \":\" + port.toString() +\"/\" + suffix.toString()\n        xhr.open(\"POST\",url)\n        xhr.send(msg)\n    },\n\n    makeMessageObj(moduleName, messageTypeName) {\n        var gloableConfig = require(\"gloableConfig\")\n        \n        var netWorkMessageConfigs = gloableConfig.netWorkMessageConfigs\n        var moduleObj = netWorkMessageConfigs[moduleName]\n        \n        if (moduleObj != null) {\n            var ip = gloableConfig.basicIp\n            var port = gloableConfig.basicPort\n            if (moduleObj.ip != null) {\n                ip = moduleObj.ip\n            }\n            if (moduleObj.port != null) {\n                port = moduleObj.port\n            }\n\n            var suffix = moduleObj.suffix\n            \n            var message = moduleObj[messageTypeName]\n            var successCallBack = function(xhr){}\n            var obj = {\n                ip: ip,\n                port: port,\n                suffix: suffix,\n                message: message,\n                successCallBack: successCallBack\n            }\n            return obj\n        }\n        else {\n            cc.error(\"no such module name of \" + moduleName)\n            return null\n        }\n    },\n\n    sendMessageByMsgObj(msgObj, useLongConnectXhr = false) {\n        if (useLongConnectXhr == true) {\n            cc.log(\"start heart beat\")\n        }\n        var url = \"https://\" + msgObj.ip + \":\" + msgObj.port.toString() + \"/\" + msgObj.suffix\n        var xhr = null\n        if (useLongConnectXhr == false) {\n            xhr = new XMLHttpRequest()\n        }\n        else {\n            xhr = this.longConnectXhr\n        }\n        var self = this\n        xhr.onreadystatechange = function() {\n\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                msgObj.successCallBack(xhr)\n                if (self.retryingFlag == true) {\n                    self.retryResult = true\n                }\n            }\n        }\n        var msgForSend = JSON.stringify(msgObj.message)\n        xhr.onerror = function() {\n            cc.log(\"connect erro\")\n            if (self.retryingFlag == false) {\n                cc.loader.loadRes(\"prefabs/retryWaitingNode\",function(err,res){\n                    if (self.delegate != null) {\n                        var retryWaitingNode = cc.instantiate(res)\n                        retryWaitingNode.name = \"retryWaitingNode\"\n                        var bg = retryWaitingNode.getChildByName(\"bg\")\n                        var winsize = cc.director.getWinSize()\n                        bg.width = winsize.width\n                        bg.height = winsize.height\n                        bg.on(\"touchstart\",function(){},this)\n                        self.retryWaitingNode = retryWaitingNode\n                        self.delegate.node.addChild(self.retryWaitingNode)\n                    }\n                    self.retryingFlag = true\n                    self.scheduleOnce(function(){\n                        self.currentRetryTime -= 1\n                        xhr.send(msgForSend)\n    \n                    },self.retryDelta)\n                })\n                \n            }\n            if (self.retryingFlag == true) {\n                self.currentRetryTime -= 1\n                xhr.send(msgForSend)\n                if (self.currentRetryTime == 0) {\n                    xhr.onerror = function() {\n                        xhr = null\n                        self.onAllRetryFailed()\n                        \n                    }\n                    self.retryingFlag = false\n                    self.currentRetryTime = self.retryTime\n                    self.retryResult = null\n                }\n            }\n        }\n        xhr.ontimeout = function(){\n            cc.log(\"time out!!!\")\n        }\n        if (xhr.readyState == 0) {\n            xhr.open(\"POST\",url)\n        }\n        xhr.send(msgForSend)\n    },\n\n    onAllRetryFailed() {\n        if (this.retryWaitingNode != null) {\n            this.retryWaitingNode.destroy()\n        }\n        if (this.delegate != null) {\n            this.delegate.onAllRetryFailed()\n        }\n    },\n\n    startHeartBeat() {\n        var messageObj = this.makeMessageObj(\"longConnectModule\",\"heartBeatMessageType\")\n        messageObj.message.playerId = require(\"dataMgr\").playerData.id\n        messageObj.successCallBack = function(xhr) {\n            var response = xhr.responseText\n            response = JSON.parse(response)\n            if (response.type == \"message\") {\n                var messages = response.messages\n                for (var index in messages) {\n                    var oneMessage = messages[index]\n                    if (oneMessage.type == \"mailSysSendMail\") {\n                        var mailId = oneMessage.mailId\n                        var timeStamp = oneMessage.timeStamp\n                        var tag = oneMessage.tag\n                        var mail = {\n                            \"status\": 0,\n                            \"tag\": tag,\n                            \"timeStamp\": timeStamp,\n                            \"selectedOptionIndex\": -1\n                        }\n                        require(\"dataMgr\").playerData.mails[mailId] = mail\n                    }\n                }\n            }\n        }\n        //this.sendMessageByMsgObj(messageObj,true)\n        this.schedule(function(){\n            this.sendMessageByMsgObj(messageObj)\n        }, 60)\n    }\n});\n\n\nvar sharedMgr = new Networkmgr()\nmodule.exports = sharedMgr"]}