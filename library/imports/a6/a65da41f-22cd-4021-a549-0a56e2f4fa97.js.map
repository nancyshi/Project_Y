{"version":3,"sources":["assets/scripts/mainScene/levelNodeMgr.js"],"names":["cc","Class","Component","properties","status","get","_status","set","value","node","getComponent","Sprite","spriteFrame","graySpriteFrame","isRecommanded","levelNumLabelNode","Node","mailTagNode","selectedEffectNode","SpriteFrame","mailTagSendSpriteFrame","delegate","level","preChanllengeUIPrefab","Prefab","preChanllengeUIOpend","_isRecommanded","active","onLoad","tween","repeatForever","to","opacity","start","setupMailTag","onClick","str","require","getTextByIdAndLanguageType","pushNoti","openPreChanllengeUI","ui","instantiate","mgr","levelStatus","director","getScene","getChildByName","addChild","result","_checkLevelMailTagStatus","mailHasSend","mailTagWillShow","mailSysConfig","tag","conditions","index","oneElement","conditionType","conditionPara","currentConditionIndex","playerData","mailConditionIndex","log","levelId","dataMonitored","key","mailConfig","mailIds","Object","keys","indexOf"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        status: {\n            get() {\n                return this._status\n            },\n            set(value) {\n                this._status = value\n                if(value == 0 || value == 2) {                  \n                    this.node.getComponent(cc.Sprite).spriteFrame = this.graySpriteFrame\n                }\n                if (value == 2) {\n                    this.isRecommanded = true\n                }\n            }\n        }, //0 = locked, 1 = unlocked, 2 = current\n        levelNumLabelNode: cc.Node,\n        mailTagNode: cc.Node,\n        selectedEffectNode: cc.Node,\n        graySpriteFrame: cc.SpriteFrame,\n        mailTagSendSpriteFrame: cc.SpriteFrame,\n        delegate: null,\n        level: null,\n        preChanllengeUIPrefab: cc.Prefab,\n        preChanllengeUIOpend: false,\n        isRecommanded: {\n            get() {\n                return this._isRecommanded\n            },\n            set(value) {\n                this._isRecommanded = value\n                if (value == true) {\n                    this.selectedEffectNode.active = true\n                }\n            }\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        cc.tween(this.selectedEffectNode)\n            .repeatForever(cc.tween().to(0.5,{opacity:0}).to(0.5,{opacity: 255}))\n            .start()\n        this.setupMailTag()\n    },\n\n    start () {\n\n    },\n\n    onClick() {\n        if (this.status == 0) {\n            var str = require(\"textConfig\").getTextByIdAndLanguageType(168)\n            require(\"notificationMgr\").pushNoti(str)\n            return\n        }\n        this.openPreChanllengeUI()\n    },\n\n    openPreChanllengeUI() {\n        if (this.preChanllengeUIOpend == true) {\n            return\n        }\n\n        var ui = cc.instantiate(this.preChanllengeUIPrefab)\n        var mgr = ui.getComponent(\"preChallengeUIMgr\")\n        mgr.level = this.level\n        mgr.levelStatus = this.status\n        mgr.delegate = this\n\n        cc.director.getScene().getChildByName(\"Canvas\").addChild(ui)\n        this.preChanllengeUIOpend = true\n    },\n\n    setupMailTag() {\n        var result = this._checkLevelMailTagStatus()\n        if (result != false) {\n            var mailHasSend = result[1]\n            var mailTagWillShow = result[0]\n            if (mailHasSend == true) {\n                this.mailTagNode.getComponent(cc.Sprite).spriteFrame = this.mailTagSendSpriteFrame\n            }\n            if (mailTagWillShow == true) {\n                this.mailTagNode.active = true\n            }\n        }\n    },\n\n    _checkLevelMailTagStatus() {\n        var mailSysConfig = require(\"mailSysConfig\")\n        var mailTagWillShow = false\n        var mailHasSend = false\n        for (var tag in mailSysConfig) {\n            var conditions = mailSysConfig[tag].conditions\n            for (var index in conditions) {\n                var oneElement = conditions[index]\n                var conditionType = oneElement.conditionType\n                var conditionPara = oneElement.conditionPara\n                \n                if (conditionType == 1) {\n                    if (conditionPara == this.level){\n                        mailTagWillShow = true\n                        var currentConditionIndex = require(\"dataMgr\").playerData.mailConditionIndex[tag]\n                        if (this.level == 2) {\n                            cc.log(index, currentConditionIndex)\n                        }\n                        \n                        if (index < currentConditionIndex || currentConditionIndex == -1){\n                            mailHasSend = true\n                        }\n                        \n                        return [mailTagWillShow,mailHasSend]\n                    }\n                }\n                else if (conditionType == 2) {\n                    if (conditionPara.levelId == this.level) {\n                        mailTagWillShow = true\n                    }\n                    var currentConditionIndex = require(\"dataMgr\").playerData.mailConditionIndex[tag]\n                    if (index < currentConditionIndex || currentConditionIndex == -1) {\n                        mailHasSend = true\n                    }\n\n                    return [mailTagWillShow,mailHasSend]\n                }\n            }\n        }\n        return false\n    },\n\n    dataMonitored(key,value) {\n        var mailConfig = require(\"mailConfig\")\n        var mailIds = Object.keys(mailConfig)\n        if (mailIds.indexOf(key) != -1) {\n            this.setupMailTag()\n        }\n    }\n    // update (dt) {},\n});\n"]}