{"version":3,"sources":["../../../../assets/scripts/assets/scripts/levelMgr.js"],"names":["cc","Class","extends","Component","properties","bullets","minDis","maxOffsetDegree","directionTryto","flag","helper","walls","targetsNum","get","_targetsNum","set","value","onSuccess","linePrefab","Prefab","bulletPrefab","playerData","retryButton","Node","heartForRetryCost","_heartForRetryCostwe","getChildByName","getComponent","Label","string","toString","heart","_heart","find","maxHeart","Button","interactable","isMoved","_maxHeart","_isMoved","level","onLoad","Helper","require","start","node","on","onTouchStart","onTouchMove","onTouchEnd","bulletsNode","children","currentLevel","delegate","wallsNode","length","graphic","Graphics","startPoint","pointNodes","index","point","moveTo","x","y","lineTo","close","stroke","fill","event","delta","getDelta","direction","getPossiableDirection","equals","startLocation","getStartLocation","disFromStart","v2","getLocationX","getLocationY","mag","moveBullets","onDestroy","off","isPossiableWithGivenDirection","givenDirection","angle","signAngle","degree","Math","PI","abs","status","shadows","bullet","bulletMgr","nearestWallInfo","getNearestWallInfo","shadowNode","suitablePosition","width","height","dis","originNode","push","resolveShadows","targetPosition","movingDirection","normalizeSelf","movingTime","v","vx","vy","movingSpeed","director","loadScene","msgObj","makeMessageObj","message","playerId","id","commitBody","physicalPowerCostedFlag","self","successCallBack","xhr","response","responseText","JSON","parse","type","sendMessageByMsgObj","oneShadow","i","anotherShadow","testResult","_selectStaticShadowAndShaodwForResolved","staticShadow","tempShadow","shadowForResolved","staticBorderLines","getLinesOfOneNode","staticLine","ray","makeRay","k","line","rayTest","newPoint2","p2","p1","newPoint1","ray1","position","currentDistance","targetDis","getDisToSelfBorder","disFromBorder","getSuitablePoint","updatedDis","shadow1","shadow2","temp","s1","s2","d","target","givenType","points","getPointsOfOneNode","lines","key","result","generateWalls","levelConfig","config","wallPathes","onePath","realPoints","realPoint","currentPoint","lineWidth","offset","wallNodes","isClosed","instantiate","directedLine","offsetDirection","rotate","addChild","bulletConfig","con","scale","onClickRetryButton","gameMgr","enterLevelScene","onAllRetryFailed","onClickBackButton"],"mappings":"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","file":"levelMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        bullets: [],\n        minDis: 100,\n        maxOffsetDegree: 30,\n        directionTryto: null,\n        flag: false,\n        helper: null,\n\n        walls: [],\n        targetsNum: {\n            get() {\n                return this._targetsNum\n            },\n            set(value) {\n                this._targetsNum = value\n                if (value == 0) {\n                    this.onSuccess()\n                }\n            }\n        },\n\n        linePrefab: cc.Prefab,\n        bulletPrefab: cc.Prefab,\n\n\n        playerData: null,\n        retryButton: cc.Node,\n        heartForRetryCost: {\n            get() {\n                return this._heartForRetryCostwe\n            },\n            set(value){\n                this._heartForRetryCostwe = value\n                this.retryButton.getChildByName(\"heartCostLabel\").getComponent(cc.Label).string = value.toString()\n            } \n        },\n\n        heart: {\n            get() {\n                return this._heart\n            },\n            set(value) {\n                this._heart = value\n                cc.find(\"Canvas/uiNode/heartLabel\").getComponent(cc.Label).string = value.toString() + \" / \" + this.maxHeart.toString()\n                if (value < this.heartForRetryCost) {\n                    this.retryButton.getComponent(cc.Button).interactable = false\n                }\n                else {\n                    if (this.isMoved == false) {\n                        return\n                    }\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n\n        maxHeart: {\n            get() {\n                return this._maxHeart\n            },\n            set(value) {\n                this._maxHeart = value\n            }\n        },\n\n        isMoved: {\n            get() {\n                if (this._isMoved == null) {\n                    this._isMoved = false\n                }\n                return this._isMoved\n            },\n            set(value) {\n                this._isMoved = value\n                if (value == true && this.heartForRetryCost <= this.heart) {\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n        level: null\n        \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var Helper = require(\"helper\")\n        this.helper = new Helper()\n        //this.level = 1\n    },\n\n    start () {\n        this.node.on(\"touchstart\",this.onTouchStart,this)\n        this.node.on(\"touchmove\",this.onTouchMove,this)\n        this.node.on(\"touchend\",this.onTouchEnd,this)\n        //this.generateWalls()\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        this.bullets = bulletsNode.children\n        this.playerData = require(\"dataMgr\").playerData\n\n        this.maxHeart = this.playerData.maxHeart\n        if (this.level == this.playerData.currentLevel) {\n            this.heartForRetryCost = require(\"levelConfig\")[this.playerData.currentLevel.toString()].heartForRetryCost\n        }\n        else {\n            this.heartForRetryCost = 0\n        }\n    \n        this.heart = this.playerData.heart\n        require(\"networkMgr\").delegate = this\n\n        var wallsNode = cc.find(\"Canvas/walls\")\n        this.walls = wallsNode.children\n        this.targetsNum = cc.find(\"Canvas/targets\").children.length\n\n        var graphic = cc.find(\"Canvas/fillNodes\").getComponent(cc.Graphics)\n        var startPoint = null\n        var pointNodes = cc.find(\"Canvas/fillNodes\").children\n        if (pointNodes.length == 0) {\n            return\n        }\n        for (var index in pointNodes) {\n            var point = pointNodes[index]\n            if (startPoint == null) {\n                graphic.moveTo(point.x, point.y)\n                startPoint = point\n            }\n\n            graphic.lineTo(point.x, point.y)\n        }\n        graphic.close()\n        graphic.stroke()\n        graphic.fill()\n    },\n\n    // update (dt) {},\n\n    onTouchStart(event){\n        this.directionTryto = null\n        this.flag = true\n    },\n    onTouchMove(event) {\n        if (this.flag == false) {\n            return\n        }\n        var delta = event.getDelta()\n        var direction = this.getPossiableDirection(delta)\n\n        if (direction == -1) {\n            this.flag = false\n            return\n        }\n        if (this.directionTryto == null) {\n            this.directionTryto = direction\n        }\n        if (direction.equals(this.directionTryto) == false) {\n            this.flag = false\n            return\n        }\n\n        var startLocation = event.getStartLocation()\n        var disFromStart = cc.v2(event.getLocationX() - startLocation.x, event.getLocationY() - startLocation.y).mag()\n        if (disFromStart >= this.minDis) {\n            //valid move\n            this.flag = false\n            this.moveBullets(this.directionTryto)\n        }\n    },\n    onTouchEnd(event) {\n\n    },\n\n    onDestroy() {\n        this.node.off(\"touchstart\",this.onTouchStart,this)\n        this.node.off(\"touchmove\",this.onTouchMove,this)\n        this.node.off(\"touchend\",this.onTouchEnd,this)\n    },\n\n    getPossiableDirection(delta) {\n        if (this.isPossiableWithGivenDirection(delta,cc.v2(1,0)) == true) {\n            return cc.v2(1,0) //right\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,-1)) == true) {\n            return cc.v2(0,-1) //down\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(-1,0)) == true) {\n            return cc.v2(-1,0) //left\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,1)) == true) {\n            return cc.v2(0,1) //up\n        }\n        else {\n            return -1 //no direction match\n        }\n    },\n    \n    isPossiableWithGivenDirection(delta,givenDirection) {\n        var angle = delta.signAngle(givenDirection)\n        var degree = angle / Math.PI * 180\n        if (Math.abs(degree) <= this.maxOffsetDegree) {\n            return true\n        }\n        else {\n            return false\n        }\n    },\n    \n    moveBullets(direction) {\n        for (var index in this.bullets) {\n            if (this.bullets[index].getComponent(\"bulletMgr\").status != 0) {\n                return\n            }\n        }\n        var shadows = []\n        for (var index in this.bullets) {\n            var bullet = this.bullets[index]\n            var bulletMgr = bullet.getComponent(\"bulletMgr\")\n            var nearestWallInfo = bulletMgr.getNearestWallInfo(direction)\n            var shadowNode = {\n                x: nearestWallInfo.suitablePosition.x,\n                y: nearestWallInfo.suitablePosition.y,\n                width: bullet.width,\n                height: bullet.height,\n                dis: nearestWallInfo.dis,\n                originNode: bullet\n            }\n            shadows.push(shadowNode)\n        }\n\n        //resolve shadows\n\n        while(this.resolveShadows(shadows,direction) == false) {\n\n        }\n\n        for (var index in shadows) {\n            var shadowNode = shadows[index]\n            var originNode = shadowNode.originNode\n            if (shadowNode.x == originNode.x && shadowNode.y == originNode.y) {\n                continue\n            }\n            var bulletMgr = originNode.getComponent(\"bulletMgr\")\n            bulletMgr.targetPosition = cc.v2(shadowNode.x, shadowNode.y)\n            bulletMgr.movingDirection = direction\n            \n            bulletMgr.movingDirection.normalizeSelf()\n            if (bulletMgr.movingTime != null) {\n                var dis = cc.v2(bulletMgr.targetPosition.x - originNode.x, bulletMgr.targetPosition.y - originNode.y).mag()\n                var v = dis / bulletMgr.movingTime\n\n                bulletMgr.vx = v * bulletMgr.movingDirection.x\n                bulletMgr.vy = v * bulletMgr.movingDirection.y\n            }\n            else {\n                bulletMgr.vx = bulletMgr.movingDirection.x * bulletMgr.movingSpeed\n                bulletMgr.vy = bulletMgr.movingDirection.y * bulletMgr.movingSpeed\n            }\n            bulletMgr.status = 1\n            this.isMoved = true\n        }\n    },\n\n    onSuccess() {\n        if (this.level != this.playerData.currentLevel) {\n            cc.director.loadScene(\"mainScene\")\n            return\n        }\n        var msgObj = require(\"networkMgr\").makeMessageObj(\"dataModule\",\"commitMessageTyp\")\n        msgObj.message.playerId = this.playerData.id\n        msgObj.message.commitBody = {\n            currentLevel: this.playerData.currentLevel + 1,\n            physicalPowerCostedFlag: 0    \n        }\n        var self = this\n        msgObj.successCallBack = function(xhr) {\n            var response = xhr.responseText\n            response = JSON.parse(response)\n            if (response.type == \"commitSuccess\") {\n                self.playerData.currentLevel += 1\n                self.playerData.physicalPowerCostedFlag = 0\n                cc.director.loadScene(\"mainScene\")\n            }\n        }\n\n        require(\"networkMgr\").sendMessageByMsgObj(msgObj)\n        \n    },\n\n    resolveShadows(shadows,direction) {\n        for (var index in shadows) {\n            var oneShadow = shadows[index]\n            for (var i in shadows) {\n                var anotherShadow = shadows[i]\n                if (oneShadow == anotherShadow) {\n                    continue\n                }\n\n                var testResult = this._selectStaticShadowAndShaodwForResolved(oneShadow,anotherShadow,direction)\n                if (testResult != false) {\n                    var staticShadow = testResult.staticShadow\n                    var tempShadow = testResult.shadowForResolved\n                    \n                    var staticBorderLines = this.helper.getLinesOfOneNode(staticShadow)\n                    var staticLine = null\n                    var ray = this.helper.makeRay(cc.v2(staticShadow.x,staticShadow.y),1000,cc.v2(-direction.x,-direction.y))\n\n                    for(var k in staticBorderLines) {\n                        var line = staticBorderLines[k]\n                        var dis = this.helper.rayTest(ray,line)\n                        if (dis != false) {\n                            staticLine = line\n                            break\n                        }\n                    }\n                    var newPoint2 = this.helper.makeRay(staticLine.p2,1000,cc.v2(staticLine.p2.x - staticLine.p1.x, staticLine.p2.y - staticLine.p1.y)).p2\n                    var newPoint1 = this.helper.makeRay(staticLine.p1,1000,cc.v2(staticLine.p1.x - staticLine.p2.x, staticLine.p1.y - staticLine.p2.y)).p2\n                    staticLine = {\n                        p1: newPoint1,\n                        p2: newPoint2\n                    }\n                    var ray1 = this.helper.makeRay(tempShadow.originNode.position,3000,direction)\n                    var currentDistance = this.helper.rayTest(ray1,staticLine)\n                    var targetDis = this.helper.getDisToSelfBorder(tempShadow.originNode,direction) + tempShadow.originNode.getComponent(\"bulletMgr\").disFromBorder\n                    var suitablePosition = this.helper.getSuitablePoint(tempShadow.originNode.position,currentDistance,targetDis,direction)\n                    var updatedDis = cc.v2(suitablePosition.x - tempShadow.originNode.x, suitablePosition.y - tempShadow.originNode.y).mag()\n                    tempShadow.x = suitablePosition.x\n                    tempShadow.y = suitablePosition.y\n                    tempShadow.dis = updatedDis\n                    return false\n                }\n\n            }\n        }\n        return true\n    },\n    _selectStaticShadowAndShaodwForResolved(shadow1, shadow2, direction) {\n        var temp = function(s1,s2,d,target,givenType) {\n            var points = target.helper.getPointsOfOneNode(s1.originNode)\n            points[\"origin\"] = cc.v2(s1.originNode.x,s1.originNode.y)\n            for (var index in points) {\n                var ray = target.helper.makeRay(points[index],s1.dis,d)\n                var lines = null\n                if (givenType == 1) {\n                    lines = target.helper.getLinesOfOneNode(s2.originNode)\n                }\n                if (givenType == 2) {\n                    lines = target.helper.getLinesOfOneNode(s2)\n                }\n                for (var key in lines) {\n                    var line = lines[key]\n                    var result = target.helper.rayTest(ray,line)\n                    if (result != false) {\n\n                        return true\n                    }\n                }\n            }\n            return false\n        }\n\n        if (temp(shadow1,shadow2,direction,this,1) == true && temp(shadow1,shadow2,direction,this,2) == true) {\n            return {\n                staticShadow: shadow2,\n                shadowForResolved: shadow1\n            }\n        }\n\n        if (temp(shadow2,shadow1,direction,this,1) == true && temp(shadow2,shadow1,direction,this,2) == true) {\n            return {\n                staticShadow: shadow1,\n                shadowForResolved: shadow2\n            }\n        }\n\n        return false\n    },\n\n    generateWalls() {\n        var levelConfig = require(\"levelConfig\")\n        var currentLevel = this.level\n\n        var config = levelConfig[currentLevel]\n        var wallsNode = cc.find(\"Canvas/walls\")\n        for (var index in config.wallPathes) {\n            var onePath = config.wallPathes[index]\n\n            var points = onePath.points\n            var realPoints = []\n            for (var i in points) {\n                var realPoint = null\n                if (i == 0) {\n                    realPoint = cc.v2(points[i].x, points[i].y)\n                }\n                else {\n                    var currentPoint = points[i]\n                    realPoint = cc.v2(realPoints[i - 1].x + currentPoint.x, realPoints[i - 1].y + currentPoint.y)\n                }\n                \n                realPoints.push(realPoint)\n            }\n            var lineWidth = onePath.lineWidth\n            var offset = onePath.offset\n            var wallNodes = []\n            var isClosed = onePath.isClosed\n            if (isClosed == true) {\n                var startPoint = realPoints[0]\n                realPoints.push(startPoint)\n            }\n            for (var i in realPoints) {\n                if (i == 0) {\n                    continue\n                }\n                \n                var node = cc.instantiate(this.linePrefab)\n                node.height = lineWidth\n                var directedLine = cc.v2(realPoints[i].x - realPoints[i - 1].x, realPoints[i].y - realPoints[i - 1].y)\n                node.width = directedLine.mag()\n    \n                var degree = directedLine.signAngle(cc.v2(1,0)) / Math.PI * 180\n                node.angle = -degree\n                node.x = realPoints[i].x - directedLine.x / 2\n                node.y = realPoints[i].y - directedLine.y / 2\n                var offsetDirection = directedLine.rotate(Math.PI / 2)\n                offsetDirection.normalizeSelf()\n                node.x += node.height / 2 * offsetDirection.x\n                node.y += node.height / 2 * offsetDirection.y\n\n                node.x += offset.x\n                node.y += offset.y\n                wallNodes.push(node)\n                wallsNode.addChild(node)                \n            }\n        }\n\n        var bulletConfig = config.bullets\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        for (var index in bulletConfig) {\n            var con = bulletConfig[index]\n            var bullet = cc.instantiate(this.bulletPrefab)\n            bullet.x = con.x\n            bullet.y = con.y\n            bullet.width = bullet.width * con.scale\n            bullet.height = bullet.height * con.scale\n            bulletsNode.addChild(bullet)\n        } \n    },\n\n\n    onClickRetryButton() {\n        var gameMgr = require(\"gameMgr\")\n        if (this.heartForRetryCost == 0) {\n            gameMgr.enterLevelScene(this.level)\n            return\n        }\n        var temp = this.heart - this.heartForRetryCost\n        if (temp < 0) {\n            return\n        }\n        \n        var msgObj = require(\"networkMgr\").makeMessageObj(\"dataModule\",\"commitMessageTyp\")\n        msgObj.message.playerId = this.playerData.id\n        msgObj.message.commitBody = {\n            heart: temp\n        }\n        var self = this\n        msgObj.successCallBack = function(xhr) {\n            var response = xhr.responseText\n            response = JSON.parse(response)\n\n            if (response.type == \"commitSuccess\") {\n                self.heart = temp\n                self.playerData.heart = temp\n                gameMgr.enterLevelScene(self.level)\n            }\n        }\n        this.retryButton.getComponent(cc.Button).interactable = false\n        require(\"networkMgr\").sendMessageByMsgObj(msgObj)\n    },\n    onAllRetryFailed() {\n        this.retryButton.getComponent(cc.Button).interactable = true\n    },\n\n    onClickBackButton() {\n        cc.director.loadScene(\"mainScene\")\n    }\n\n});\n\n"]}