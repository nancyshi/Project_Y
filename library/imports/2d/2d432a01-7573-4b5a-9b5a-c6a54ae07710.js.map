{"version":3,"sources":["../../../../assets/scripts/assets/scripts/_mainSceneMgr.js"],"names":["cc","Class","extends","Component","properties","playerData","levelsStartPosition","v2","levelsHorDis","levelsVerDis","levelsHorNum","levelNodePrefab","Prefab","lockedLevelColor","color","unlockedLevelColor","currentLevelColor","physicalPower","get","_physicalPower","set","value","node","getChildByName","getComponent","Label","string","toString","physicalPowerForChallengeCost","_physicalPowerForChallengeCost","physicalPowerLabel","challengeButton","commentLabel","find","physicalPowerIcon","active","Button","interactable","heartForChallengeCost","_heartForChallengeCost","heartLabel","heartIcon","heart","selectedLevel","_selectedLevel","currentLevel","physicalPowerCostedFlag","temp","require","physicalPowerCost","initAdWatchedFlag","Math","round","heartForRetryCost","levelAresNodes","selectedLevelAreaNode","_selectedLevelAreaNode","selectedEffect","x","y","tween","to","start","Node","default","_heart","onLoad","playerName","name","delegate","signInButton","on","showSystem","redPointShowCondition","signInStatus","welfaryButton","repeatForever","angle","delay","addHeartButton","addPhysicalPowerButton","mailButton","mails","unReadNum","key","oneMail","status","setupSection","currentSection","givenSection","complete","sectionConfig","config","sectionTitle","sectionDescrip","levels","index","strForShow","parseInt","length","instantiate","label","width","floor","checkLevelStatus","level","addChild","url","backgroundPath","self","loader","loadRes","SpriteFrame","err","res","Sprite","spriteFrame","checkSectionStatus","givenLevel","i","belongedSection","sectionCheckResult","oneLevel","onClickChallengeButton","gameMgr","enterLevelScene","commitBody","flagValue","successCallBack","commitPlayerDataToServer","onAllRetryFailed","dataMonitored"],"mappings":"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","file":"_mainSceneMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        playerData: null,\n        levelsStartPosition: cc.v2(0,0),\n        levelsHorDis: 60,\n        levelsVerDis: 60,\n        levelsHorNum: 5,\n        levelNodePrefab: cc.Prefab,\n        lockedLevelColor: cc.color,\n        unlockedLevelColor: cc.color,\n        currentLevelColor: cc.color,\n\n        physicalPower: {\n            get() {\n                return this._physicalPower\n            },\n            set(value) {\n                this._physicalPower = value\n                this.node.getChildByName(\"physicalPowerLabel\").getComponent(cc.Label).string = this.playerData.physicalPower.toString()\n            }\n        },\n\n        // maxPhysicalPower: {\n        //     get() {\n        //         return this._maxPhysicalPower\n        //     },\n        //     set(value) {\n        //         this._maxPhysicalPower = value\n        //     }\n        // },\n\n        physicalPowerForChallengeCost: {\n            get() {\n                return this._physicalPowerForChallengeCost\n            },\n            set(value) {\n                this._physicalPowerForChallengeCost = value\n                var physicalPowerLabel = this.challengeButton.getChildByName(\"physicalPowerLabel\")\n                var commentLabel = cc.find(\"Canvas/commentLabel\")\n                var physicalPowerIcon = this.challengeButton.getChildByName(\"physicalPower\")\n                if (value == null) {\n                    physicalPowerIcon.active = false\n                    physicalPowerLabel.active = false\n                }\n                else {\n                    physicalPowerIcon.active = true\n                    physicalPowerLabel.active = true\n\n                    physicalPowerLabel.getComponent(cc.Label).string = value.toString()\n                    if (value <= this.physicalPower) {\n                        this.challengeButton.getComponent(cc.Button).interactable = true\n                        if (value == 0) {\n                            commentLabel.getComponent(cc.Label).string = \"已挑战过的关卡不会消耗体力\"\n                        }\n                        else {\n                            commentLabel.getComponent(cc.Label).string = \"每天挑战每个新的关卡时会消耗体力\"\n                        }\n                    }\n                    else {\n                        this.challengeButton.getComponent(cc.Button).interactable = false\n                        commentLabel.getComponent(cc.Label).string = \"每天挑战每个新的关卡时会消耗体力\"\n                    }\n                }\n            }\n        },\n\n        heartForChallengeCost: {\n            get() {\n                return this._heartForChallengeCost\n            },\n            set(value) {\n                this._heartForChallengeCost = value\n                var heartLabel = this.challengeButton.getChildByName(\"heartLabel\")\n                var heartIcon = this.challengeButton.getChildByName(\"heart\")\n                if (value == null) {\n                    heartLabel.active = false\n                    heartIcon.active = false\n                }\n                else {\n                    heartLabel.active = true\n                    heartIcon.active = true\n\n                    heartLabel.getComponent(cc.Label).string = value.toString()\n                    if (value <= this.heart) {\n                        this.challengeButton.getComponent(cc.Button).interactable = true\n                    }\n                    else {\n                        this.challengeButton.getComponent(cc.Button).interactable = false\n                    }\n                }\n            }\n        }, \n\n        selectedLevel: {\n            get() {\n                return this._selectedLevel\n            },\n            set(value) {\n                this._selectedLevel = value\n                if (value != null) {\n                    if (value == this.playerData.currentLevel && this.playerData.physicalPowerCostedFlag == 0) {\n                        this.heartForChallengeCost = null\n                        var temp = require(\"levelConfig\")[value].physicalPowerCost\n                        if (this.playerData.initAdWatchedFlag == 1) {\n                            temp = Math.round(temp / 2)\n                        }\n                        this.physicalPowerForChallengeCost = temp\n                    }\n                    else if (value == this.playerData.currentLevel && this.playerData.physicalPowerCostedFlag == 1) {\n                        this.physicalPowerForChallengeCost = null\n                        this.heartForChallengeCost = require(\"levelConfig\")[value].heartForRetryCost\n                    }\n                    else{\n                        this.heartForChallengeCost = null\n                        this.physicalPowerForChallengeCost = 0\n                    }\n                    if (this.levelAresNodes[value] != null) {\n                        this.selectedLevelAreaNode = this.levelAresNodes[value]\n                    }\n                }\n            }\n        },\n\n        selectedLevelAreaNode: {\n            get() {\n                return this._selectedLevelAreaNode\n            },\n            set(value) {\n                this._selectedLevelAreaNode = value\n                if (value != null) {\n                    if (this.selectedEffect.active == false) {\n                        this.selectedEffect.x = this.selectedLevelAreaNode.x\n                        this.selectedEffect.y = this.selectedLevelAreaNode.y\n                        this.selectedEffect.active = true\n                    }\n                    else {\n                        cc.tween(this.selectedEffect)\n                            .to(0.2,{x: this.selectedLevelAreaNode.x, y: this.selectedLevelAreaNode.y})\n                            .start()\n                    }\n                }\n                else {\n                    this.selectedEffect.active = false\n                }\n            }\n        },\n\n        selectedEffect: cc.Node,\n        levelAresNodes: {\n            default: {}\n        },\n\n        challengeButton: null,\n        heartLabel: cc.Label,\n        heart: {\n            get() {\n                return this._heart\n            },\n            set(value) {\n                this._heart = value\n                this.heartLabel.string = value.toString()\n            }\n        },\n        // maxHeart: null\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.playerData = require(\"dataMgr\").playerData\n        this.lockedLevelColor = cc.color(191,191,191)\n        this.unlockedLevelColor = cc.color(102,102,102)\n        this.currentLevelColor = cc.color(188,36,36)\n        this.challengeButton = this.node.getChildByName(\"challengeButton\")\n        this.playerName = this.playerData.name\n        this.physicalPower = this.playerData.physicalPower\n        this.heart = this.playerData.heart\n       \n        require(\"networkMgr\").delegate = this\n\n        var signInButton = this.node.getChildByName(\"signInButton\")\n        signInButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"signInSys\")\n        })\n        signInButton.getComponent(\"redPointMgr\").redPointShowCondition = function(){\n            var signInStatus = require(\"dataMgr\").playerData.signInStatus\n            switch(signInStatus) {\n                case 1:\n                    return true\n                case 2:\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        var welfaryButton = this.node.getChildByName(\"welfaryButton\")\n        if (require(\"dataMgr\").playerData.initAdWatchedFlag == 1) {\n            welfaryButton.active = false\n        }\n        else {\n            welfaryButton.on(\"click\",function(){\n                require(\"systemsMgr\").showSystem(\"welfarySys\")\n            })\n            cc.tween(welfaryButton)\n                .repeatForever(\n                    cc.tween()\n                        .to(0.3,{angle: -45})\n                        .to(0.3,{angle: 0})\n                        .to(0.3,{angle: 45})\n                        .to(0.3,{angle: 0})\n                        .delay(1)\n                )\n                .start()\n        }\n        \n        var addHeartButton = this.node.getChildByName(\"addButton_heart\")\n        addHeartButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"addPropertyNumSys\",2)\n        })\n\n        var addPhysicalPowerButton = this.node.getChildByName(\"addButton_phy\")\n        addPhysicalPowerButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"addPropertyNumSys\",1)\n        })\n\n        var mailButton = this.node.getChildByName(\"mailButton\")\n        mailButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"mailSys\")\n        })\n        mailButton.getComponent(\"redPointMgr\").redPointShowCondition = function() {\n            var mails = require(\"dataMgr\").playerData.mails\n            var unReadNum = 0\n            for (var key in mails) {\n                var oneMail = mails[key]\n                if (oneMail.status == 0) {\n                    unReadNum += 1\n                }\n            }\n            if (unReadNum > 0) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n\n        this.setupSection(this.playerData.currentSection)\n    },\n\n    start () {\n        \n    },\n\n    setupSection(givenSection, complete = function(){}) {\n        this.selectedLevel = null\n        \n        var sectionConfig = require(\"sectionConfig\")\n        var config = sectionConfig[givenSection]\n\n        this.node.getChildByName(\"sectionTitleLabel\").getComponent(cc.Label).string = config.sectionTitle\n        this.node.getChildByName(\"sectionDescripLabel\").getComponent(cc.Label).string = config.sectionDescrip\n        \n\n        var levels = config.levels\n        this.levelAresNodes = {}\n        for (var index in levels) {\n            var strForShow = parseInt(index) + 1\n            strForShow = strForShow.toString()\n            if (strForShow.length == 1) {\n                strForShow = \"0\" + strForShow\n            }\n\n            var node = cc.instantiate(this.levelNodePrefab)\n            var label = node.getComponent(cc.Label)\n            label.string = strForShow\n\n            node.x = (index % this.levelsHorNum) * (this.levelsHorDis + node.width) + this.levelsStartPosition.x\n            node.y = -Math.floor(index / this.levelsHorNum) * (this.levelsVerDis + node.width) + this.levelsStartPosition.y\n\n            var status = this.checkLevelStatus(levels[index])\n            switch(status) {\n                case 0:\n                    node.color = this.lockedLevelColor\n                    break\n                case 1:\n                    node.color = this.unlockedLevelColor\n                    break\n                case 2:\n                    node.color = this.currentLevelColor\n                    break\n            }\n            node.getComponent(\"levelAreaNodeMgr\").delegate = this\n            node.getComponent(\"levelAreaNodeMgr\").level = levels[index]\n            this.levelAresNodes[levels[index]] = node\n            cc.find(\"Canvas/levelsArea\").addChild(node)\n        }\n        var url = config.backgroundPath\n        var self = this\n        cc.loader.loadRes(url,cc.SpriteFrame,function(err,res){\n            self.node.getChildByName(\"sectionBg\").getComponent(cc.Sprite).spriteFrame = res\n            complete()\n        })\n\n        if (givenSection == this.playerData.currentSection) {\n            this.selectedLevel = this.playerData.currentLevel\n        }\n    },\n\n    checkSectionStatus(givenSection) {\n        var currentSection = this.playerData.currentSection\n        if (givenSection > currentSection) {\n            return 0 //locked\n        }\n        else if (givenSection < currentSection) {\n            return 1 //unlocked\n        }\n        else if (givenSection == currentSection) {\n            return 2 //current\n        }\n    },\n\n    checkLevelStatus(givenLevel) {\n        var sectionConfig = require(\"sectionConfig\")\n\n        var temp = function() {\n            for (var key in sectionConfig) {\n                var levels = sectionConfig[key].levels\n                for (var i in levels) {\n                    if (givenLevel == levels[i]) {\n                        return key\n                    }\n                }\n            }\n\n            return false\n        }\n\n        var belongedSection = temp()\n        if (belongedSection != false) {\n            belongedSection = parseInt(belongedSection)\n        }\n        else {\n            return false // no such level\n        }\n\n        var sectionCheckResult = this.checkSectionStatus(belongedSection)\n        switch(sectionCheckResult) {\n            case 0:\n                return 0 //locked \n            case 1: \n                return 1 //unlocked\n            case 2:\n                var currentLevel = this.playerData.currentLevel\n                if (currentLevel == givenLevel) {\n                    return 2 //current\n                }\n                \n                for (var index in require(\"sectionConfig\")[belongedSection].levels) {\n                    var oneLevel = require(\"sectionConfig\")[belongedSection].levels[index]\n                    if (oneLevel == givenLevel) {\n                        return 1\n                    }\n\n                    if (oneLevel == currentLevel) {\n                        return 0\n                    }\n                }\n        }\n    },\n\n\n    onClickChallengeButton() {\n        var gameMgr = require(\"gameMgr\")\n        this.challengeButton.getComponent(cc.Button).interactable = false\n        if (this.physicalPowerForChallengeCost == 0) {\n            gameMgr.enterLevelScene(this.selectedLevel)\n            return\n        }\n        \n        var temp = null\n        var commitBody = null\n        if (this.physicalPowerForChallengeCost != null) {\n            temp = this.playerData.physicalPower - this.physicalPowerForChallengeCost\n            if (temp < 0) {\n                return\n            }\n            var flagValue = this.playerData.physicalPowerCostedFlag\n            if(this.selectedLevel == this.playerData.currentLevel && this.playerData.physicalPowerCostedFlag == 0) {\n                flagValue = 1\n            }\n            commitBody = {\n                physicalPower: temp,\n                physicalPowerCostedFlag: flagValue\n            }\n        }\n        \n        if (this.heartForChallengeCost != null) {\n            temp = this.playerData.heart - this.heartForChallengeCost\n            if (temp < 0) {\n                return\n            }\n            commitBody = {\n                heart: temp\n            }\n        }\n        \n        var self = this\n        var successCallBack = function() {\n            if (self.physicalPowerForChallengeCost != null) {\n                self.playerData.physicalPower = temp\n                self.playerData.physicalPowerCostedFlag = flagValue\n            }\n\n            if (self.heartForChallengeCost != null) {\n                self.playerData.heart = temp\n            }\n\n            gameMgr.enterLevelScene(self.selectedLevel)\n        }\n\n\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n    },\n\n\n    onAllRetryFailed() {\n        this.challengeButton.getComponent(cc.Button).interactable = true\n    },\n\n    dataMonitored(key,value) {\n        if (key == \"physicalPower\") {\n            this.physicalPower = value\n        }\n        else if (key == \"heart\") {\n            this.heart = value\n        }\n    }\n\n\n});\n"]}