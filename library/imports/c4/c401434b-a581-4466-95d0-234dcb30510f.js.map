{"version":3,"sources":["../../../../assets/scripts/assets/scripts/levelMgr.js"],"names":["cc","Class","extends","Component","properties","bullets","minDis","maxOffsetDegree","directionTryto","flag","helper","walls","targetsNum","get","_targetsNum","set","value","onSuccess","linePrefab","Prefab","bulletPrefab","playerData","retryButton","Node","heartForRetryCost","_heartForRetryCostwe","getChildByName","getComponent","Label","string","toString","heart","_heart","find","Button","interactable","isMoved","maxHeart","_maxHeart","_isMoved","currentStepNum","_currentStepNum","currentStepNumLabel","node","require","getFormatedString","level","soundEffect","onLoad","textConfig","Helper","setupNodesByConfig","self","loader","loadRes","err","res","getTextByIdAndLanguageType","start","on","onTouchStart","onTouchMove","onTouchEnd","bulletsNode","children","currentLevel","delegate","wallsNode","length","graphic","Graphics","startPoint","pointNodes","index","point","moveTo","x","y","lineTo","close","stroke","fill","minStepNumLabel","minStepKey","minStepNum","minSteps","undefined","isGuilded","guildNode","instantiate","reses","addChild","playBgm","levelConfig","bgmPath","audioEngine","stopAll","play","event","startLocation","getStartLocation","tmpDirection","v2","getLocationX","getLocationY","dis","mag","direction","getPossiableDirection","moveBullets","onDestroy","off","delta","isPossiableWithGivenDirection","givenDirection","angle","signAngle","degree","Math","PI","abs","status","shadows","bullet","bulletMgr","nearestWallInfo","getNearestWallInfo","shadowNode","suitablePosition","width","height","originNode","push","maxTryTime","resolveShadows","willAddStepNum","isTwoPositionSimilarEqual","targetPosition","movingDirection","normalizeSelf","movingTime","v","vx","vy","movingSpeed","scheduleOnce","levels","currentSection","indexOf","newLevel","newSection","commitBody","newLevels","physicalPowerCostedFlag","preLevel","successCallBack","animatedToScene","commitPlayerDataToServer","oneShadow","i","anotherShadow","testResult","_selectStaticShadowAndShaodwForResolved","staticShadow","tempShadow","shadowForResolved","staticBorderLines","getLinesOfOneNode","staticLine","ray","makeRay","k","line","rayTest","newPoint2","p2","p1","newPoint1","ray1","position","currentDistance","targetDis","getDisToSelfBorder","disFromBorder","getSuitablePoint","updatedDis","shadow1","shadow2","temp","s1","s2","originCrossFlag","shadowCrossFlag","originLines","key","oneLine","isOneNodeWillCollidWithOneLineInDirection","shadowLines","result","generateWalls","config","wallPathes","onePath","points","realPoints","realPoint","currentPoint","lineWidth","offset","wallNodes","isClosed","directedLine","offsetDirection","rotate","bulletConfig","con","scale","onClickRetryButton","gameMgr","enterLevelScene","onAllRetryFailed","onClickBackButton","wallPrefab","targetPrefab","pathWayPrefab","levelSceneConfig","_setupFillNodes","_setupWalls","_setupTargets","_setupPathWaysNode","_setupBullets","_setupNodePropertyByConfig","givenNode","givenConfig","fillNodesConfig","fillNodes","oneNodeConfig","oneNode","wallsConfig","oneWallConfig","oneWallNode","targetsConfig","targets","oneTargetConfig","oneTargetNode","pathWaysConfig","pathWaysNode","onePathWayConfig","onePathWayNode","name","oneChildConfig","oneChildNode","bulletsConfig","oneBulletConfig","oneBulletNode","basicConfig","basic","mgrConfig","mgr","bulletType","Sprite","spriteFrame","sliderFrame","pathWaysNodeName","pathWaysNodePath","dataMonitored","levelId","slice","parseInt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAS,EAhBD;AAiBRC,gBAAQ,EAjBA;AAkBRC,yBAAiB,EAlBT;AAmBRC,wBAAgB,IAnBR;AAoBRC,cAAM,KApBE;AAqBRC,gBAAQ,IArBA;;AAuBRC,eAAO,EAvBC;AAwBRC,oBAAY;AACRC,eADQ,iBACF;AACF,uBAAO,KAAKC,WAAZ;AACH,aAHO;AAIRC,eAJQ,eAIJC,KAJI,EAIG;AACP,qBAAKF,WAAL,GAAmBE,KAAnB;AACA,oBAAIA,SAAS,CAAb,EAAgB;AACZ,yBAAKC,SAAL;AACH;AACJ;AATO,SAxBJ;;AAoCRC,oBAAYlB,GAAGmB,MApCP;AAqCRC,sBAAcpB,GAAGmB,MArCT;;AAuCRE,oBAAY,IAvCJ;AAwCRC,qBAAatB,GAAGuB,IAxCR;AAyCRC,2BAAmB;AACfX,eADe,iBACT;AACF,uBAAO,KAAKY,oBAAZ;AACH,aAHc;AAIfV,eAJe,eAIXC,KAJW,EAIL;AACN,qBAAKS,oBAAL,GAA4BT,KAA5B;AACA,qBAAKM,WAAL,CAAiBI,cAAjB,CAAgC,gBAAhC,EAAkDC,YAAlD,CAA+D3B,GAAG4B,KAAlE,EAAyEC,MAAzE,GAAkFb,MAAMc,QAAN,EAAlF;AACH;AAPc,SAzCX;;AAmDRC,eAAO;AACHlB,eADG,iBACG;AACF,uBAAO,KAAKmB,MAAZ;AACH,aAHE;AAIHjB,eAJG,eAICC,KAJD,EAIQ;AACP,qBAAKgB,MAAL,GAAchB,KAAd;AACAhB,mBAAGiC,IAAH,CAAQ,0BAAR,EAAoCN,YAApC,CAAiD3B,GAAG4B,KAApD,EAA2DC,MAA3D,GAAoEb,MAAMc,QAAN,EAApE;AACA,oBAAId,QAAQ,KAAKQ,iBAAjB,EAAoC;AAChC,yBAAKF,WAAL,CAAiBK,YAAjB,CAA8B3B,GAAGkC,MAAjC,EAAyCC,YAAzC,GAAwD,KAAxD;AACH,iBAFD,MAGK;AACD,wBAAI,KAAKC,OAAL,IAAgB,KAApB,EAA2B;AACvB;AACH;AACD,yBAAKd,WAAL,CAAiBK,YAAjB,CAA8B3B,GAAGkC,MAAjC,EAAyCC,YAAzC,GAAwD,IAAxD;AACH;AACJ;AAhBE,SAnDC;;AAsERE,kBAAU;AACNxB,eADM,iBACA;AACF,uBAAO,KAAKyB,SAAZ;AACH,aAHK;AAINvB,eAJM,eAIFC,KAJE,EAIK;AACP,qBAAKsB,SAAL,GAAiBtB,KAAjB;AACH;AANK,SAtEF;;AA+ERoB,iBAAS;AACLvB,eADK,iBACC;AACF,oBAAI,KAAK0B,QAAL,IAAiB,IAArB,EAA2B;AACvB,yBAAKA,QAAL,GAAgB,KAAhB;AACH;AACD,uBAAO,KAAKA,QAAZ;AACH,aANI;AAOLxB,eAPK,eAODC,KAPC,EAOM;AACP,qBAAKuB,QAAL,GAAgBvB,KAAhB;AACA,oBAAIA,SAAS,IAAT,IAAiB,KAAKQ,iBAAL,IAA0B,KAAKO,KAApD,EAA2D;AACvD,yBAAKT,WAAL,CAAiBK,YAAjB,CAA8B3B,GAAGkC,MAAjC,EAAyCC,YAAzC,GAAwD,IAAxD;AACH;AACJ;AAZI,SA/ED;AA6FRK,wBAAgB;AACZ3B,eADY,iBACN;AACF,oBAAI,KAAK4B,eAAL,IAAwB,IAA5B,EAAkC;AAC9B,yBAAKA,eAAL,GAAuB,CAAvB;AACH;AACD,uBAAO,KAAKA,eAAZ;AACH,aANW;AAOZ1B,eAPY,eAORC,KAPQ,EAOD;AACP,qBAAKyB,eAAL,GAAuBzB,KAAvB;AACA,oBAAI0B,sBAAsB,KAAKC,IAAL,CAAUjB,cAAV,CAAyB,QAAzB,EAAmCA,cAAnC,CAAkD,qBAAlD,CAA1B;AACA;AACAgB,oCAAoBf,YAApB,CAAiC3B,GAAG4B,KAApC,EAA2CC,MAA3C,GAAoDe,QAAQ,YAAR,EAAsBC,iBAAtB,CAAwC,GAAxC,EAA4C,CAAC7B,MAAMc,QAAN,EAAD,CAA5C,CAApD;AACH;AAZW,SA7FR;AA2GRgB,eAAO,IA3GC;AA4GRC,qBAAa;;AA5GL,KAHP;;AAmHL;;AAEAC,UArHK,oBAqHK;AACN,YAAIC,aAAaL,QAAQ,YAAR,CAAjB;AACA,YAAIM,SAASN,QAAQ,QAAR,CAAb;AACA,aAAKlC,MAAL,GAAc,IAAIwC,MAAJ,EAAd;AACA;AACA,aAAKC,kBAAL;AACA,YAAIC,OAAO,IAAX;AACApD,WAAGqD,MAAH,CAAUC,OAAV,CAAkB,kBAAlB,EAAqC,UAASC,GAAT,EAAaC,GAAb,EAAiB;AAClDJ,iBAAKL,WAAL,GAAmBS,GAAnB;AACH,SAFD;;AAIA,aAAKlC,WAAL,CAAiBI,cAAjB,CAAgC,WAAhC,EAA6CC,YAA7C,CAA0D3B,GAAG4B,KAA7D,EAAoEC,MAApE,GAA6EoB,WAAWQ,0BAAX,CAAsC,GAAtC,CAA7E;AACAzD,WAAGiC,IAAH,CAAQ,mCAAR,EAA6CN,YAA7C,CAA0D3B,GAAG4B,KAA7D,EAAoEC,MAApE,GAA6EoB,WAAWJ,iBAAX,CAA6B,GAA7B,EAAiC,CAAC,CAAD,CAAjC,CAA7E;AACH,KAlII;AAoILa,SApIK,mBAoII;AACL,aAAKf,IAAL,CAAUgB,EAAV,CAAa,YAAb,EAA0B,KAAKC,YAA/B,EAA4C,IAA5C;AACA,aAAKjB,IAAL,CAAUgB,EAAV,CAAa,WAAb,EAAyB,KAAKE,WAA9B,EAA0C,IAA1C;AACA,aAAKlB,IAAL,CAAUgB,EAAV,CAAa,UAAb,EAAwB,KAAKG,UAA7B,EAAwC,IAAxC;AACA;AACA,YAAIC,cAAc/D,GAAGiC,IAAH,CAAQ,gBAAR,CAAlB;AACA,aAAK5B,OAAL,GAAe0D,YAAYC,QAA3B;AACA,aAAK3C,UAAL,GAAkBuB,QAAQ,SAAR,EAAmBvB,UAArC;;AAEA,aAAKgB,QAAL,GAAgB,KAAKhB,UAAL,CAAgBgB,QAAhC;AACA,YAAI,KAAKS,KAAL,IAAc,KAAKzB,UAAL,CAAgB4C,YAAlC,EAAgD;AAC5C,iBAAKzC,iBAAL,GAAyBoB,QAAQ,aAAR,EAAuB,KAAKvB,UAAL,CAAgB4C,YAAhB,CAA6BnC,QAA7B,EAAvB,EAAgEN,iBAAzF;AACH,SAFD,MAGK;AACD,iBAAKA,iBAAL,GAAyB,CAAzB;AACH;;AAED,aAAKO,KAAL,GAAa,KAAKV,UAAL,CAAgBU,KAA7B;AACAa,gBAAQ,YAAR,EAAsBsB,QAAtB,GAAiC,IAAjC;AACA,YAAIC,YAAYnE,GAAGiC,IAAH,CAAQ,cAAR,CAAhB;AACA,aAAKtB,KAAL,GAAawD,UAAUH,QAAvB;AACA,aAAKpD,UAAL,GAAkBZ,GAAGiC,IAAH,CAAQ,gBAAR,EAA0B+B,QAA1B,CAAmCI,MAArD;;AAEA,YAAIC,UAAUrE,GAAGiC,IAAH,CAAQ,kBAAR,EAA4BN,YAA5B,CAAyC3B,GAAGsE,QAA5C,CAAd;AACA,YAAIC,aAAa,IAAjB;AACA,YAAIC,aAAaxE,GAAGiC,IAAH,CAAQ,kBAAR,EAA4B+B,QAA7C;AACA,YAAIQ,WAAWJ,MAAX,IAAqB,CAAzB,EAA4B;AACxB;AACH;AACD,aAAK,IAAIK,KAAT,IAAkBD,UAAlB,EAA8B;AAC1B,gBAAIE,QAAQF,WAAWC,KAAX,CAAZ;AACA,gBAAIF,cAAc,IAAlB,EAAwB;AACpBF,wBAAQM,MAAR,CAAeD,MAAME,CAArB,EAAwBF,MAAMG,CAA9B;AACAN,6BAAaG,KAAb;AACH;;AAEDL,oBAAQS,MAAR,CAAeJ,MAAME,CAArB,EAAwBF,MAAMG,CAA9B;AACH;AACDR,gBAAQU,KAAR;AACAV,gBAAQW,MAAR;AACAX,gBAAQY,IAAR;;AAEA,YAAIC,kBAAkB,KAAKvC,IAAL,CAAUjB,cAAV,CAAyB,QAAzB,EAAmCA,cAAnC,CAAkD,iBAAlD,CAAtB;AACA,YAAIyD,aAAa,mBAAmB,KAAKrC,KAAL,CAAWhB,QAAX,EAApC;AACA,YAAIsD,aAAaxC,QAAQ,SAAR,EAAmBvB,UAAnB,CAA8BgE,QAA9B,CAAuCF,UAAvC,CAAjB;AACA,YAAIC,cAAc,IAAd,IAAsBA,cAAcE,SAAxC,EAAmD;AAC/CF,yBAAaxC,QAAQ,YAAR,EAAsBa,0BAAtB,CAAiD,GAAjD,CAAb;AACH;AACDyB,wBAAgBvD,YAAhB,CAA6B3B,GAAG4B,KAAhC,EAAuCC,MAAvC,GAAgDe,QAAQ,YAAR,EAAsBC,iBAAtB,CAAwC,GAAxC,EAA4C,CAACuC,WAAWtD,QAAX,EAAD,CAA5C,CAAhD;;AAEA,YAAIc,QAAQ,SAAR,EAAmBvB,UAAnB,CAA8BkE,SAA9B,IAA2C,CAA/C,EAAkD;AAC9C,gBAAIC,YAAYxF,GAAGyF,WAAH,CAAe7C,QAAQ,QAAR,EAAkB8C,KAAlB,CAAwB,iBAAxB,CAAf,CAAhB;AACA,iBAAK/C,IAAL,CAAUgD,QAAV,CAAmBH,SAAnB;AACH;AACJ,KA1LI;;;AA4LL;AACAI,WA7LK,qBA6LK;AACN,YAAIC,cAAcjD,QAAQ,aAAR,CAAlB;AACA,YAAIkD,UAAUD,YAAY,KAAK/C,KAAjB,EAAwBgD,OAAtC;AACA9F,WAAGqD,MAAH,CAAUC,OAAV,CAAkBwC,OAAlB,EAA0B,UAASvC,GAAT,EAAaC,GAAb,EAAiB;AACvCxD,eAAG+F,WAAH,CAAeC,OAAf;AACAhG,eAAG+F,WAAH,CAAeE,IAAf,CAAoBzC,GAApB;AACH,SAHD;AAIH,KApMI;AAsMLI,gBAtMK,wBAsMQsC,KAtMR,EAsMc;AACf,aAAK1F,cAAL,GAAsB,IAAtB;AACA,aAAKC,IAAL,GAAY,IAAZ;AACH,KAzMI;AA2MLoD,eA3MK,uBA2MOqC,KA3MP,EA2Mc;AACf,YAAI,KAAKzF,IAAL,IAAa,KAAjB,EAAwB;AACpB;AACH;AACD,YAAI0F,gBAAgBD,MAAME,gBAAN,EAApB;AACA,YAAIC,eAAerG,GAAGsG,EAAH,CAAMJ,MAAMK,YAAN,KAAuBJ,cAAcvB,CAA3C,EAA8CsB,MAAMM,YAAN,KAAuBL,cAActB,CAAnF,CAAnB;AACA,YAAI4B,MAAMJ,aAAaK,GAAb,EAAV;AACA,YAAID,MAAM,KAAKnG,MAAf,EAAuB;AACnB;AACH,SAFD,MAGK;AACD,gBAAIqG,YAAY,KAAKC,qBAAL,CAA2BP,YAA3B,CAAhB;AACA,gBAAIM,aAAa,CAAC,CAAlB,EAAqB;AACjB,qBAAKlG,IAAL,GAAY,KAAZ;AACA;AACH;;AAED,gBAAI,KAAKD,cAAL,IAAuB,IAA3B,EAAiC;AAC7B,qBAAKA,cAAL,GAAsBmG,SAAtB;AACH;;AAED,iBAAKlG,IAAL,GAAY,KAAZ;AACA,iBAAKoG,WAAL,CAAiB,KAAKrG,cAAtB;AACH;AACJ,KAnOI;AAoOLsD,cApOK,sBAoOMoC,KApON,EAoOa,CAEjB,CAtOI;AAwOLY,aAxOK,uBAwOO;AACR,aAAKnE,IAAL,CAAUoE,GAAV,CAAc,YAAd,EAA2B,KAAKnD,YAAhC,EAA6C,IAA7C;AACA,aAAKjB,IAAL,CAAUoE,GAAV,CAAc,WAAd,EAA0B,KAAKlD,WAA/B,EAA2C,IAA3C;AACA,aAAKlB,IAAL,CAAUoE,GAAV,CAAc,UAAd,EAAyB,KAAKjD,UAA9B,EAAyC,IAAzC;AACH,KA5OI;AA8OL8C,yBA9OK,iCA8OiBI,KA9OjB,EA8OwB;AACzB,YAAI,KAAKC,6BAAL,CAAmCD,KAAnC,EAAyChH,GAAGsG,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAzC,KAAwD,IAA5D,EAAkE;AAC9D,mBAAOtG,GAAGsG,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAP,CAD8D,CAC5C;AACrB,SAFD,MAGK,IAAI,KAAKW,6BAAL,CAAmCD,KAAnC,EAAyChH,GAAGsG,EAAH,CAAM,CAAN,EAAQ,CAAC,CAAT,CAAzC,KAAyD,IAA7D,EAAmE;AACpE,mBAAOtG,GAAGsG,EAAH,CAAM,CAAN,EAAQ,CAAC,CAAT,CAAP,CADoE,CACjD;AACtB,SAFI,MAGA,IAAI,KAAKW,6BAAL,CAAmCD,KAAnC,EAAyChH,GAAGsG,EAAH,CAAM,CAAC,CAAP,EAAS,CAAT,CAAzC,KAAyD,IAA7D,EAAmE;AACpE,mBAAOtG,GAAGsG,EAAH,CAAM,CAAC,CAAP,EAAS,CAAT,CAAP,CADoE,CACjD;AACtB,SAFI,MAGA,IAAI,KAAKW,6BAAL,CAAmCD,KAAnC,EAAyChH,GAAGsG,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAzC,KAAwD,IAA5D,EAAkE;AACnE,mBAAOtG,GAAGsG,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAP,CADmE,CACjD;AACrB,SAFI,MAGA;AACD,uBAAO,CAAC,CAAR,CADC,CACS;AACb;AACJ,KA9PI;AAgQLW,iCAhQK,yCAgQyBD,KAhQzB,EAgQ+BE,cAhQ/B,EAgQ+C;AAChD,YAAIC,QAAQH,MAAMI,SAAN,CAAgBF,cAAhB,CAAZ;AACA,YAAIG,SAASF,QAAQG,KAAKC,EAAb,GAAkB,GAA/B;AACA,YAAID,KAAKE,GAAL,CAASH,MAAT,KAAoB,KAAK9G,eAA7B,EAA8C;AAC1C,mBAAO,IAAP;AACH,SAFD,MAGK;AACD,mBAAO,KAAP;AACH;AACJ,KAzQI;AA2QLsG,eA3QK,uBA2QOF,SA3QP,EA2QkB;AACnB,aAAK,IAAIlC,KAAT,IAAkB,KAAKpE,OAAvB,EAAgC;AAC5B,gBAAI,KAAKA,OAAL,CAAaoE,KAAb,EAAoB9C,YAApB,CAAiC,WAAjC,EAA8C8F,MAA9C,IAAwD,CAA5D,EAA+D;AAC3D;AACH;AACJ;AACD,YAAIC,UAAU,EAAd;AACA,aAAK,IAAIjD,KAAT,IAAkB,KAAKpE,OAAvB,EAAgC;AAC5B,gBAAIsH,SAAS,KAAKtH,OAAL,CAAaoE,KAAb,CAAb;AACA,gBAAImD,YAAYD,OAAOhG,YAAP,CAAoB,WAApB,CAAhB;AACA,gBAAIkG,kBAAkBD,UAAUE,kBAAV,CAA6BnB,SAA7B,CAAtB;AACA,gBAAIoB,aAAa;AACbnD,mBAAGiD,gBAAgBG,gBAAhB,CAAiCpD,CADvB;AAEbC,mBAAGgD,gBAAgBG,gBAAhB,CAAiCnD,CAFvB;AAGboD,uBAAON,OAAOM,KAHD;AAIbC,wBAAQP,OAAOO,MAJF;AAKbzB,qBAAKoB,gBAAgBpB,GALR;AAMb0B,4BAAYR;AANC,aAAjB;AAQAD,oBAAQU,IAAR,CAAaL,UAAb;AACH;;AAED;AACA,YAAIM,aAAa,GAAjB;AACA,eAAM,KAAKC,cAAL,CAAoBZ,OAApB,EAA4Bf,SAA5B,KAA0C,KAAhD,EAAuD;AACnD,gBAAI0B,cAAc,CAAlB,EAAqB;AACjB;AACA;AACH;AACDA,0BAAc,CAAd;AACH;AACD,YAAIE,iBAAiB,KAArB;AACA,aAAK,IAAI9D,KAAT,IAAkBiD,OAAlB,EAA2B;AACvB,gBAAIK,aAAaL,QAAQjD,KAAR,CAAjB;AACA,gBAAI0D,aAAaJ,WAAWI,UAA5B;AACA,gBAAI,KAAKzH,MAAL,CAAY8H,yBAAZ,CAAsCxI,GAAGsG,EAAH,CAAMyB,WAAWnD,CAAjB,EAAmBmD,WAAWlD,CAA9B,CAAtC,EAAuE7E,GAAGsG,EAAH,CAAM6B,WAAWvD,CAAjB,EAAoBuD,WAAWtD,CAA/B,CAAvE,KAA6G,IAAjH,EAAuH;AACnH;AACH;;AAED,gBAAI+C,YAAYO,WAAWxG,YAAX,CAAwB,WAAxB,CAAhB;AACAiG,sBAAUa,cAAV,GAA2BzI,GAAGsG,EAAH,CAAMyB,WAAWnD,CAAjB,EAAoBmD,WAAWlD,CAA/B,CAA3B;AACA+C,sBAAUc,eAAV,GAA4B/B,SAA5B;;AAEAiB,sBAAUc,eAAV,CAA0BC,aAA1B;AACA,gBAAIf,UAAUgB,UAAV,IAAwB,IAA5B,EAAkC;AAC9B,oBAAInC,MAAMzG,GAAGsG,EAAH,CAAMsB,UAAUa,cAAV,CAAyB7D,CAAzB,GAA6BuD,WAAWvD,CAA9C,EAAiDgD,UAAUa,cAAV,CAAyB5D,CAAzB,GAA6BsD,WAAWtD,CAAzF,EAA4F6B,GAA5F,EAAV;AACA,oBAAImC,IAAIpC,MAAMmB,UAAUgB,UAAxB;;AAEAhB,0BAAUkB,EAAV,GAAeD,IAAIjB,UAAUc,eAAV,CAA0B9D,CAA7C;AACAgD,0BAAUmB,EAAV,GAAeF,IAAIjB,UAAUc,eAAV,CAA0B7D,CAA7C;AACH,aAND,MAOK;AACD+C,0BAAUkB,EAAV,GAAelB,UAAUc,eAAV,CAA0B9D,CAA1B,GAA8BgD,UAAUoB,WAAvD;AACApB,0BAAUmB,EAAV,GAAenB,UAAUc,eAAV,CAA0B7D,CAA1B,GAA8B+C,UAAUoB,WAAvD;AACH;AACDpB,sBAAUH,MAAV,GAAmB,CAAnB;AACA,gBAAI,KAAKrF,OAAL,IAAgB,IAApB,EAA0B;AACtB,qBAAKA,OAAL,GAAe,IAAf;AACH;AACD,gBAAImG,kBAAkB,KAAtB,EAA6B;AACzBA,iCAAiB,IAAjB;AACH;AACJ;AACD,YAAIA,kBAAkB,IAAtB,EAA4B;AACxB,iBAAK/F,cAAL,IAAuB,CAAvB;AACA,gBAAI,KAAKO,WAAL,IAAoB,IAAxB,EAA8B;AAC1B,qBAAKkG,YAAL,CAAkB,YAAU;AACxBjJ,uBAAG+F,WAAH,CAAeE,IAAf,CAAoB,KAAKlD,WAAzB;AACH,iBAFD,EAEE,GAFF;AAGH;AACJ;AACJ,KAlVI;AAoVL9B,aApVK,uBAoVO;AACR,aAAKK,WAAL,CAAiBK,YAAjB,CAA8B3B,GAAGkC,MAAjC,EAAyCC,YAAzC,GAAwD,KAAxD;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAI+G,SAAStG,QAAQ,eAAR,EAAyB,KAAKvB,UAAL,CAAgB8H,cAAzC,EAAyDD,MAAtE;AACA,YAAIzE,QAAQyE,OAAOE,OAAP,CAAe,KAAK/H,UAAL,CAAgB4C,YAA/B,CAAZ;AACA,YAAIoF,WAAW,IAAf;AACA,YAAIC,aAAa,IAAjB;AACA,YAAIC,aAAa,IAAjB;AACA,YAAI9E,QAAQyE,OAAO9E,MAAP,GAAe,CAA3B,EAA8B;AAC1BK,qBAAS,CAAT;AACA4E,uBAAWH,OAAOzE,KAAP,CAAX;AACH,SAHD,MAIK;AACD6E,yBAAa,KAAKjI,UAAL,CAAgB8H,cAAhB,GAAiC,CAA9C;AACA,gBAAIK,YAAY5G,QAAQ,eAAR,EAAyB0G,UAAzB,EAAqCJ,MAArD;AACAG,uBAAWG,UAAU,CAAV,CAAX;AACH;;AAED,YAAIF,cAAc,IAAlB,EAAwB;AACpBC,yBAAa;AACTtF,8BAAcoF;AADL,aAAb;AAGH,SAJD,MAKK;AACDE,yBAAa;AACTJ,gCAAgBG,UADP;AAETrF,8BAAcoF;AAFL,aAAb;AAIH;;AAED,YAAI,KAAKvG,KAAL,IAAcF,QAAQ,SAAR,EAAmBvB,UAAnB,CAA8B4C,YAAhD,EAA8D;AAC1DsF,uBAAWE,uBAAX,GAAqC,CAArC;AACH;AACD,YAAI7G,QAAQ,SAAR,EAAmBvB,UAAnB,CAA8BkE,SAA9B,IAA2C,CAA/C,EAAkD;AAC9CgE,uBAAWhE,SAAX,GAAuB,CAAvB;AACH;AACD,YAAIJ,aAAa,mBAAmB,KAAKrC,KAAL,CAAWhB,QAAX,EAApC;AACA,YAAIsD,aAAaxC,QAAQ,SAAR,EAAmBvB,UAAnB,CAA8BgE,QAA9B,CAAuCF,UAAvC,CAAjB;;AAEA,YAAIC,cAAc,IAAd,IAAsBA,cAAcE,SAApC,IAAiD,KAAK9C,cAAL,GAAsB4C,UAA3E,EAAuF;AACnFmE,uBAAWlE,QAAX,GAAsB,EAAtB;AACAkE,uBAAWlE,QAAX,CAAoBF,UAApB,IAAkC,KAAK3C,cAAvC;AACH;AACD+G,mBAAWG,QAAX,GAAsB,KAAK5G,KAA3B;AACA,YAAIM,OAAO,IAAX;AACA,YAAIuG,kBAAkB,SAAlBA,eAAkB,GAAU;AAC5B,gBAAIL,cAAc,IAAlB,EAAwB;AACpBlG,qBAAK/B,UAAL,CAAgB8H,cAAhB,GAAiCG,UAAjC;AACH;AACD,gBAAIC,WAAWlE,QAAX,IAAuB,IAAvB,IAA+BkE,WAAWlE,QAAX,IAAuBC,SAA1D,EAAqE;AACjE1C,wBAAQ,SAAR,EAAmBvB,UAAnB,CAA8BgE,QAA9B,CAAuCF,UAAvC,IAAqD/B,KAAKZ,cAA1D;AACH;AACDY,iBAAK/B,UAAL,CAAgB4C,YAAhB,GAA+BoF,QAA/B;AACAjG,iBAAK/B,UAAL,CAAgBoI,uBAAhB,GAA0C,CAA1C;AACArG,iBAAK/B,UAAL,CAAgBqI,QAAhB,GAA2BtG,KAAKN,KAAhC;AACAF,oBAAQ,SAAR,EAAmBgH,eAAnB,CAAmC,WAAnC;AACH,SAXD;;AAcAhH,gBAAQ,SAAR,EAAmBiH,wBAAnB,CAA4CN,UAA5C,EAAuDI,eAAvD;AAEH,KAtZI;AAwZLrB,kBAxZK,0BAwZUZ,OAxZV,EAwZkBf,SAxZlB,EAwZ6B;AAC9B,aAAK,IAAIlC,KAAT,IAAkBiD,OAAlB,EAA2B;AACvB,gBAAIoC,YAAYpC,QAAQjD,KAAR,CAAhB;AACA,iBAAK,IAAIsF,CAAT,IAAcrC,OAAd,EAAuB;AACnB,oBAAIsC,gBAAgBtC,QAAQqC,CAAR,CAApB;AACA,oBAAID,aAAaE,aAAjB,EAAgC;AAC5B;AACH;;AAED,oBAAIC,aAAa,KAAKC,uCAAL,CAA6CJ,SAA7C,EAAuDE,aAAvD,EAAqErD,SAArE,CAAjB;AACA,oBAAIsD,cAAc,KAAlB,EAAyB;AACrB,wBAAIE,eAAeF,WAAWE,YAA9B;AACA,wBAAIC,aAAaH,WAAWI,iBAA5B;AACA;AACA,wBAAIC,oBAAoB,KAAK5J,MAAL,CAAY6J,iBAAZ,CAA8BJ,YAA9B,CAAxB;AACA,wBAAIK,aAAa,IAAjB;AACA,wBAAIC,MAAM,KAAK/J,MAAL,CAAYgK,OAAZ,CAAoB1K,GAAGsG,EAAH,CAAM6D,aAAavF,CAAnB,EAAqBuF,aAAatF,CAAlC,CAApB,EAAyD,IAAzD,EAA8D7E,GAAGsG,EAAH,CAAM,CAACK,UAAU/B,CAAjB,EAAmB,CAAC+B,UAAU9B,CAA9B,CAA9D,CAAV;;AAEA,yBAAI,IAAI8F,CAAR,IAAaL,iBAAb,EAAgC;AAC5B,4BAAIM,OAAON,kBAAkBK,CAAlB,CAAX;AACA,4BAAIlE,MAAM,KAAK/F,MAAL,CAAYmK,OAAZ,CAAoBJ,GAApB,EAAwBG,IAAxB,CAAV;AACA,4BAAInE,OAAO,KAAX,EAAkB;AACd+D,yCAAaI,IAAb;AACA;AACH;AACJ;AACD,wBAAIE,YAAY,KAAKpK,MAAL,CAAYgK,OAAZ,CAAoBF,WAAWO,EAA/B,EAAkC,IAAlC,EAAuC/K,GAAGsG,EAAH,CAAMkE,WAAWO,EAAX,CAAcnG,CAAd,GAAkB4F,WAAWQ,EAAX,CAAcpG,CAAtC,EAAyC4F,WAAWO,EAAX,CAAclG,CAAd,GAAkB2F,WAAWQ,EAAX,CAAcnG,CAAzE,CAAvC,EAAoHkG,EAApI;AACA,wBAAIE,YAAY,KAAKvK,MAAL,CAAYgK,OAAZ,CAAoBF,WAAWQ,EAA/B,EAAkC,IAAlC,EAAuChL,GAAGsG,EAAH,CAAMkE,WAAWQ,EAAX,CAAcpG,CAAd,GAAkB4F,WAAWO,EAAX,CAAcnG,CAAtC,EAAyC4F,WAAWQ,EAAX,CAAcnG,CAAd,GAAkB2F,WAAWO,EAAX,CAAclG,CAAzE,CAAvC,EAAoHkG,EAApI;AACAP,iCAAa;AACTQ,4BAAIC,SADK;AAETF,4BAAID;AAFK,qBAAb;AAIA,wBAAII,OAAO,KAAKxK,MAAL,CAAYgK,OAAZ,CAAoBN,WAAWjC,UAAX,CAAsBgD,QAA1C,EAAmD,IAAnD,EAAwDxE,SAAxD,CAAX;AACA,wBAAIyE,kBAAkB,KAAK1K,MAAL,CAAYmK,OAAZ,CAAoBK,IAApB,EAAyBV,UAAzB,CAAtB;AACA,wBAAIa,YAAY,KAAK3K,MAAL,CAAY4K,kBAAZ,CAA+BlB,WAAWjC,UAA1C,EAAqDxB,SAArD,IAAkEyD,WAAWjC,UAAX,CAAsBxG,YAAtB,CAAmC,WAAnC,EAAgD4J,aAAlI;AACA,wBAAIvD,mBAAmB,KAAKtH,MAAL,CAAY8K,gBAAZ,CAA6BpB,WAAWjC,UAAX,CAAsBgD,QAAnD,EAA4DC,eAA5D,EAA4EC,SAA5E,EAAsF1E,SAAtF,CAAvB;AACA,wBAAI8E,aAAazL,GAAGsG,EAAH,CAAM0B,iBAAiBpD,CAAjB,GAAqBwF,WAAWjC,UAAX,CAAsBvD,CAAjD,EAAoDoD,iBAAiBnD,CAAjB,GAAqBuF,WAAWjC,UAAX,CAAsBtD,CAA/F,EAAkG6B,GAAlG,EAAjB;AACA0D,+BAAWxF,CAAX,GAAeoD,iBAAiBpD,CAAhC;AACAwF,+BAAWvF,CAAX,GAAemD,iBAAiBnD,CAAhC;AACAuF,+BAAW3D,GAAX,GAAiBgF,UAAjB;AACA,2BAAO,KAAP;AACH;AAEJ;AACJ;AACD,eAAO,IAAP;AACH,KAtcI;AAucLvB,2CAvcK,mDAucmCwB,OAvcnC,EAuc4CC,OAvc5C,EAucqDhF,SAvcrD,EAucgE;;AAEjE,YAAIvD,OAAO,IAAX;AACA,YAAIwI,OAAO,SAAPA,IAAO,CAASC,EAAT,EAAaC,EAAb,EAAiB;AACxB,gBAAIrF,MAAMoF,GAAGpF,GAAb;AACA,gBAAIsF,kBAAkB,KAAtB;AACA,gBAAIC,kBAAkB,KAAtB;;AAEA,gBAAIC,cAAc7I,KAAK1C,MAAL,CAAY6J,iBAAZ,CAA8BuB,EAA9B,CAAlB;AACA,iBAAK,IAAII,GAAT,IAAgBD,WAAhB,EAA6B;AACzB,oBAAIE,UAAUF,YAAYC,GAAZ,CAAd;AACA,oBAAI9I,KAAK1C,MAAL,CAAY0L,yCAAZ,CAAsDP,GAAG1D,UAAzD,EAAoEgE,OAApE,EAA4ExF,SAA5E,EAAsFF,GAAtF,KAA8F,KAAlG,EAAyG;AACrGsF,sCAAkB,IAAlB;AACA;AACH;AACJ;;AAED,gBAAIA,mBAAmB,KAAvB,EAA8B;AAC1B,uBAAO,KAAP;AACH;;AAED,gBAAIM,cAAcjJ,KAAK1C,MAAL,CAAY6J,iBAAZ,CAA8BuB,GAAG3D,UAAjC,CAAlB;AACA,iBAAK,IAAI+D,GAAT,IAAgBG,WAAhB,EAA6B;AACzB,oBAAIF,UAAUE,YAAYH,GAAZ,CAAd;AACA,oBAAI9I,KAAK1C,MAAL,CAAY0L,yCAAZ,CAAsDP,GAAG1D,UAAzD,EAAoEgE,OAApE,EAA4ExF,SAA5E,EAAsFF,GAAtF,KAA8F,KAAlG,EAAyG;AACrGuF,sCAAkB,IAAlB;AACA;AACH;AACJ;;AAED,gBAAIA,mBAAmB,KAAvB,EAA8B;AAC1B,uBAAO,KAAP;AACH;;AAED,mBAAO,IAAP;AACH,SAhCD;;AAkCA,YAAIJ,KAAKF,OAAL,EAAaC,OAAb,KAAyB,IAA7B,EAAmC;AAC/B,gBAAIW,SAAS;AACTnC,8BAAcwB,OADL;AAETtB,mCAAmBqB;AAFV,aAAb;AAIA,mBAAOY,MAAP;AACH;;AAED,YAAIV,KAAKD,OAAL,EAAaD,OAAb,KAAyB,IAA7B,EAAmC;AAC/B,gBAAIY,SAAS;AACTnC,8BAAcuB,OADL;AAETrB,mCAAmBsB;AAFV,aAAb;AAIA,mBAAOW,MAAP;AACH;;AAGD,eAAO,KAAP;AACH,KA9fI;AAggBLC,iBAhgBK,2BAggBW;AACZ,YAAI1G,cAAcjD,QAAQ,aAAR,CAAlB;AACA,YAAIqB,eAAe,KAAKnB,KAAxB;;AAEA,YAAI0J,SAAS3G,YAAY5B,YAAZ,CAAb;AACA,YAAIE,YAAYnE,GAAGiC,IAAH,CAAQ,cAAR,CAAhB;AACA,aAAK,IAAIwC,KAAT,IAAkB+H,OAAOC,UAAzB,EAAqC;AACjC,gBAAIC,UAAUF,OAAOC,UAAP,CAAkBhI,KAAlB,CAAd;;AAEA,gBAAIkI,SAASD,QAAQC,MAArB;AACA,gBAAIC,aAAa,EAAjB;AACA,iBAAK,IAAI7C,CAAT,IAAc4C,MAAd,EAAsB;AAClB,oBAAIE,YAAY,IAAhB;AACA,oBAAI9C,KAAK,CAAT,EAAY;AACR8C,gCAAY7M,GAAGsG,EAAH,CAAMqG,OAAO5C,CAAP,EAAUnF,CAAhB,EAAmB+H,OAAO5C,CAAP,EAAUlF,CAA7B,CAAZ;AACH,iBAFD,MAGK;AACD,wBAAIiI,eAAeH,OAAO5C,CAAP,CAAnB;AACA8C,gCAAY7M,GAAGsG,EAAH,CAAMsG,WAAW7C,IAAI,CAAf,EAAkBnF,CAAlB,GAAsBkI,aAAalI,CAAzC,EAA4CgI,WAAW7C,IAAI,CAAf,EAAkBlF,CAAlB,GAAsBiI,aAAajI,CAA/E,CAAZ;AACH;;AAED+H,2BAAWxE,IAAX,CAAgByE,SAAhB;AACH;AACD,gBAAIE,YAAYL,QAAQK,SAAxB;AACA,gBAAIC,SAASN,QAAQM,MAArB;AACA,gBAAIC,YAAY,EAAhB;AACA,gBAAIC,WAAWR,QAAQQ,QAAvB;AACA,gBAAIA,YAAY,IAAhB,EAAsB;AAClB,oBAAI3I,aAAaqI,WAAW,CAAX,CAAjB;AACAA,2BAAWxE,IAAX,CAAgB7D,UAAhB;AACH;AACD,iBAAK,IAAIwF,CAAT,IAAc6C,UAAd,EAA0B;AACtB,oBAAI7C,KAAK,CAAT,EAAY;AACR;AACH;;AAED,oBAAIpH,OAAO3C,GAAGyF,WAAH,CAAe,KAAKvE,UAApB,CAAX;AACAyB,qBAAKuF,MAAL,GAAc6E,SAAd;AACA,oBAAII,eAAenN,GAAGsG,EAAH,CAAMsG,WAAW7C,CAAX,EAAcnF,CAAd,GAAkBgI,WAAW7C,IAAI,CAAf,EAAkBnF,CAA1C,EAA6CgI,WAAW7C,CAAX,EAAclF,CAAd,GAAkB+H,WAAW7C,IAAI,CAAf,EAAkBlF,CAAjF,CAAnB;AACAlC,qBAAKsF,KAAL,GAAakF,aAAazG,GAAb,EAAb;;AAEA,oBAAIW,SAAS8F,aAAa/F,SAAb,CAAuBpH,GAAGsG,EAAH,CAAM,CAAN,EAAQ,CAAR,CAAvB,IAAqCgB,KAAKC,EAA1C,GAA+C,GAA5D;AACA5E,qBAAKwE,KAAL,GAAa,CAACE,MAAd;AACA1E,qBAAKiC,CAAL,GAASgI,WAAW7C,CAAX,EAAcnF,CAAd,GAAkBuI,aAAavI,CAAb,GAAiB,CAA5C;AACAjC,qBAAKkC,CAAL,GAAS+H,WAAW7C,CAAX,EAAclF,CAAd,GAAkBsI,aAAatI,CAAb,GAAiB,CAA5C;AACA,oBAAIuI,kBAAkBD,aAAaE,MAAb,CAAoB/F,KAAKC,EAAL,GAAU,CAA9B,CAAtB;AACA6F,gCAAgBzE,aAAhB;AACAhG,qBAAKiC,CAAL,IAAUjC,KAAKuF,MAAL,GAAc,CAAd,GAAkBkF,gBAAgBxI,CAA5C;AACAjC,qBAAKkC,CAAL,IAAUlC,KAAKuF,MAAL,GAAc,CAAd,GAAkBkF,gBAAgBvI,CAA5C;;AAEAlC,qBAAKiC,CAAL,IAAUoI,OAAOpI,CAAjB;AACAjC,qBAAKkC,CAAL,IAAUmI,OAAOnI,CAAjB;AACAoI,0BAAU7E,IAAV,CAAezF,IAAf;AACAwB,0BAAUwB,QAAV,CAAmBhD,IAAnB;AACH;AACJ;;AAED,YAAI2K,eAAed,OAAOnM,OAA1B;AACA,YAAI0D,cAAc/D,GAAGiC,IAAH,CAAQ,gBAAR,CAAlB;AACA,aAAK,IAAIwC,KAAT,IAAkB6I,YAAlB,EAAgC;AAC5B,gBAAIC,MAAMD,aAAa7I,KAAb,CAAV;AACA,gBAAIkD,SAAS3H,GAAGyF,WAAH,CAAe,KAAKrE,YAApB,CAAb;AACAuG,mBAAO/C,CAAP,GAAW2I,IAAI3I,CAAf;AACA+C,mBAAO9C,CAAP,GAAW0I,IAAI1I,CAAf;AACA8C,mBAAOM,KAAP,GAAeN,OAAOM,KAAP,GAAesF,IAAIC,KAAlC;AACA7F,mBAAOO,MAAP,GAAgBP,OAAOO,MAAP,GAAgBqF,IAAIC,KAApC;AACAzJ,wBAAY4B,QAAZ,CAAqBgC,MAArB;AACH;AACJ,KApkBI;AAukBL8F,sBAvkBK,gCAukBgB;AACjB,YAAIC,UAAU9K,QAAQ,SAAR,CAAd;AACA,YAAI,KAAKpB,iBAAL,IAA0B,CAA9B,EAAiC;AAC7BkM,oBAAQC,eAAR,CAAwB,KAAK7K,KAA7B;AACA;AACH;AACD,YAAI8I,OAAO,KAAKvK,UAAL,CAAgBU,KAAhB,GAAwB,KAAKP,iBAAxC;AACA,YAAIoK,OAAO,CAAX,EAAc;AACV;AACH;;AAED,YAAIrC,aAAa;AACbxH,mBAAO6J;AADM,SAAjB;AAGA,YAAIxI,OAAO,IAAX;AACA,YAAIuG,kBAAkB,SAAlBA,eAAkB,GAAW;AAC7BvG,iBAAK/B,UAAL,CAAgBU,KAAhB,GAAwB6J,IAAxB;AACA;AACA8B,oBAAQC,eAAR,CAAwBvK,KAAKN,KAA7B;AACH,SAJD;AAKA,aAAKxB,WAAL,CAAiBK,YAAjB,CAA8B3B,GAAGkC,MAAjC,EAAyCC,YAAzC,GAAwD,KAAxD;AACAS,gBAAQ,SAAR,EAAmBiH,wBAAnB,CAA4CN,UAA5C,EAAuDI,eAAvD;AACH,KA7lBI;AA8lBLiE,oBA9lBK,8BA8lBc;AACf,aAAKtM,WAAL,CAAiBK,YAAjB,CAA8B3B,GAAGkC,MAAjC,EAAyCC,YAAzC,GAAwD,IAAxD;AACH,KAhmBI;AAkmBL0L,qBAlmBK,+BAkmBe;AAChB;AACAjL,gBAAQ,SAAR,EAAmBgH,eAAnB,CAAmC,WAAnC;AACH,KArmBI;AAumBLzG,sBAvmBK,gCAumBgB;AACjB,YAAI2K,aAAalL,QAAQ,QAAR,EAAkB8C,KAAlB,CAAwB,YAAxB,CAAjB;AACA,YAAItE,eAAewB,QAAQ,QAAR,EAAkB8C,KAAlB,CAAwB,cAAxB,CAAnB;AACA,YAAIqI,eAAenL,QAAQ,QAAR,EAAkB8C,KAAlB,CAAwB,cAAxB,CAAnB;AACA,YAAIsI,gBAAgBpL,QAAQ,QAAR,EAAkB8C,KAAlB,CAAwB,eAAxB,CAApB;AACA,YAAIuI,mBAAmBrL,QAAQ,kBAAR,EAA4B,KAAKE,KAAjC,CAAvB;;AAEA,aAAKoL,eAAL,CAAqBD,gBAArB;AACA,aAAKE,WAAL,CAAiBF,gBAAjB,EAAkCH,UAAlC;AACA,aAAKM,aAAL,CAAmBH,gBAAnB,EAAoCF,YAApC;AACA,aAAKM,kBAAL,CAAwBJ,gBAAxB,EAAyCD,aAAzC;AACA,aAAKM,aAAL,CAAmBL,gBAAnB,EAAoC7M,YAApC;AACH,KAnnBI;AAonBLmN,8BApnBK,sCAonBsBC,SApnBtB,EAonBiCC,WApnBjC,EAonB8C;AAC/C,aAAK,IAAIvC,GAAT,IAAgBuC,WAAhB,EAA6B;AACzBD,sBAAUtC,GAAV,IAAiBuC,YAAYvC,GAAZ,CAAjB;AACH;AACJ,KAxnBI;AAynBLgC,mBAznBK,2BAynBWD,gBAznBX,EAynB6B;AAC9B,YAAIS,kBAAkBT,iBAAiBU,SAAvC;AACA,YAAIA,YAAY3O,GAAGiC,IAAH,CAAQ,kBAAR,CAAhB;AACA,aAAI,IAAIwC,KAAR,IAAiBiK,eAAjB,EAAkC;AAC9B,gBAAIE,gBAAgBF,gBAAgBjK,KAAhB,CAApB;AACA,gBAAIoK,UAAU,IAAI7O,GAAGuB,IAAP,EAAd;AACA,iBAAKgN,0BAAL,CAAgCM,OAAhC,EAAwCD,aAAxC;AACAD,sBAAUhJ,QAAV,CAAmBkJ,OAAnB;AACH;AACJ,KAloBI;AAooBLV,eApoBK,uBAooBOF,gBApoBP,EAooBwBH,UApoBxB,EAooBoC;AACrC,YAAIgB,cAAcb,iBAAiBtN,KAAnC;AACA,YAAIA,QAAQX,GAAGiC,IAAH,CAAQ,cAAR,CAAZ;AACA,aAAI,IAAIwC,KAAR,IAAiBqK,WAAjB,EAA8B;AAC1B,gBAAIC,gBAAgBD,YAAYrK,KAAZ,CAApB;AACA,gBAAIuK,cAAchP,GAAGyF,WAAH,CAAeqI,UAAf,CAAlB;AACA,iBAAKS,0BAAL,CAAgCS,WAAhC,EAA4CD,aAA5C;AACApO,kBAAMgF,QAAN,CAAeqJ,WAAf;AACH;AACJ,KA7oBI;AA+oBLZ,iBA/oBK,yBA+oBSH,gBA/oBT,EA+oB2BF,YA/oB3B,EA+oByC;AAC1C,YAAIkB,gBAAgBhB,iBAAiBiB,OAArC;AACA,YAAIA,UAAUlP,GAAGiC,IAAH,CAAQ,gBAAR,CAAd;AACA,aAAK,IAAIwC,KAAT,IAAkBwK,aAAlB,EAAiC;AAC7B,gBAAIE,kBAAkBF,cAAcxK,KAAd,CAAtB;AACA,gBAAI2K,gBAAgBpP,GAAGyF,WAAH,CAAesI,YAAf,CAApB;AACA,iBAAKQ,0BAAL,CAAgCa,aAAhC,EAA8CD,eAA9C;AACAD,oBAAQvJ,QAAR,CAAiByJ,aAAjB;AACH;AACJ,KAxpBI;AA0pBLf,sBA1pBK,8BA0pBcJ,gBA1pBd,EA0pB+BD,aA1pB/B,EA0pB8C;AAC/C,YAAIqB,iBAAiBpB,iBAAiBqB,YAAtC;AACA,YAAIA,eAAetP,GAAGiC,IAAH,CAAQ,qBAAR,CAAnB;AACA,aAAK,IAAIwC,KAAT,IAAkB4K,cAAlB,EAAkC;AAC9B,gBAAIE,mBAAmBF,eAAe5K,KAAf,CAAvB;AACA,gBAAI+K,iBAAiB,IAAIxP,GAAGuB,IAAP,CAAYgO,iBAAiBE,IAA7B,CAArB;AACA,iBAAK,IAAIhL,KAAT,IAAkB8K,iBAAiBvL,QAAnC,EAA4C;AACxC,oBAAI0L,iBAAiBH,iBAAiBvL,QAAjB,CAA0BS,KAA1B,CAArB;AACA,oBAAIkL,eAAe3P,GAAGyF,WAAH,CAAeuI,aAAf,CAAnB;AACA,qBAAKO,0BAAL,CAAgCoB,YAAhC,EAA6CD,cAA7C;AACAF,+BAAe7J,QAAf,CAAwBgK,YAAxB;AACH;AACDL,yBAAa3J,QAAb,CAAsB6J,cAAtB;AACH;AACJ,KAxqBI;AA0qBLlB,iBA1qBK,yBA0qBSL,gBA1qBT,EA0qB2B7M,YA1qB3B,EA0qByC;AAC1C,YAAIwO,gBAAgB3B,iBAAiB5N,OAArC;AACA,YAAIA,UAAUL,GAAGiC,IAAH,CAAQ,gBAAR,CAAd;AACA,aAAK,IAAIwC,KAAT,IAAkBmL,aAAlB,EAAiC;AAC7B,gBAAIC,kBAAkBD,cAAcnL,KAAd,CAAtB;AACA,gBAAIqL,gBAAgB9P,GAAGyF,WAAH,CAAerE,YAAf,CAApB;;AAEA,gBAAI2O,cAAcF,gBAAgBG,KAAlC;AACA;AACA,gBAAIC,YAAYJ,gBAAgBK,GAAhC;AACA,gBAAItI,YAAYkI,cAAcnO,YAAd,CAA2B,WAA3B,CAAhB;AACAiG,sBAAUuI,UAAV,GAAuBF,UAAUE,UAAjC;AACA,gBAAIF,UAAUE,UAAV,IAAwB,CAA5B,EAA+B;AAC3BL,8BAAcnO,YAAd,CAA2B3B,GAAGoQ,MAA9B,EAAsCC,WAAtC,GAAoDzI,UAAU0I,WAA9D;AACH;AACD,iBAAK/B,0BAAL,CAAgCuB,aAAhC,EAA8CC,WAA9C;AACA,gBAAInI,UAAUuI,UAAV,IAAwB,CAA5B,EAA+B;AAC3B,oBAAIF,UAAUM,gBAAV,IAA8B,EAA9B,IAAoCN,UAAUM,gBAAV,IAA8B,IAAtE,EAA4E;AACxE,wBAAIC,mBAAmB,yBAAyBP,UAAUM,gBAA1D;AACA,wBAAIjB,eAAetP,GAAGiC,IAAH,CAAQuO,gBAAR,CAAnB;AACA5I,8BAAU0H,YAAV,GAAyBA,YAAzB;AACH;AACJ;;AAEDjP,oBAAQsF,QAAR,CAAiBmK,aAAjB;AACH;AACJ,KApsBI;AAusBLW,iBAvsBK,yBAusBSvE,GAvsBT,EAusBalL,KAvsBb,EAusBoB;AACrB,YAAIkL,IAAI9C,OAAJ,CAAY,gBAAZ,KAAiC,CAAC,CAAtC,EAAyC;AACrC;AACA,gBAAIsH,UAAUxE,IAAIyE,KAAJ,CAAU,EAAV,CAAd;AACA,gBAAIC,SAASF,OAAT,KAAqBE,SAAS,KAAK9N,KAAd,CAAzB,EAA+C;AAC3C,oBAAIoC,kBAAkB,KAAKvC,IAAL,CAAUjB,cAAV,CAAyB,QAAzB,EAAmCA,cAAnC,CAAkD,iBAAlD,CAAtB;AACA;AACAwD,gCAAgBvD,YAAhB,CAA6B3B,GAAG4B,KAAhC,EAAuCC,MAAvC,GAAgDe,QAAQ,YAAR,EAAsBC,iBAAtB,CAAwC,GAAxC,EAA4C,CAAC7B,MAAMc,QAAN,EAAD,CAA5C,CAAhD;AACH;AACJ,SARD,MAUK,IAAIoK,OAAO,OAAX,EAAoB;AACrB,iBAAKnK,KAAL,GAAaf,KAAb;AACH;AACJ;AArtBI,CAAT","file":"levelMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        bullets: [],\n        minDis: 50,\n        maxOffsetDegree: 45,\n        directionTryto: null,\n        flag: false,\n        helper: null,\n\n        walls: [],\n        targetsNum: {\n            get() {\n                return this._targetsNum\n            },\n            set(value) {\n                this._targetsNum = value\n                if (value == 0) {\n                    this.onSuccess()\n                }\n            }\n        },\n\n        linePrefab: cc.Prefab,\n        bulletPrefab: cc.Prefab,\n\n        playerData: null,\n        retryButton: cc.Node,\n        heartForRetryCost: {\n            get() {\n                return this._heartForRetryCostwe\n            },\n            set(value){\n                this._heartForRetryCostwe = value\n                this.retryButton.getChildByName(\"heartCostLabel\").getComponent(cc.Label).string = value.toString()\n            } \n        },\n\n        heart: {\n            get() {\n                return this._heart\n            },\n            set(value) {\n                this._heart = value\n                cc.find(\"Canvas/uiNode/heartLabel\").getComponent(cc.Label).string = value.toString()\n                if (value < this.heartForRetryCost) {\n                    this.retryButton.getComponent(cc.Button).interactable = false\n                }\n                else {\n                    if (this.isMoved == false) {\n                        return\n                    }\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n\n        maxHeart: {\n            get() {\n                return this._maxHeart\n            },\n            set(value) {\n                this._maxHeart = value\n            }\n        },\n\n        isMoved: {\n            get() {\n                if (this._isMoved == null) {\n                    this._isMoved = false\n                }\n                return this._isMoved\n            },\n            set(value) {\n                this._isMoved = value\n                if (value == true && this.heartForRetryCost <= this.heart) {\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n        currentStepNum: {\n            get() {\n                if (this._currentStepNum == null) {\n                    this._currentStepNum = 0\n                }\n                return this._currentStepNum\n            },\n            set(value) {\n                this._currentStepNum = value\n                var currentStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"currentStepNumLabel\")\n                //currentStepNumLabel.getComponent(cc.Label).string = \"当前步数：\" + value.toString()\n                currentStepNumLabel.getComponent(cc.Label).string = require(\"textConfig\").getFormatedString(154,[value.toString()])\n            }\n        },\n        level: null,\n        soundEffect: null\n        \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var textConfig = require(\"textConfig\")\n        var Helper = require(\"helper\")\n        this.helper = new Helper()\n        //this.level = 1\n        this.setupNodesByConfig()\n        var self = this\n        cc.loader.loadRes(\"effectSounds/hit\",function(err,res){\n            self.soundEffect = res\n        })\n\n        this.retryButton.getChildByName(\"textLabel\").getComponent(cc.Label).string = textConfig.getTextByIdAndLanguageType(152)\n        cc.find(\"Canvas/uiNode/currentStepNumLabel\").getComponent(cc.Label).string = textConfig.getFormatedString(154,[0])\n    },\n\n    start () {\n        this.node.on(\"touchstart\",this.onTouchStart,this)\n        this.node.on(\"touchmove\",this.onTouchMove,this)\n        this.node.on(\"touchend\",this.onTouchEnd,this)\n        //this.generateWalls()\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        this.bullets = bulletsNode.children\n        this.playerData = require(\"dataMgr\").playerData\n\n        this.maxHeart = this.playerData.maxHeart\n        if (this.level == this.playerData.currentLevel) {\n            this.heartForRetryCost = require(\"levelConfig\")[this.playerData.currentLevel.toString()].heartForRetryCost\n        }\n        else {\n            this.heartForRetryCost = 0\n        }\n    \n        this.heart = this.playerData.heart\n        require(\"networkMgr\").delegate = this\n        var wallsNode = cc.find(\"Canvas/walls\")\n        this.walls = wallsNode.children\n        this.targetsNum = cc.find(\"Canvas/targets\").children.length\n\n        var graphic = cc.find(\"Canvas/fillNodes\").getComponent(cc.Graphics)\n        var startPoint = null\n        var pointNodes = cc.find(\"Canvas/fillNodes\").children\n        if (pointNodes.length == 0) {\n            return\n        }\n        for (var index in pointNodes) {\n            var point = pointNodes[index]\n            if (startPoint == null) {\n                graphic.moveTo(point.x, point.y)\n                startPoint = point\n            }\n\n            graphic.lineTo(point.x, point.y)\n        }\n        graphic.close()\n        graphic.stroke()\n        graphic.fill()\n\n        var minStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"minStepNumLabel\")\n        var minStepKey = \"minStep_level_\" + this.level.toString()\n        var minStepNum = require(\"dataMgr\").playerData.minSteps[minStepKey]\n        if (minStepNum == null || minStepNum == undefined) {\n            minStepNum = require(\"textConfig\").getTextByIdAndLanguageType(155)\n        }\n        minStepNumLabel.getComponent(cc.Label).string = require(\"textConfig\").getFormatedString(153,[minStepNum.toString()])\n\n        if (require(\"dataMgr\").playerData.isGuilded == 0) {\n            var guildNode = cc.instantiate(require(\"resMgr\").reses[\"guildNodePrefab\"])\n            this.node.addChild(guildNode)\n        } \n    },\n\n    // update (dt) {},\n    playBgm() {\n        var levelConfig = require(\"levelConfig\")\n        var bgmPath = levelConfig[this.level].bgmPath\n        cc.loader.loadRes(bgmPath,function(err,res){\n            cc.audioEngine.stopAll()\n            cc.audioEngine.play(res)\n        })\n    },\n\n    onTouchStart(event){\n        this.directionTryto = null\n        this.flag = true\n    },\n\n    onTouchMove(event) {\n        if (this.flag == false) {\n            return\n        }\n        var startLocation = event.getStartLocation()\n        var tmpDirection = cc.v2(event.getLocationX() - startLocation.x, event.getLocationY() - startLocation.y)\n        var dis = tmpDirection.mag()\n        if (dis < this.minDis) {\n            return\n        }\n        else {\n            var direction = this.getPossiableDirection(tmpDirection)\n            if (direction == -1) {\n                this.flag = false\n                return\n            }\n\n            if (this.directionTryto == null) {\n                this.directionTryto = direction\n            }\n\n            this.flag = false\n            this.moveBullets(this.directionTryto)\n        }\n    },\n    onTouchEnd(event) {\n\n    },\n\n    onDestroy() {\n        this.node.off(\"touchstart\",this.onTouchStart,this)\n        this.node.off(\"touchmove\",this.onTouchMove,this)\n        this.node.off(\"touchend\",this.onTouchEnd,this)\n    },\n\n    getPossiableDirection(delta) {\n        if (this.isPossiableWithGivenDirection(delta,cc.v2(1,0)) == true) {\n            return cc.v2(1,0) //right\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,-1)) == true) {\n            return cc.v2(0,-1) //down\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(-1,0)) == true) {\n            return cc.v2(-1,0) //left\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,1)) == true) {\n            return cc.v2(0,1) //up\n        }\n        else {\n            return -1 //no direction match\n        }\n    },\n    \n    isPossiableWithGivenDirection(delta,givenDirection) {\n        var angle = delta.signAngle(givenDirection)\n        var degree = angle / Math.PI * 180\n        if (Math.abs(degree) <= this.maxOffsetDegree) {\n            return true\n        }\n        else {\n            return false\n        }\n    },\n    \n    moveBullets(direction) {\n        for (var index in this.bullets) {\n            if (this.bullets[index].getComponent(\"bulletMgr\").status != 0) {\n                return\n            }\n        }\n        var shadows = []\n        for (var index in this.bullets) {\n            var bullet = this.bullets[index]\n            var bulletMgr = bullet.getComponent(\"bulletMgr\")\n            var nearestWallInfo = bulletMgr.getNearestWallInfo(direction)\n            var shadowNode = {\n                x: nearestWallInfo.suitablePosition.x,\n                y: nearestWallInfo.suitablePosition.y,\n                width: bullet.width,\n                height: bullet.height,\n                dis: nearestWallInfo.dis,\n                originNode: bullet\n            }\n            shadows.push(shadowNode)\n        }\n\n        //resolve shadows\n        var maxTryTime = 100\n        while(this.resolveShadows(shadows,direction) == false) {\n            if (maxTryTime <= 0) {\n                // cc.log(\"CAN'T FIND A SUITABLE POSITION\")\n                break\n            }\n            maxTryTime -= 1\n        }\n        var willAddStepNum = false\n        for (var index in shadows) {\n            var shadowNode = shadows[index]\n            var originNode = shadowNode.originNode\n            if (this.helper.isTwoPositionSimilarEqual(cc.v2(shadowNode.x,shadowNode.y),cc.v2(originNode.x, originNode.y)) == true) {\n                continue\n            }\n            \n            var bulletMgr = originNode.getComponent(\"bulletMgr\")\n            bulletMgr.targetPosition = cc.v2(shadowNode.x, shadowNode.y)\n            bulletMgr.movingDirection = direction\n            \n            bulletMgr.movingDirection.normalizeSelf()\n            if (bulletMgr.movingTime != null) {\n                var dis = cc.v2(bulletMgr.targetPosition.x - originNode.x, bulletMgr.targetPosition.y - originNode.y).mag()\n                var v = dis / bulletMgr.movingTime\n\n                bulletMgr.vx = v * bulletMgr.movingDirection.x\n                bulletMgr.vy = v * bulletMgr.movingDirection.y\n            }\n            else {\n                bulletMgr.vx = bulletMgr.movingDirection.x * bulletMgr.movingSpeed\n                bulletMgr.vy = bulletMgr.movingDirection.y * bulletMgr.movingSpeed\n            }\n            bulletMgr.status = 1\n            if (this.isMoved != true) {\n                this.isMoved = true\n            }\n            if (willAddStepNum == false) {\n                willAddStepNum = true\n            }\n        }\n        if (willAddStepNum == true) {\n            this.currentStepNum += 1\n            if (this.soundEffect != null) {\n                this.scheduleOnce(function(){\n                    cc.audioEngine.play(this.soundEffect)\n                },0.3)\n            }\n        }\n    },\n\n    onSuccess() {\n        this.retryButton.getComponent(cc.Button).interactable = false\n        // if (this.level != this.playerData.currentLevel) {\n        //     // cc.director.loadScene(\"mainScene\")\n        //     require(\"gameMgr\").animatedToScene(\"mainScene\")\n        //     return\n        // }\n\n        var levels = require(\"sectionConfig\")[this.playerData.currentSection].levels\n        var index = levels.indexOf(this.playerData.currentLevel)\n        var newLevel = null\n        var newSection = null\n        var commitBody = null\n        if (index < levels.length -1) {\n            index += 1\n            newLevel = levels[index]\n        }\n        else {\n            newSection = this.playerData.currentSection + 1\n            var newLevels = require(\"sectionConfig\")[newSection].levels\n            newLevel = newLevels[0]\n        }\n        \n        if (newSection == null) {\n            commitBody = {\n                currentLevel: newLevel, \n            } \n        }\n        else {\n            commitBody = {\n                currentSection: newSection,\n                currentLevel: newLevel,   \n            }\n        }\n\n        if (this.level == require(\"dataMgr\").playerData.currentLevel) {\n            commitBody.physicalPowerCostedFlag = 0\n        }\n        if (require(\"dataMgr\").playerData.isGuilded == 0) {\n            commitBody.isGuilded = 1\n        }\n        var minStepKey = \"minStep_level_\" + this.level.toString()\n        var minStepNum = require(\"dataMgr\").playerData.minSteps[minStepKey]\n\n        if (minStepNum == null || minStepNum == undefined || this.currentStepNum < minStepNum) {\n            commitBody.minSteps = {}\n            commitBody.minSteps[minStepKey] = this.currentStepNum\n        }\n        commitBody.preLevel = this.level\n        var self = this\n        var successCallBack = function(){\n            if (newSection != null) {\n                self.playerData.currentSection = newSection\n            }\n            if (commitBody.minSteps != null && commitBody.minSteps != undefined) {\n                require(\"dataMgr\").playerData.minSteps[minStepKey] = self.currentStepNum\n            }\n            self.playerData.currentLevel = newLevel\n            self.playerData.physicalPowerCostedFlag = 0\n            self.playerData.preLevel = self.level\n            require(\"gameMgr\").animatedToScene(\"mainScene\")\n        }\n        \n\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n        \n    },\n\n    resolveShadows(shadows,direction) {\n        for (var index in shadows) {\n            var oneShadow = shadows[index]\n            for (var i in shadows) {\n                var anotherShadow = shadows[i]\n                if (oneShadow == anotherShadow) {\n                    continue\n                }\n\n                var testResult = this._selectStaticShadowAndShaodwForResolved(oneShadow,anotherShadow,direction)\n                if (testResult != false) {\n                    var staticShadow = testResult.staticShadow\n                    var tempShadow = testResult.shadowForResolved\n                    // cc.log(\"static: \" + staticShadow.originNode.name, \"temp: \" + tempShadow.originNode.name)\n                    var staticBorderLines = this.helper.getLinesOfOneNode(staticShadow)\n                    var staticLine = null\n                    var ray = this.helper.makeRay(cc.v2(staticShadow.x,staticShadow.y),1000,cc.v2(-direction.x,-direction.y))\n\n                    for(var k in staticBorderLines) {\n                        var line = staticBorderLines[k]\n                        var dis = this.helper.rayTest(ray,line)\n                        if (dis != false) {\n                            staticLine = line\n                            break\n                        }\n                    }\n                    var newPoint2 = this.helper.makeRay(staticLine.p2,1000,cc.v2(staticLine.p2.x - staticLine.p1.x, staticLine.p2.y - staticLine.p1.y)).p2\n                    var newPoint1 = this.helper.makeRay(staticLine.p1,1000,cc.v2(staticLine.p1.x - staticLine.p2.x, staticLine.p1.y - staticLine.p2.y)).p2\n                    staticLine = {\n                        p1: newPoint1,\n                        p2: newPoint2\n                    }\n                    var ray1 = this.helper.makeRay(tempShadow.originNode.position,3000,direction)\n                    var currentDistance = this.helper.rayTest(ray1,staticLine)\n                    var targetDis = this.helper.getDisToSelfBorder(tempShadow.originNode,direction) + tempShadow.originNode.getComponent(\"bulletMgr\").disFromBorder\n                    var suitablePosition = this.helper.getSuitablePoint(tempShadow.originNode.position,currentDistance,targetDis,direction)\n                    var updatedDis = cc.v2(suitablePosition.x - tempShadow.originNode.x, suitablePosition.y - tempShadow.originNode.y).mag()\n                    tempShadow.x = suitablePosition.x\n                    tempShadow.y = suitablePosition.y\n                    tempShadow.dis = updatedDis\n                    return false\n                }\n\n            }\n        }\n        return true\n    },\n    _selectStaticShadowAndShaodwForResolved(shadow1, shadow2, direction) {\n\n        var self = this\n        var temp = function(s1, s2) {\n            var dis = s1.dis\n            var originCrossFlag = false\n            var shadowCrossFlag = false\n\n            var originLines = self.helper.getLinesOfOneNode(s2)\n            for (var key in originLines) {\n                var oneLine = originLines[key]\n                if (self.helper.isOneNodeWillCollidWithOneLineInDirection(s1.originNode,oneLine,direction,dis) != false) {\n                    originCrossFlag = true\n                    break\n                }\n            }\n\n            if (originCrossFlag == false) {\n                return false\n            }\n\n            var shadowLines = self.helper.getLinesOfOneNode(s2.originNode)\n            for (var key in shadowLines) {\n                var oneLine = shadowLines[key]\n                if (self.helper.isOneNodeWillCollidWithOneLineInDirection(s1.originNode,oneLine,direction,dis) != false) {\n                    shadowCrossFlag = true\n                    break\n                }\n            }\n\n            if (shadowCrossFlag == false) {\n                return false\n            }\n\n            return true\n        }\n\n        if (temp(shadow1,shadow2) == true) {\n            var result = {\n                staticShadow: shadow2,\n                shadowForResolved: shadow1\n            }\n            return result\n        }\n\n        if (temp(shadow2,shadow1) == true) {\n            var result = {\n                staticShadow: shadow1,\n                shadowForResolved: shadow2\n            }\n            return result\n        }\n\n        \n        return false\n    },\n\n    generateWalls() {\n        var levelConfig = require(\"levelConfig\")\n        var currentLevel = this.level\n\n        var config = levelConfig[currentLevel]\n        var wallsNode = cc.find(\"Canvas/walls\")\n        for (var index in config.wallPathes) {\n            var onePath = config.wallPathes[index]\n\n            var points = onePath.points\n            var realPoints = []\n            for (var i in points) {\n                var realPoint = null\n                if (i == 0) {\n                    realPoint = cc.v2(points[i].x, points[i].y)\n                }\n                else {\n                    var currentPoint = points[i]\n                    realPoint = cc.v2(realPoints[i - 1].x + currentPoint.x, realPoints[i - 1].y + currentPoint.y)\n                }\n                \n                realPoints.push(realPoint)\n            }\n            var lineWidth = onePath.lineWidth\n            var offset = onePath.offset\n            var wallNodes = []\n            var isClosed = onePath.isClosed\n            if (isClosed == true) {\n                var startPoint = realPoints[0]\n                realPoints.push(startPoint)\n            }\n            for (var i in realPoints) {\n                if (i == 0) {\n                    continue\n                }\n                \n                var node = cc.instantiate(this.linePrefab)\n                node.height = lineWidth\n                var directedLine = cc.v2(realPoints[i].x - realPoints[i - 1].x, realPoints[i].y - realPoints[i - 1].y)\n                node.width = directedLine.mag()\n    \n                var degree = directedLine.signAngle(cc.v2(1,0)) / Math.PI * 180\n                node.angle = -degree\n                node.x = realPoints[i].x - directedLine.x / 2\n                node.y = realPoints[i].y - directedLine.y / 2\n                var offsetDirection = directedLine.rotate(Math.PI / 2)\n                offsetDirection.normalizeSelf()\n                node.x += node.height / 2 * offsetDirection.x\n                node.y += node.height / 2 * offsetDirection.y\n\n                node.x += offset.x\n                node.y += offset.y\n                wallNodes.push(node)\n                wallsNode.addChild(node)                \n            }\n        }\n\n        var bulletConfig = config.bullets\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        for (var index in bulletConfig) {\n            var con = bulletConfig[index]\n            var bullet = cc.instantiate(this.bulletPrefab)\n            bullet.x = con.x\n            bullet.y = con.y\n            bullet.width = bullet.width * con.scale\n            bullet.height = bullet.height * con.scale\n            bulletsNode.addChild(bullet)\n        } \n    },\n\n\n    onClickRetryButton() {\n        var gameMgr = require(\"gameMgr\")\n        if (this.heartForRetryCost == 0) {\n            gameMgr.enterLevelScene(this.level)\n            return\n        }\n        var temp = this.playerData.heart - this.heartForRetryCost\n        if (temp < 0) {\n            return\n        }\n\n        var commitBody = {\n            heart: temp\n        }\n        var self = this\n        var successCallBack = function() {\n            self.playerData.heart = temp\n            // self.heart = temp\n            gameMgr.enterLevelScene(self.level)\n        }\n        this.retryButton.getComponent(cc.Button).interactable = false\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n    },\n    onAllRetryFailed() {\n        this.retryButton.getComponent(cc.Button).interactable = true\n    },\n\n    onClickBackButton() {\n        // cc.director.loadScene(\"mainScene\")\n        require(\"gameMgr\").animatedToScene(\"mainScene\")\n    },\n\n    setupNodesByConfig() {\n        var wallPrefab = require(\"resMgr\").reses[\"wallPrefab\"]\n        var bulletPrefab = require(\"resMgr\").reses[\"bulletPrefab\"]\n        var targetPrefab = require(\"resMgr\").reses[\"targetPrefab\"]\n        var pathWayPrefab = require(\"resMgr\").reses[\"pathWayPrefab\"]\n        var levelSceneConfig = require(\"levelSceneConfig\")[this.level]\n\n        this._setupFillNodes(levelSceneConfig)\n        this._setupWalls(levelSceneConfig,wallPrefab)\n        this._setupTargets(levelSceneConfig,targetPrefab)\n        this._setupPathWaysNode(levelSceneConfig,pathWayPrefab)\n        this._setupBullets(levelSceneConfig,bulletPrefab)\n    },\n    _setupNodePropertyByConfig(givenNode, givenConfig) {\n        for (var key in givenConfig) {\n            givenNode[key] = givenConfig[key]\n        }\n    },\n    _setupFillNodes(levelSceneConfig) {\n        var fillNodesConfig = levelSceneConfig.fillNodes\n        var fillNodes = cc.find(\"Canvas/fillNodes\")\n        for(var index in fillNodesConfig) {\n            var oneNodeConfig = fillNodesConfig[index]\n            var oneNode = new cc.Node()\n            this._setupNodePropertyByConfig(oneNode,oneNodeConfig)\n            fillNodes.addChild(oneNode)\n        }\n    },\n\n    _setupWalls(levelSceneConfig,wallPrefab) {\n        var wallsConfig = levelSceneConfig.walls\n        var walls = cc.find(\"Canvas/walls\")\n        for(var index in wallsConfig) {\n            var oneWallConfig = wallsConfig[index]\n            var oneWallNode = cc.instantiate(wallPrefab)\n            this._setupNodePropertyByConfig(oneWallNode,oneWallConfig)\n            walls.addChild(oneWallNode)\n        }\n    },\n\n    _setupTargets(levelSceneConfig, targetPrefab) {\n        var targetsConfig = levelSceneConfig.targets\n        var targets = cc.find(\"Canvas/targets\") \n        for (var index in targetsConfig) {\n            var oneTargetConfig = targetsConfig[index]\n            var oneTargetNode = cc.instantiate(targetPrefab)\n            this._setupNodePropertyByConfig(oneTargetNode,oneTargetConfig)\n            targets.addChild(oneTargetNode)\n        }\n    },\n    \n    _setupPathWaysNode(levelSceneConfig,pathWayPrefab) {\n        var pathWaysConfig = levelSceneConfig.pathWaysNode\n        var pathWaysNode = cc.find(\"Canvas/pathWaysNode\")\n        for (var index in pathWaysConfig) {\n            var onePathWayConfig = pathWaysConfig[index]\n            var onePathWayNode = new cc.Node(onePathWayConfig.name)\n            for (var index in onePathWayConfig.children){\n                var oneChildConfig = onePathWayConfig.children[index]\n                var oneChildNode = cc.instantiate(pathWayPrefab)\n                this._setupNodePropertyByConfig(oneChildNode,oneChildConfig)\n                onePathWayNode.addChild(oneChildNode)\n            }\n            pathWaysNode.addChild(onePathWayNode)\n        }\n    },\n\n    _setupBullets(levelSceneConfig, bulletPrefab) {\n        var bulletsConfig = levelSceneConfig.bullets\n        var bullets = cc.find(\"Canvas/bullets\")\n        for (var index in bulletsConfig) {\n            var oneBulletConfig = bulletsConfig[index]\n            var oneBulletNode = cc.instantiate(bulletPrefab)\n            \n            var basicConfig = oneBulletConfig.basic\n            //this._setupNodePropertyByConfig(oneBulletNode,basicConfig)\n            var mgrConfig = oneBulletConfig.mgr\n            var bulletMgr = oneBulletNode.getComponent(\"bulletMgr\")\n            bulletMgr.bulletType = mgrConfig.bulletType\n            if (mgrConfig.bulletType == 2) {\n                oneBulletNode.getComponent(cc.Sprite).spriteFrame = bulletMgr.sliderFrame\n            }\n            this._setupNodePropertyByConfig(oneBulletNode,basicConfig)\n            if (bulletMgr.bulletType == 2) {\n                if (mgrConfig.pathWaysNodeName != \"\" && mgrConfig.pathWaysNodeName != null) {\n                    var pathWaysNodePath = \"Canvas/pathWaysNode/\" + mgrConfig.pathWaysNodeName\n                    var pathWaysNode = cc.find(pathWaysNodePath)\n                    bulletMgr.pathWaysNode = pathWaysNode\n                }\n            }\n\n            bullets.addChild(oneBulletNode)\n        }\n    },\n\n\n    dataMonitored(key,value) {\n        if (key.indexOf(\"minStep_level_\") != -1) {\n            //typically one key is \"minStep_level_1\"\n            var levelId = key.slice(14)\n            if (parseInt(levelId) == parseInt(this.level)) {\n                var minStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"minStepNumLabel\")\n                //minStepNumLabel.getComponent(cc.Label).string = \"最小步数：\" + value.toString()\n                minStepNumLabel.getComponent(cc.Label).string = require(\"textConfig\").getFormatedString(153,[value.toString()])\n            }\n        }\n\n        else if (key == \"heart\") {\n            this.heart = value\n        }\n    }\n\n});\n\n"]}