{"version":3,"sources":["../../../../assets/scripts/assets/scripts/levelMgr.js"],"names":["cc","Class","extends","Component","properties","bullets","minDis","maxOffsetDegree","directionTryto","flag","helper","walls","targetsNum","get","_targetsNum","set","value","onSuccess","linePrefab","Prefab","bulletPrefab","playerData","retryButton","Node","heartForRetryCost","_heartForRetryCostwe","getChildByName","getComponent","Label","string","toString","heart","_heart","find","Button","interactable","isMoved","maxHeart","_maxHeart","_isMoved","currentStepNum","_currentStepNum","currentStepNumLabel","node","level","soundEffect","onLoad","Helper","require","setupNodesByConfig","self","loader","loadRes","err","res","start","on","onTouchStart","onTouchMove","onTouchEnd","bulletsNode","children","currentLevel","delegate","wallsNode","length","graphic","Graphics","startPoint","pointNodes","index","point","moveTo","x","y","lineTo","close","stroke","fill","minStepNumLabel","minStepKey","minStepNum","minSteps","undefined","playBgm","levelConfig","bgmPath","audioEngine","stopAll","play","event","startLocation","getStartLocation","tmpDirection","v2","getLocationX","getLocationY","dis","mag","direction","getPossiableDirection","moveBullets","onDestroy","off","delta","isPossiableWithGivenDirection","givenDirection","angle","signAngle","degree","Math","PI","abs","status","shadows","bullet","bulletMgr","nearestWallInfo","getNearestWallInfo","shadowNode","suitablePosition","width","height","originNode","push","maxTryTime","resolveShadows","willAddStepNum","isTwoPositionSimilarEqual","targetPosition","movingDirection","normalizeSelf","movingTime","v","vx","vy","movingSpeed","scheduleOnce","levels","currentSection","indexOf","newLevel","newSection","commitBody","newLevels","physicalPowerCostedFlag","preLevel","successCallBack","animatedToScene","commitPlayerDataToServer","oneShadow","i","anotherShadow","testResult","_selectStaticShadowAndShaodwForResolved","staticShadow","tempShadow","shadowForResolved","staticBorderLines","getLinesOfOneNode","staticLine","ray","makeRay","k","line","rayTest","newPoint2","p2","p1","newPoint1","ray1","position","currentDistance","targetDis","getDisToSelfBorder","disFromBorder","getSuitablePoint","updatedDis","shadow1","shadow2","temp","s1","s2","originCrossFlag","shadowCrossFlag","originLines","key","oneLine","isOneNodeWillCollidWithOneLineInDirection","shadowLines","result","generateWalls","config","wallPathes","onePath","points","realPoints","realPoint","currentPoint","lineWidth","offset","wallNodes","isClosed","instantiate","directedLine","offsetDirection","rotate","addChild","bulletConfig","con","scale","onClickRetryButton","gameMgr","enterLevelScene","onAllRetryFailed","onClickBackButton","wallPrefab","reses","targetPrefab","pathWayPrefab","levelSceneConfig","_setupFillNodes","_setupWalls","_setupTargets","_setupPathWaysNode","_setupBullets","_setupNodePropertyByConfig","givenNode","givenConfig","fillNodesConfig","fillNodes","oneNodeConfig","oneNode","wallsConfig","oneWallConfig","oneWallNode","targetsConfig","targets","oneTargetConfig","oneTargetNode","pathWaysConfig","pathWaysNode","onePathWayConfig","onePathWayNode","name","oneChildConfig","oneChildNode","bulletsConfig","oneBulletConfig","oneBulletNode","basicConfig","basic","mgrConfig","mgr","bulletType","Sprite","spriteFrame","sliderFrame","pathWaysNodeName","pathWaysNodePath","dataMonitored","levelId","slice","parseInt"],"mappings":"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","file":"levelMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        bullets: [],\n        minDis: 50,\n        maxOffsetDegree: 45,\n        directionTryto: null,\n        flag: false,\n        helper: null,\n\n        walls: [],\n        targetsNum: {\n            get() {\n                return this._targetsNum\n            },\n            set(value) {\n                this._targetsNum = value\n                if (value == 0) {\n                    this.onSuccess()\n                }\n            }\n        },\n\n        linePrefab: cc.Prefab,\n        bulletPrefab: cc.Prefab,\n\n        playerData: null,\n        retryButton: cc.Node,\n        heartForRetryCost: {\n            get() {\n                return this._heartForRetryCostwe\n            },\n            set(value){\n                this._heartForRetryCostwe = value\n                this.retryButton.getChildByName(\"heartCostLabel\").getComponent(cc.Label).string = value.toString()\n            } \n        },\n\n        heart: {\n            get() {\n                return this._heart\n            },\n            set(value) {\n                this._heart = value\n                cc.find(\"Canvas/uiNode/heartLabel\").getComponent(cc.Label).string = value.toString()\n                if (value < this.heartForRetryCost) {\n                    this.retryButton.getComponent(cc.Button).interactable = false\n                }\n                else {\n                    if (this.isMoved == false) {\n                        return\n                    }\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n\n        maxHeart: {\n            get() {\n                return this._maxHeart\n            },\n            set(value) {\n                this._maxHeart = value\n            }\n        },\n\n        isMoved: {\n            get() {\n                if (this._isMoved == null) {\n                    this._isMoved = false\n                }\n                return this._isMoved\n            },\n            set(value) {\n                this._isMoved = value\n                if (value == true && this.heartForRetryCost <= this.heart) {\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n        currentStepNum: {\n            get() {\n                if (this._currentStepNum == null) {\n                    this._currentStepNum = 0\n                }\n                return this._currentStepNum\n            },\n            set(value) {\n                this._currentStepNum = value\n                var currentStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"currentStepNumLabel\")\n                currentStepNumLabel.getComponent(cc.Label).string = \"当前步数：\" + value.toString()\n            }\n        },\n        level: null,\n        soundEffect: null\n        \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var Helper = require(\"helper\")\n        this.helper = new Helper()\n        //this.level = 1\n        this.setupNodesByConfig()\n        var self = this\n        cc.loader.loadRes(\"effectSounds/hit\",function(err,res){\n            self.soundEffect = res\n        })\n    },\n\n    start () {\n        this.node.on(\"touchstart\",this.onTouchStart,this)\n        this.node.on(\"touchmove\",this.onTouchMove,this)\n        this.node.on(\"touchend\",this.onTouchEnd,this)\n        //this.generateWalls()\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        this.bullets = bulletsNode.children\n        this.playerData = require(\"dataMgr\").playerData\n\n        this.maxHeart = this.playerData.maxHeart\n        if (this.level == this.playerData.currentLevel) {\n            this.heartForRetryCost = require(\"levelConfig\")[this.playerData.currentLevel.toString()].heartForRetryCost\n        }\n        else {\n            this.heartForRetryCost = 0\n        }\n    \n        this.heart = this.playerData.heart\n        require(\"networkMgr\").delegate = this\n        var wallsNode = cc.find(\"Canvas/walls\")\n        this.walls = wallsNode.children\n        this.targetsNum = cc.find(\"Canvas/targets\").children.length\n\n        var graphic = cc.find(\"Canvas/fillNodes\").getComponent(cc.Graphics)\n        var startPoint = null\n        var pointNodes = cc.find(\"Canvas/fillNodes\").children\n        if (pointNodes.length == 0) {\n            return\n        }\n        for (var index in pointNodes) {\n            var point = pointNodes[index]\n            if (startPoint == null) {\n                graphic.moveTo(point.x, point.y)\n                startPoint = point\n            }\n\n            graphic.lineTo(point.x, point.y)\n        }\n        graphic.close()\n        graphic.stroke()\n        graphic.fill()\n\n        var minStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"minStepNumLabel\")\n        var minStepKey = \"minStep_level_\" + this.level.toString()\n        var minStepNum = require(\"dataMgr\").playerData.minSteps[minStepKey]\n        if (minStepNum == null || minStepNum == undefined) {\n            minStepNum = \"无\"\n        }\n        minStepNumLabel.getComponent(cc.Label).string = \"最小步数：\" + minStepNum.toString()\n        this.playBgm()\n    },\n\n    // update (dt) {},\n    playBgm() {\n        var levelConfig = require(\"levelConfig\")\n        var bgmPath = levelConfig[this.level].bgmPath\n        cc.loader.loadRes(bgmPath,function(err,res){\n            cc.audioEngine.stopAll()\n            cc.audioEngine.play(res)\n        })\n    },\n\n    onTouchStart(event){\n        this.directionTryto = null\n        this.flag = true\n    },\n\n    onTouchMove(event) {\n        if (this.flag == false) {\n            return\n        }\n        var startLocation = event.getStartLocation()\n        var tmpDirection = cc.v2(event.getLocationX() - startLocation.x, event.getLocationY() - startLocation.y)\n        var dis = tmpDirection.mag()\n        if (dis < this.minDis) {\n            return\n        }\n        else {\n            var direction = this.getPossiableDirection(tmpDirection)\n            if (direction == -1) {\n                this.flag = false\n                return\n            }\n\n            if (this.directionTryto == null) {\n                this.directionTryto = direction\n            }\n\n            this.flag = false\n            this.moveBullets(this.directionTryto)\n        }\n    },\n    onTouchEnd(event) {\n\n    },\n\n    onDestroy() {\n        this.node.off(\"touchstart\",this.onTouchStart,this)\n        this.node.off(\"touchmove\",this.onTouchMove,this)\n        this.node.off(\"touchend\",this.onTouchEnd,this)\n    },\n\n    getPossiableDirection(delta) {\n        if (this.isPossiableWithGivenDirection(delta,cc.v2(1,0)) == true) {\n            return cc.v2(1,0) //right\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,-1)) == true) {\n            return cc.v2(0,-1) //down\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(-1,0)) == true) {\n            return cc.v2(-1,0) //left\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,1)) == true) {\n            return cc.v2(0,1) //up\n        }\n        else {\n            return -1 //no direction match\n        }\n    },\n    \n    isPossiableWithGivenDirection(delta,givenDirection) {\n        var angle = delta.signAngle(givenDirection)\n        var degree = angle / Math.PI * 180\n        if (Math.abs(degree) <= this.maxOffsetDegree) {\n            return true\n        }\n        else {\n            return false\n        }\n    },\n    \n    moveBullets(direction) {\n        for (var index in this.bullets) {\n            if (this.bullets[index].getComponent(\"bulletMgr\").status != 0) {\n                return\n            }\n        }\n        var shadows = []\n        for (var index in this.bullets) {\n            var bullet = this.bullets[index]\n            var bulletMgr = bullet.getComponent(\"bulletMgr\")\n            var nearestWallInfo = bulletMgr.getNearestWallInfo(direction)\n            var shadowNode = {\n                x: nearestWallInfo.suitablePosition.x,\n                y: nearestWallInfo.suitablePosition.y,\n                width: bullet.width,\n                height: bullet.height,\n                dis: nearestWallInfo.dis,\n                originNode: bullet\n            }\n            shadows.push(shadowNode)\n        }\n\n        //resolve shadows\n        var maxTryTime = 100\n        while(this.resolveShadows(shadows,direction) == false) {\n            if (maxTryTime <= 0) {\n                // cc.log(\"CAN'T FIND A SUITABLE POSITION\")\n                break\n            }\n            maxTryTime -= 1\n        }\n        var willAddStepNum = false\n        for (var index in shadows) {\n            var shadowNode = shadows[index]\n            var originNode = shadowNode.originNode\n            if (this.helper.isTwoPositionSimilarEqual(cc.v2(shadowNode.x,shadowNode.y),cc.v2(originNode.x, originNode.y)) == true) {\n                continue\n            }\n            \n            var bulletMgr = originNode.getComponent(\"bulletMgr\")\n            bulletMgr.targetPosition = cc.v2(shadowNode.x, shadowNode.y)\n            bulletMgr.movingDirection = direction\n            \n            bulletMgr.movingDirection.normalizeSelf()\n            if (bulletMgr.movingTime != null) {\n                var dis = cc.v2(bulletMgr.targetPosition.x - originNode.x, bulletMgr.targetPosition.y - originNode.y).mag()\n                var v = dis / bulletMgr.movingTime\n\n                bulletMgr.vx = v * bulletMgr.movingDirection.x\n                bulletMgr.vy = v * bulletMgr.movingDirection.y\n            }\n            else {\n                bulletMgr.vx = bulletMgr.movingDirection.x * bulletMgr.movingSpeed\n                bulletMgr.vy = bulletMgr.movingDirection.y * bulletMgr.movingSpeed\n            }\n            bulletMgr.status = 1\n            if (this.isMoved != true) {\n                this.isMoved = true\n            }\n            if (willAddStepNum == false) {\n                willAddStepNum = true\n            }\n        }\n        if (willAddStepNum == true) {\n            this.currentStepNum += 1\n            if (this.soundEffect != null) {\n                this.scheduleOnce(function(){\n                    cc.audioEngine.play(this.soundEffect)\n                },0.3)\n            }\n        }\n    },\n\n    onSuccess() {\n        this.retryButton.getComponent(cc.Button).interactable = false\n        // if (this.level != this.playerData.currentLevel) {\n        //     // cc.director.loadScene(\"mainScene\")\n        //     require(\"gameMgr\").animatedToScene(\"mainScene\")\n        //     return\n        // }\n\n        var levels = require(\"sectionConfig\")[this.playerData.currentSection].levels\n        var index = levels.indexOf(this.playerData.currentLevel)\n        var newLevel = null\n        var newSection = null\n        var commitBody = null\n        if (index < levels.length -1) {\n            index += 1\n            newLevel = levels[index]\n        }\n        else {\n            newSection = this.playerData.currentSection + 1\n            var newLevels = require(\"sectionConfig\")[newSection].levels\n            newLevel = newLevels[0]\n        }\n        \n        if (newSection == null) {\n            commitBody = {\n                currentLevel: newLevel, \n            } \n        }\n        else {\n            commitBody = {\n                currentSection: newSection,\n                currentLevel: newLevel,   \n            }\n        }\n\n        if (this.level == require(\"dataMgr\").playerData.currentLevel) {\n            commitBody.physicalPowerCostedFlag = 0\n        }\n        \n        var minStepKey = \"minStep_level_\" + this.level.toString()\n        var minStepNum = require(\"dataMgr\").playerData.minSteps[minStepKey]\n\n        if (minStepNum == null || minStepNum == undefined || this.currentStepNum < minStepNum) {\n            commitBody.minSteps = {}\n            commitBody.minSteps[minStepKey] = this.currentStepNum\n        }\n        commitBody.preLevel = this.level\n        var self = this\n        var successCallBack = function(){\n            if (newSection != null) {\n                self.playerData.currentSection = newSection\n            }\n            if (commitBody.minSteps != null && commitBody.minSteps != undefined) {\n                require(\"dataMgr\").playerData.minSteps[minStepKey] = self.currentStepNum\n            }\n            self.playerData.currentLevel = newLevel\n            self.playerData.physicalPowerCostedFlag = 0\n            self.playerData.preLevel = self.level\n            require(\"gameMgr\").animatedToScene(\"mainScene\")\n        }\n        \n\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n        \n    },\n\n    resolveShadows(shadows,direction) {\n        for (var index in shadows) {\n            var oneShadow = shadows[index]\n            for (var i in shadows) {\n                var anotherShadow = shadows[i]\n                if (oneShadow == anotherShadow) {\n                    continue\n                }\n\n                var testResult = this._selectStaticShadowAndShaodwForResolved(oneShadow,anotherShadow,direction)\n                if (testResult != false) {\n                    var staticShadow = testResult.staticShadow\n                    var tempShadow = testResult.shadowForResolved\n                    // cc.log(\"static: \" + staticShadow.originNode.name, \"temp: \" + tempShadow.originNode.name)\n                    var staticBorderLines = this.helper.getLinesOfOneNode(staticShadow)\n                    var staticLine = null\n                    var ray = this.helper.makeRay(cc.v2(staticShadow.x,staticShadow.y),1000,cc.v2(-direction.x,-direction.y))\n\n                    for(var k in staticBorderLines) {\n                        var line = staticBorderLines[k]\n                        var dis = this.helper.rayTest(ray,line)\n                        if (dis != false) {\n                            staticLine = line\n                            break\n                        }\n                    }\n                    var newPoint2 = this.helper.makeRay(staticLine.p2,1000,cc.v2(staticLine.p2.x - staticLine.p1.x, staticLine.p2.y - staticLine.p1.y)).p2\n                    var newPoint1 = this.helper.makeRay(staticLine.p1,1000,cc.v2(staticLine.p1.x - staticLine.p2.x, staticLine.p1.y - staticLine.p2.y)).p2\n                    staticLine = {\n                        p1: newPoint1,\n                        p2: newPoint2\n                    }\n                    var ray1 = this.helper.makeRay(tempShadow.originNode.position,3000,direction)\n                    var currentDistance = this.helper.rayTest(ray1,staticLine)\n                    var targetDis = this.helper.getDisToSelfBorder(tempShadow.originNode,direction) + tempShadow.originNode.getComponent(\"bulletMgr\").disFromBorder\n                    var suitablePosition = this.helper.getSuitablePoint(tempShadow.originNode.position,currentDistance,targetDis,direction)\n                    var updatedDis = cc.v2(suitablePosition.x - tempShadow.originNode.x, suitablePosition.y - tempShadow.originNode.y).mag()\n                    tempShadow.x = suitablePosition.x\n                    tempShadow.y = suitablePosition.y\n                    tempShadow.dis = updatedDis\n                    return false\n                }\n\n            }\n        }\n        return true\n    },\n    _selectStaticShadowAndShaodwForResolved(shadow1, shadow2, direction) {\n\n        var self = this\n        var temp = function(s1, s2) {\n            var dis = s1.dis\n            var originCrossFlag = false\n            var shadowCrossFlag = false\n\n            var originLines = self.helper.getLinesOfOneNode(s2)\n            for (var key in originLines) {\n                var oneLine = originLines[key]\n                if (self.helper.isOneNodeWillCollidWithOneLineInDirection(s1.originNode,oneLine,direction,dis) != false) {\n                    originCrossFlag = true\n                    break\n                }\n            }\n\n            if (originCrossFlag == false) {\n                return false\n            }\n\n            var shadowLines = self.helper.getLinesOfOneNode(s2.originNode)\n            for (var key in shadowLines) {\n                var oneLine = shadowLines[key]\n                if (self.helper.isOneNodeWillCollidWithOneLineInDirection(s1.originNode,oneLine,direction,dis) != false) {\n                    shadowCrossFlag = true\n                    break\n                }\n            }\n\n            if (shadowCrossFlag == false) {\n                return false\n            }\n\n            return true\n        }\n\n        if (temp(shadow1,shadow2) == true) {\n            var result = {\n                staticShadow: shadow2,\n                shadowForResolved: shadow1\n            }\n            return result\n        }\n\n        if (temp(shadow2,shadow1) == true) {\n            var result = {\n                staticShadow: shadow1,\n                shadowForResolved: shadow2\n            }\n            return result\n        }\n\n        \n        return false\n    },\n\n    generateWalls() {\n        var levelConfig = require(\"levelConfig\")\n        var currentLevel = this.level\n\n        var config = levelConfig[currentLevel]\n        var wallsNode = cc.find(\"Canvas/walls\")\n        for (var index in config.wallPathes) {\n            var onePath = config.wallPathes[index]\n\n            var points = onePath.points\n            var realPoints = []\n            for (var i in points) {\n                var realPoint = null\n                if (i == 0) {\n                    realPoint = cc.v2(points[i].x, points[i].y)\n                }\n                else {\n                    var currentPoint = points[i]\n                    realPoint = cc.v2(realPoints[i - 1].x + currentPoint.x, realPoints[i - 1].y + currentPoint.y)\n                }\n                \n                realPoints.push(realPoint)\n            }\n            var lineWidth = onePath.lineWidth\n            var offset = onePath.offset\n            var wallNodes = []\n            var isClosed = onePath.isClosed\n            if (isClosed == true) {\n                var startPoint = realPoints[0]\n                realPoints.push(startPoint)\n            }\n            for (var i in realPoints) {\n                if (i == 0) {\n                    continue\n                }\n                \n                var node = cc.instantiate(this.linePrefab)\n                node.height = lineWidth\n                var directedLine = cc.v2(realPoints[i].x - realPoints[i - 1].x, realPoints[i].y - realPoints[i - 1].y)\n                node.width = directedLine.mag()\n    \n                var degree = directedLine.signAngle(cc.v2(1,0)) / Math.PI * 180\n                node.angle = -degree\n                node.x = realPoints[i].x - directedLine.x / 2\n                node.y = realPoints[i].y - directedLine.y / 2\n                var offsetDirection = directedLine.rotate(Math.PI / 2)\n                offsetDirection.normalizeSelf()\n                node.x += node.height / 2 * offsetDirection.x\n                node.y += node.height / 2 * offsetDirection.y\n\n                node.x += offset.x\n                node.y += offset.y\n                wallNodes.push(node)\n                wallsNode.addChild(node)                \n            }\n        }\n\n        var bulletConfig = config.bullets\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        for (var index in bulletConfig) {\n            var con = bulletConfig[index]\n            var bullet = cc.instantiate(this.bulletPrefab)\n            bullet.x = con.x\n            bullet.y = con.y\n            bullet.width = bullet.width * con.scale\n            bullet.height = bullet.height * con.scale\n            bulletsNode.addChild(bullet)\n        } \n    },\n\n\n    onClickRetryButton() {\n        var gameMgr = require(\"gameMgr\")\n        if (this.heartForRetryCost == 0) {\n            gameMgr.enterLevelScene(this.level)\n            return\n        }\n        var temp = this.playerData.heart - this.heartForRetryCost\n        if (temp < 0) {\n            return\n        }\n\n        var commitBody = {\n            heart: temp\n        }\n        var self = this\n        var successCallBack = function() {\n            self.playerData.heart = temp\n            // self.heart = temp\n            gameMgr.enterLevelScene(self.level)\n        }\n        this.retryButton.getComponent(cc.Button).interactable = false\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n    },\n    onAllRetryFailed() {\n        this.retryButton.getComponent(cc.Button).interactable = true\n    },\n\n    onClickBackButton() {\n        // cc.director.loadScene(\"mainScene\")\n        require(\"gameMgr\").animatedToScene(\"mainScene\")\n    },\n\n    setupNodesByConfig() {\n        var wallPrefab = require(\"resMgr\").reses[\"wallPrefab\"]\n        var bulletPrefab = require(\"resMgr\").reses[\"bulletPrefab\"]\n        var targetPrefab = require(\"resMgr\").reses[\"targetPrefab\"]\n        var pathWayPrefab = require(\"resMgr\").reses[\"pathWayPrefab\"]\n        var levelSceneConfig = require(\"levelSceneConfig\")[this.level]\n\n        this._setupFillNodes(levelSceneConfig)\n        this._setupWalls(levelSceneConfig,wallPrefab)\n        this._setupTargets(levelSceneConfig,targetPrefab)\n        this._setupPathWaysNode(levelSceneConfig,pathWayPrefab)\n        this._setupBullets(levelSceneConfig,bulletPrefab)\n    },\n    _setupNodePropertyByConfig(givenNode, givenConfig) {\n        for (var key in givenConfig) {\n            givenNode[key] = givenConfig[key]\n        }\n    },\n    _setupFillNodes(levelSceneConfig) {\n        var fillNodesConfig = levelSceneConfig.fillNodes\n        var fillNodes = cc.find(\"Canvas/fillNodes\")\n        for(var index in fillNodesConfig) {\n            var oneNodeConfig = fillNodesConfig[index]\n            var oneNode = new cc.Node()\n            this._setupNodePropertyByConfig(oneNode,oneNodeConfig)\n            fillNodes.addChild(oneNode)\n        }\n    },\n\n    _setupWalls(levelSceneConfig,wallPrefab) {\n        var wallsConfig = levelSceneConfig.walls\n        var walls = cc.find(\"Canvas/walls\")\n        for(var index in wallsConfig) {\n            var oneWallConfig = wallsConfig[index]\n            var oneWallNode = cc.instantiate(wallPrefab)\n            this._setupNodePropertyByConfig(oneWallNode,oneWallConfig)\n            walls.addChild(oneWallNode)\n        }\n    },\n\n    _setupTargets(levelSceneConfig, targetPrefab) {\n        var targetsConfig = levelSceneConfig.targets\n        var targets = cc.find(\"Canvas/targets\") \n        for (var index in targetsConfig) {\n            var oneTargetConfig = targetsConfig[index]\n            var oneTargetNode = cc.instantiate(targetPrefab)\n            this._setupNodePropertyByConfig(oneTargetNode,oneTargetConfig)\n            targets.addChild(oneTargetNode)\n        }\n    },\n    \n    _setupPathWaysNode(levelSceneConfig,pathWayPrefab) {\n        var pathWaysConfig = levelSceneConfig.pathWaysNode\n        var pathWaysNode = cc.find(\"Canvas/pathWaysNode\")\n        for (var index in pathWaysConfig) {\n            var onePathWayConfig = pathWaysConfig[index]\n            var onePathWayNode = new cc.Node(onePathWayConfig.name)\n            for (var index in onePathWayConfig.children){\n                var oneChildConfig = onePathWayConfig.children[index]\n                var oneChildNode = cc.instantiate(pathWayPrefab)\n                this._setupNodePropertyByConfig(oneChildNode,oneChildConfig)\n                onePathWayNode.addChild(oneChildNode)\n            }\n            pathWaysNode.addChild(onePathWayNode)\n        }\n    },\n\n    _setupBullets(levelSceneConfig, bulletPrefab) {\n        var bulletsConfig = levelSceneConfig.bullets\n        var bullets = cc.find(\"Canvas/bullets\")\n        for (var index in bulletsConfig) {\n            var oneBulletConfig = bulletsConfig[index]\n            var oneBulletNode = cc.instantiate(bulletPrefab)\n            \n            var basicConfig = oneBulletConfig.basic\n            //this._setupNodePropertyByConfig(oneBulletNode,basicConfig)\n            var mgrConfig = oneBulletConfig.mgr\n            var bulletMgr = oneBulletNode.getComponent(\"bulletMgr\")\n            bulletMgr.bulletType = mgrConfig.bulletType\n            if (mgrConfig.bulletType == 2) {\n                oneBulletNode.getComponent(cc.Sprite).spriteFrame = bulletMgr.sliderFrame\n            }\n            this._setupNodePropertyByConfig(oneBulletNode,basicConfig)\n            if (bulletMgr.bulletType == 2) {\n                if (mgrConfig.pathWaysNodeName != \"\" && mgrConfig.pathWaysNodeName != null) {\n                    var pathWaysNodePath = \"Canvas/pathWaysNode/\" + mgrConfig.pathWaysNodeName\n                    var pathWaysNode = cc.find(pathWaysNodePath)\n                    bulletMgr.pathWaysNode = pathWaysNode\n                }\n            }\n\n            bullets.addChild(oneBulletNode)\n        }\n    },\n\n\n    dataMonitored(key,value) {\n        if (key.indexOf(\"minStep_level_\") != -1) {\n            //typically one key is \"minStep_level_1\"\n            var levelId = key.slice(14)\n            if (parseInt(levelId) == parseInt(this.level)) {\n                var minStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"minStepNumLabel\")\n                minStepNumLabel.getComponent(cc.Label).string = \"最小步数：\" + value.toString()\n            }\n        }\n\n        else if (key == \"heart\") {\n            this.heart = value\n        }\n    }\n\n});\n\n"]}