{"version":3,"sources":["assets/scripts/libs/resMgr.js"],"names":["ResMgr","cc","Class","Component","properties","reses","resNum","loadedResNum","start","loadReses","complet","resObj","notiSysPrefab","wallPrefab","bulletPrefab","targetPrefab","pathWayPrefab","welfarySysPrefab","signInSysPrefab","addPropertyNumSysPrefab","mailSysPrefab","selectSectionSysPrefab","storySysPrefab","coverNodePrefab","guildNodePrefab","activityNodePrefab","len","Object","keys","length","self","key","temp","path","loader","loadRes","err","res","console","log","sharedResMgr","module","exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,EAAE,CAACC,KAAH,CAAS;AAClB,aAASD,EAAE,CAACE,SADM;AAGlBC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE,IAhBC;AAiBRC,IAAAA,MAAM,EAAE,IAjBA;AAkBRC,IAAAA,YAAY,EAAE,CAlBN,CAmBR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAhCQ,GAHM;AAsClB;AAEA;AAEAC,EAAAA,KA1CkB,mBA0CT,CAER,CA5CiB;AA8ClBC,EAAAA,SA9CkB,uBA8CgB;AAAA,QAAxBC,OAAwB,uEAAd,YAAU,CAAE,CAAE;AAC9B,QAAIC,MAAM,GAAG;AACT;AACA;AACAC,MAAAA,aAAa,EAAE,kBAHN;AAIT;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,UAAU,EAAE,cAXH;AAYTC,MAAAA,YAAY,EAAE,gBAZL;AAaTC,MAAAA,YAAY,EAAE,gBAbL;AAcTC,MAAAA,aAAa,EAAE,iBAdN;AAiBTC,MAAAA,gBAAgB,EAAE,mBAjBT;AAkBTC,MAAAA,eAAe,EAAE,qBAlBR;AAmBTC,MAAAA,uBAAuB,EAAE,0BAnBhB;AAoBTC,MAAAA,aAAa,EAAE,mBApBN;AAqBTC,MAAAA,sBAAsB,EAAE,yBArBf;AAsBTC,MAAAA,cAAc,EAAE,mBAtBP;AAwBTC,MAAAA,eAAe,EAAE,4BAxBR;AAyBTC,MAAAA,eAAe,EAAE,mBAzBR;AA0BTC,MAAAA,kBAAkB,EAAE;AA1BX,KAAb;AA6BA,QAAIC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYjB,MAAZ,EAAoBkB,MAA9B;AACA,SAAKvB,MAAL,GAAcoB,GAAd;AACA,SAAKrB,KAAL,GAAa,EAAb;AACA,QAAIyB,IAAI,GAAG,IAAX;;AACA,SAAK,IAAIC,GAAT,IAAgBpB,MAAhB,EAAwB;AACpB,UAAIqB,IAAI,GAAG,SAAPA,IAAO,CAASD,GAAT,EAAc;AACrB,YAAIE,IAAI,GAAGtB,MAAM,CAACoB,GAAD,CAAjB;AACA9B,QAAAA,EAAE,CAACiC,MAAH,CAAUC,OAAV,CAAkBF,IAAlB,EAAwB,UAASG,GAAT,EAAaC,GAAb,EAAiB;AACrC,cAAIA,GAAJ,EAAS;AACLP,YAAAA,IAAI,CAACzB,KAAL,CAAW0B,GAAX,IAAkBM,GAAlB;AACAP,YAAAA,IAAI,CAACvB,YAAL,IAAqB,CAArB;;AACA,gBAAIuB,IAAI,CAACvB,YAAL,IAAqBuB,IAAI,CAACxB,MAA9B,EAAsC;AAClCI,cAAAA,OAAO;AACV;AACJ,WAND,MAOK;AACD4B,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBR,GAAtB,GAA4B,IAA5B,GAAmCK,GAA/C;AACH;AACJ,SAXD;AAYH,OAdD;;AAeAJ,MAAAA,IAAI,CAACD,GAAD,CAAJ;AACH;AACJ,GAlGiB,CAoGlB;;AApGkB,CAAT,CAAb;AAuGA,IAAIS,YAAY,GAAG,IAAIxC,MAAJ,EAAnB;AACAyC,MAAM,CAACC,OAAP,GAAiBF,YAAjB","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar ResMgr = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        reses: null,\n        resNum: null,\n        loadedResNum: 0\n        //{\n        //     get() {\n        //         if (this._loadedResNum == null) {\n        //             this._loadedResNum = 0\n        //         }\n        //         return this._loadedResNum\n        //     },\n        //     set(value) {\n        //         this._loadedResNum = value\n        //         if (value == this.resNum) {\n\n        //         }\n        //     }\n        // }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    loadReses(complet = function(){}) {\n        var resObj = {\n            // ensureSysPrefab: \"prefabs/ensureNode\",\n            // addSysPrefab: \"prefabs/addUI\",\n            notiSysPrefab: \"prefabs/notiNode\",\n            // mailSysTagPrefab: \"prefabs/mailTagNode\",\n            // mailSysMailSectionNodePrefab: \"prefabs/mailSectionNode\",\n            // mailSysSelectedTagEffectPrefab: \"prefabs/selectedTagEffect\",\n            // mailUIPrefab: \"prefabs/mailUI\",\n            // mailOptionPrefab: \"prefabs/mailOptionNode\",\n            // mailSysMailPrefab: \"prefabs/mailNode\",\n            // redPointPrefab: \"prefabs/redPoint\",\n            wallPrefab: \"prefabs/wall\",\n            bulletPrefab: \"prefabs/bullet\",\n            targetPrefab: \"prefabs/target\",\n            pathWayPrefab: \"prefabs/pathWay\",\n\n\n            welfarySysPrefab: \"prefabs/welfaryUI\",\n            signInSysPrefab: \"prefabs/signInSysUI\",\n            addPropertyNumSysPrefab: \"prefabs/addPropertyNumUI\",\n            mailSysPrefab: \"prefabs/mailSysUI\",\n            selectSectionSysPrefab: \"prefabs/selectSectionUI\",\n            storySysPrefab: \"prefabs/storyNode\",\n\n            coverNodePrefab: \"prefabs/fullSceneCoverNode\",\n            guildNodePrefab: \"prefabs/guildNode\",\n            activityNodePrefab: \"prefabs/activityNode\"\n        }\n\n        var len = Object.keys(resObj).length\n        this.resNum = len\n        this.reses = {}\n        var self = this\n        for (var key in resObj) {\n            var temp = function(key) {\n                var path = resObj[key]\n                cc.loader.loadRes(path, function(err,res){\n                    if (res) {\n                        self.reses[key] = res\n                        self.loadedResNum += 1\n                        if (self.loadedResNum == self.resNum) {\n                            complet()\n                        }\n                    }\n                    else {\n                        console.log(\"LOAD RES ERRO OF \" + key + \" :\" + err)\n                    }\n                })\n            }\n            temp(key)\n        }\n    },\n\n    // update (dt) {},\n});\n\nvar sharedResMgr = new ResMgr()\nmodule.exports = sharedResMgr\n"]}