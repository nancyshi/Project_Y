{"version":3,"sources":["assets/scripts/helper.js"],"names":["Helper","cc","Class","properties","segmentsIntr","a","b","c","d","denominator","y","x","similarMinus","rotateSegment","origin","degree","rotatedA","rotateOnePoint","rotatedB","p1","p2","angle","Math","PI","pb","v2","rotatedPb","rotate","rayTest","line1","line2","result","dis","mag","getSuitablePoint","currentDis","targetDis","direction","normalizeSelf","currentDisX","currentDisY","ratio","resultX","resultY","makeRay","ray","dx","dy","getLinesOfOneNode","givenNode","offset","height","width","p3","p4","p5","p6","p7","p8","line3","line4","undefined","obj","lowerLine","upperLine","leftLine","rightLine","error","isTwoNodeCross","node1","node2","info1","getInfoOfOneNode","info2","minY","maxY","minX","maxX","leftUpPoint","rightUpPoint","leftDownPoint","rightDownPoint","arry","index","point","getDisToSelfBorder","borderLines","key","line","getPointsOfOneNode","isOneNodeWillCollidWithOneLineInDirection","givenLine","givenDirection","nodePoints","rays","onePoint","push","oneRay","minerX","maxerX","minerY","maxerY","lineMinx","lineMaxX","lineMinY","lineMaxY","lineDirection","lenthenLineP2","lenthenLineP1","lenthenLine","testRay","distance","isTwoPositionSimilarEqual","faultTolerent","isTwoValueSimilarEqual","v1","temp","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar Helper = cc.Class({\n    properties: {},\n\n    segmentsIntr(a, b, c, d){  \n        /** 1 解线性方程组, 求线段交点. **/  \n        // 如果分母为0 则平行或共线, 不相交  \n            var denominator = (b.y - a.y)*(d.x - c.x) - (a.x - b.x)*(c.y - d.y);  \n            if (denominator==0) {\n                return false;  \n            }  \n           \n        // 线段所在直线的交点坐标 (x , y)      \n            var x = ( (b.x - a.x) * (d.x - c.x) * (c.y - a.y)   \n                        + (b.y - a.y) * (d.x - c.x) * a.x   \n                        - (d.y - c.y) * (b.x - a.x) * c.x ) / denominator ;  \n            var y = -( (b.y - a.y) * (d.y - c.y) * (c.x - a.x)   \n                        + (b.x - a.x) * (d.y - c.y) * a.y   \n                        - (d.x - c.x) * (b.y - a.y) * c.y ) / denominator;  \n        /** 2 判断交点是否在两条线段上 **/  \n            if (  \n                // 交点在线段1上  \n                this.similarMinus(x, a.x) * this.similarMinus(x, b.x) <= 0 && this.similarMinus(y, a.y) * this.similarMinus(y,b.y) <= 0 \n                // (x - a.x) * (x - b.x) <= 0 && (y - a.y) * (y - b.y) <= 0  \n                // 且交点也在线段2上  \n                && this.similarMinus(x, c.x) * this.similarMinus(x, d.x) <= 0 && this.similarMinus(y,c.y) * this.similarMinus(y,d.y) <= 0\n                //  && (x - c.x) * (x - d.x) <= 0 && (y - c.y) * (y - d.y) <= 0  \n                ){  \n          \n                // 返回交点p  \n                return {  \n                        x :  x,  \n                        y :  y  \n                    }  \n            }  \n            //否则不相交  \n            return false  \n    },\n\n    rotateSegment(a,b,origin,degree) {\n        var rotatedA = this.rotateOnePoint(a,origin,degree)\n        var rotatedB = this.rotateOnePoint(b,origin,degree)\n\n        return {\n            p1: rotatedA,\n            p2: rotatedB\n        }\n    },\n\n    rotateOnePoint(b,origin,degree) {\n        var angle = degree * Math.PI / 180\n        var pb = cc.v2(b.x - origin.x, b.y - origin.y)\n        var rotatedPb = pb.rotate(angle)\n        var rotatedB = cc.v2(rotatedPb.x + origin.x, rotatedPb.y + origin.y)\n        return rotatedB\n    },\n\n    rayTest(line1,line2) {\n        var result = this.segmentsIntr(line1.p1, line1.p2, line2.p1, line2.p2)\n        if (result == false) {\n            return false\n        }\n\n        var dis = cc.v2(result.x - line1.p1.x, result.y - line1.p1.y).mag()\n        return dis\n    },\n    \n    getSuitablePoint(p1,currentDis,targetDis,direction) {\n        \n        if (targetDis >= currentDis) {\n            return p1\n        }\n        direction.normalizeSelf()\n        var currentDisX = currentDis * direction.x\n        var currentDisY = currentDis * direction.y\n\n        var ratio = (currentDis - targetDis) / currentDis\n        var resultX = p1.x + ratio * currentDisX\n        var resultY = p1.y + ratio * currentDisY\n\n        return cc.v2(resultX, resultY)\n    },\n\n    makeRay(p1,dis,direction) {\n        var ray = {\n            p1: p1,\n            p2: null\n        }\n        if (direction.mag() != 1) {\n            direction.normalizeSelf()\n        }\n        var dx = direction.x * dis\n        var dy = direction.y * dis\n        var x = p1.x + dx\n        var y = p1.y + dy\n        ray.p2 = cc.v2(x,y)\n        return ray\n    },\n\n    getLinesOfOneNode(givenNode) {\n\n        var offset = givenNode.height / 2\n        var p1 = cc.v2(givenNode.x - givenNode.width/2, givenNode.y - offset)\n        var p2 = cc.v2(givenNode.x + givenNode.width/2, givenNode.y - offset)\n        var p3 = cc.v2(p1.x, p1.y + givenNode.height)\n        var p4 = cc.v2(p2.x, p2.y + givenNode.height)\n        var p5 = cc.v2(givenNode.x - givenNode.width / 2, givenNode.y + givenNode.height / 2)\n        var p6 = cc.v2(p5.x, p5.y - givenNode.height)\n        var p7 = cc.v2(givenNode.x + givenNode.width / 2, givenNode.y + givenNode.height / 2)\n        var p8 = cc.v2(p7.x, p7.y - givenNode.height)\n\n        var line1 = {p1:p1,p2:p2}\n        var line2 = {p1:p3,p2:p4}\n        var line3 = {p1:p5,p2:p6}\n        var line4 = {p1:p7,p2:p8}\n        if (givenNode.angle != null && givenNode.angle != undefined) {\n            line1 = this.rotateSegment(p1,p2,cc.v2(givenNode.x, givenNode.y),-givenNode.angle)\n            line2 = this.rotateSegment(p3,p4,cc.v2(givenNode.x, givenNode.y),-givenNode.angle)\n            line3 = this.rotateSegment(p5,p6,cc.v2(givenNode.x, givenNode.y),-givenNode.angle)\n            line4 = this.rotateSegment(p7,p8,cc.v2(givenNode.x, givenNode.y),-givenNode.angle) \n        }\n        // var line1 = this.rotateSegment(p1,p2,cc.v2(givenNode.x, givenNode.y),-givenNode.angle)\n        // var line2 = this.rotateSegment(p3,p4,cc.v2(givenNode.x, givenNode.y),-givenNode.angle)\n        // var line3 = this.rotateSegment(p5,p6,cc.v2(givenNode.x, givenNode.y),-givenNode.angle)\n        // var line4 = this.rotateSegment(p7,p8,cc.v2(givenNode.x, givenNode.y),-givenNode.angle) \n        var obj = {\n            lowerLine: line1, //lower line\n            upperLine: line2, //upper line\n            leftLine: line3, //left line\n            rightLine: line4  //right line\n        }\n        if (line1 == null || line2 == null || line3 == null || line4 == null) {\n            cc.error(\"NOT INVALID LINES\")\n        }\n        return obj\n    },\n\n    isTwoNodeCross(node1, node2) {\n        \n        var info1 = this.getInfoOfOneNode(node1)\n        var info2 = this.getInfoOfOneNode(node2)\n        if (info1.minY > info2.maxY || info2.minY > info1.maxY || info1.minX > info2.maxX || info2.minX > info1.maxX) {\n            return false\n        }\n        return true\n    },\n    getInfoOfOneNode(givenNode) {\n        var leftUpPoint = cc.v2(givenNode.x - givenNode.width / 2, givenNode.y + givenNode.height / 2)\n        var rightUpPoint = cc.v2(givenNode.x + givenNode.width / 2, leftUpPoint.y)\n        var leftDownPoint = cc.v2(leftUpPoint.x, givenNode.y - givenNode.height / 2)\n        var rightDownPoint = cc.v2(rightUpPoint.x, leftDownPoint.y)\n\n        if (givenNode.angle != null && givenNode.angle != undefined) {\n            leftUpPoint = this.rotateOnePoint(leftUpPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n            rightUpPoint = this.rotateOnePoint(rightUpPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n            leftDownPoint = this.rotateOnePoint(leftDownPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n            rightDownPoint = this.rotateOnePoint(rightDownPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n        }\n\n        var minX = leftUpPoint.x\n        var maxX = rightDownPoint.x\n        var minY = leftDownPoint.y\n        var maxY = rightUpPoint.y\n        var arry = [leftUpPoint,leftDownPoint,rightUpPoint,rightDownPoint]\n        for (var index in arry) {\n            var point = arry[index]\n            if (minX > point.x) {\n                minX = point.x\n            }\n            if (maxX < point.x) {\n                maxX = point.x\n            }\n            if (minY > point.y) {\n                minY = point.y\n            }\n            if (maxY < point.y) {\n                maxY = point.y\n            }\n        }\n\n        return {\n            minX: minX,\n            minY: minY,\n            maxX: maxX,\n            maxY: maxY\n        }\n    },\n\n    getDisToSelfBorder(givenNode,direction) {\n        var ray = this.makeRay(cc.v2(givenNode.x,givenNode.y),1000,direction)\n        var borderLines = this.getLinesOfOneNode(givenNode)\n        for (var key in borderLines) {\n            var line = borderLines[key]\n            var dis = this.rayTest(ray,line)\n            if (dis != false) {\n                return dis\n            }\n        }\n    },\n\n    getPointsOfOneNode(givenNode){\n        var leftUpPoint = cc.v2(givenNode.x - givenNode.width / 2, givenNode.y + givenNode.height / 2)\n        var rightUpPoint = cc.v2(givenNode.x + givenNode.width / 2, leftUpPoint.y)\n        var leftDownPoint = cc.v2(leftUpPoint.x, givenNode.y - givenNode.height / 2)\n        var rightDownPoint = cc.v2(rightUpPoint.x, leftDownPoint.y)\n\n        if (givenNode.angle != null && givenNode.angle != undefined) {\n            leftUpPoint = this.rotateOnePoint(leftUpPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n            rightUpPoint = this.rotateOnePoint(rightUpPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n            leftDownPoint = this.rotateOnePoint(leftDownPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n            rightDownPoint = this.rotateOnePoint(rightDownPoint,cc.v2(givenNode.x,givenNode.y),-givenNode.angle)\n        }\n        return {\n            leftUpPoint: leftUpPoint,\n            leftDownPoint: leftDownPoint,\n            rightUpPoint: rightUpPoint,\n            rightDownPoint: rightDownPoint\n        }\n    },\n\n    isOneNodeWillCollidWithOneLineInDirection(givenNode,givenLine,givenDirection, dis= 3000) {\n        var nodePoints = this.getPointsOfOneNode(givenNode)\n        var rays = []\n        for (var key in nodePoints) {\n            var onePoint = nodePoints[key]\n            var ray = this.makeRay(onePoint,dis,givenDirection)\n            rays.push(ray)\n        }\n\n        var minX = null\n        var minY = null\n        var maxX = null\n        var maxY = null\n\n        for (var index in rays) {\n            \n            var oneRay = rays[index]\n            var minerX = oneRay.p1.x\n            var maxerX = oneRay.p2.x\n            if (minerX > oneRay.p2.x) {\n                minerX = oneRay.p2.x\n                maxerX = oneRay.p1.x\n            }\n\n            var minerY = oneRay.p1.y\n            var maxerY = oneRay.p2.y\n            if (minerY > oneRay.p2.y) {\n                minerY = oneRay.p2.y\n                maxerY = oneRay.p1.y\n            }\n\n            if (minX == null) {\n                minX = minerX\n                maxX = maxerX\n            }\n            else {\n                if (minX > minerX) {\n                    minX = minerX\n                }\n                if (maxX < maxerX) {\n                    maxX = maxerX\n                }\n            }\n\n            if (minY == null) {\n                minY = minerY\n                maxY = maxerY\n            }\n            else {\n                if (minY > minerY) {\n                    minY = minerY\n                }\n                if (maxY < maxerY) {\n                    maxY = maxerY\n                }\n            }  \n        }\n        \n        var lineMinx = givenLine.p1.x\n        var lineMaxX = givenLine.p2.x\n        var lineMinY = givenLine.p1.y\n        var lineMaxY = givenLine.p2.y\n\n        if (lineMinx > givenLine.p2.x) {\n            lineMinx = givenLine.p2.x\n            lineMaxX = givenLine.p1.x\n        }\n\n        if (lineMinY > givenLine.p2.y) {\n            lineMinY = givenLine.p2.y\n            lineMaxY = givenLine.p1.y\n        }\n\n        if (minY >= lineMaxY || maxY <= lineMinY || minX >= lineMaxX || maxX <= lineMinx) {\n            return false\n        }\n\n        var lineDirection = cc.v2(givenLine.p2.x - givenLine.p1.x, givenLine.p2.y - givenLine.p1.y)\n        lineDirection.normalizeSelf()\n\n        var lenthenLineP2 = this.makeRay(givenLine.p2,3000,lineDirection).p2\n        var lenthenLineP1 = this.makeRay(givenLine.p1,3000,cc.v2(-lineDirection.x, -lineDirection.y)).p2\n        var lenthenLine = {\n            p1: lenthenLineP1,\n            p2: lenthenLineP2\n        }\n\n        var testRay = this.makeRay(cc.v2(givenNode.x, givenNode.y),3000,givenDirection)\n        var distance = this.rayTest(testRay,lenthenLine)\n\n        if (distance != false) {\n            return distance\n        }\n        else {\n            return false\n        }\n\n    },\n\n    isTwoPositionSimilarEqual(p1, p2) {\n        var dx = p2.x - p1.x\n        var dy = p2.y - p1.y\n        var faultTolerent = 0.01\n        if (-faultTolerent > dx || faultTolerent < dx ) {\n            return false\n        }\n\n        if (-faultTolerent > dy || faultTolerent < dy) {\n            return false\n        }\n\n        return true\n    },\n\n    isTwoValueSimilarEqual(v1, v2) {\n        var d = v2 - v1\n        var faultTolerent = 0.01\n        if (-faultTolerent > d || faultTolerent < d) {\n            return false\n        }\n\n        return true\n    },\n\n    similarMinus(a,b) {\n        var temp = a - b\n        if (-0.001 < temp && temp < 0.001) {\n            temp = 0\n        }\n        return temp\n    },\n    \n});\n\nmodule.exports = Helper\n"]}