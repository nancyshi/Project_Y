{"version":3,"sources":["assets/scripts/_mainSceneMgr.js"],"names":["cc","Class","Component","properties","playerData","levelsStartPosition","v2","levelsHorDis","levelsVerDis","levelsHorNum","levelNodePrefab","Prefab","lockedLevelColor","color","unlockedLevelColor","currentLevelColor","physicalPower","get","_physicalPower","set","value","node","getChildByName","getComponent","Label","string","toString","physicalPowerForChallengeCost","_physicalPowerForChallengeCost","physicalPowerLabel","challengeButton","commentLabel","find","physicalPowerIcon","active","Button","interactable","heartForChallengeCost","_heartForChallengeCost","heartLabel","heartIcon","heart","selectedLevel","_selectedLevel","currentLevel","physicalPowerCostedFlag","temp","require","physicalPowerCost","initAdWatchedFlag","Math","round","heartForRetryCost","levelAresNodes","selectedLevelAreaNode","_selectedLevelAreaNode","selectedEffect","x","y","tween","to","start","Node","_heart","onLoad","playerName","name","delegate","signInButton","on","showSystem","redPointShowCondition","signInStatus","welfaryButton","repeatForever","angle","delay","addHeartButton","addPhysicalPowerButton","mailButton","mails","unReadNum","key","oneMail","status","setupSection","currentSection","givenSection","complete","sectionConfig","config","sectionTitle","sectionDescrip","levels","index","strForShow","parseInt","length","instantiate","label","width","floor","checkLevelStatus","level","addChild","url","backgroundPath","self","loader","loadRes","SpriteFrame","err","res","Sprite","spriteFrame","checkSectionStatus","givenLevel","i","belongedSection","sectionCheckResult","oneLevel","onClickChallengeButton","gameMgr","enterLevelScene","commitBody","flagValue","successCallBack","commitPlayerDataToServer","onAllRetryFailed","dataMonitored"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        playerData: null,\n        levelsStartPosition: cc.v2(0,0),\n        levelsHorDis: 60,\n        levelsVerDis: 60,\n        levelsHorNum: 5,\n        levelNodePrefab: cc.Prefab,\n        lockedLevelColor: cc.color,\n        unlockedLevelColor: cc.color,\n        currentLevelColor: cc.color,\n\n        physicalPower: {\n            get() {\n                return this._physicalPower\n            },\n            set(value) {\n                this._physicalPower = value\n                this.node.getChildByName(\"physicalPowerLabel\").getComponent(cc.Label).string = this.playerData.physicalPower.toString()\n            }\n        },\n\n        // maxPhysicalPower: {\n        //     get() {\n        //         return this._maxPhysicalPower\n        //     },\n        //     set(value) {\n        //         this._maxPhysicalPower = value\n        //     }\n        // },\n\n        physicalPowerForChallengeCost: {\n            get() {\n                return this._physicalPowerForChallengeCost\n            },\n            set(value) {\n                this._physicalPowerForChallengeCost = value\n                var physicalPowerLabel = this.challengeButton.getChildByName(\"physicalPowerLabel\")\n                var commentLabel = cc.find(\"Canvas/commentLabel\")\n                var physicalPowerIcon = this.challengeButton.getChildByName(\"physicalPower\")\n                if (value == null) {\n                    physicalPowerIcon.active = false\n                    physicalPowerLabel.active = false\n                }\n                else {\n                    physicalPowerIcon.active = true\n                    physicalPowerLabel.active = true\n\n                    physicalPowerLabel.getComponent(cc.Label).string = value.toString()\n                    if (value <= this.physicalPower) {\n                        this.challengeButton.getComponent(cc.Button).interactable = true\n                        if (value == 0) {\n                            commentLabel.getComponent(cc.Label).string = \"已挑战过的关卡不会消耗体力\"\n                        }\n                        else {\n                            commentLabel.getComponent(cc.Label).string = \"每天挑战每个新的关卡时会消耗体力\"\n                        }\n                    }\n                    else {\n                        this.challengeButton.getComponent(cc.Button).interactable = false\n                        commentLabel.getComponent(cc.Label).string = \"每天挑战每个新的关卡时会消耗体力\"\n                    }\n                }\n            }\n        },\n\n        heartForChallengeCost: {\n            get() {\n                return this._heartForChallengeCost\n            },\n            set(value) {\n                this._heartForChallengeCost = value\n                var heartLabel = this.challengeButton.getChildByName(\"heartLabel\")\n                var heartIcon = this.challengeButton.getChildByName(\"heart\")\n                if (value == null) {\n                    heartLabel.active = false\n                    heartIcon.active = false\n                }\n                else {\n                    heartLabel.active = true\n                    heartIcon.active = true\n\n                    heartLabel.getComponent(cc.Label).string = value.toString()\n                    if (value <= this.heart) {\n                        this.challengeButton.getComponent(cc.Button).interactable = true\n                    }\n                    else {\n                        this.challengeButton.getComponent(cc.Button).interactable = false\n                    }\n                }\n            }\n        }, \n\n        selectedLevel: {\n            get() {\n                return this._selectedLevel\n            },\n            set(value) {\n                this._selectedLevel = value\n                if (value != null) {\n                    if (value == this.playerData.currentLevel && this.playerData.physicalPowerCostedFlag == 0) {\n                        this.heartForChallengeCost = null\n                        var temp = require(\"levelConfig\")[value].physicalPowerCost\n                        if (this.playerData.initAdWatchedFlag == 1) {\n                            temp = Math.round(temp / 2)\n                        }\n                        this.physicalPowerForChallengeCost = temp\n                    }\n                    else if (value == this.playerData.currentLevel && this.playerData.physicalPowerCostedFlag == 1) {\n                        this.physicalPowerForChallengeCost = null\n                        this.heartForChallengeCost = require(\"levelConfig\")[value].heartForRetryCost\n                    }\n                    else{\n                        this.heartForChallengeCost = null\n                        this.physicalPowerForChallengeCost = 0\n                    }\n                    if (this.levelAresNodes[value] != null) {\n                        this.selectedLevelAreaNode = this.levelAresNodes[value]\n                    }\n                }\n            }\n        },\n\n        selectedLevelAreaNode: {\n            get() {\n                return this._selectedLevelAreaNode\n            },\n            set(value) {\n                this._selectedLevelAreaNode = value\n                if (value != null) {\n                    if (this.selectedEffect.active == false) {\n                        this.selectedEffect.x = this.selectedLevelAreaNode.x\n                        this.selectedEffect.y = this.selectedLevelAreaNode.y\n                        this.selectedEffect.active = true\n                    }\n                    else {\n                        cc.tween(this.selectedEffect)\n                            .to(0.2,{x: this.selectedLevelAreaNode.x, y: this.selectedLevelAreaNode.y})\n                            .start()\n                    }\n                }\n                else {\n                    this.selectedEffect.active = false\n                }\n            }\n        },\n\n        selectedEffect: cc.Node,\n        levelAresNodes: {\n            default: {}\n        },\n\n        challengeButton: null,\n        heartLabel: cc.Label,\n        heart: {\n            get() {\n                return this._heart\n            },\n            set(value) {\n                this._heart = value\n                this.heartLabel.string = value.toString()\n            }\n        },\n        // maxHeart: null\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.playerData = require(\"dataMgr\").playerData\n        this.lockedLevelColor = cc.color(191,191,191)\n        this.unlockedLevelColor = cc.color(102,102,102)\n        this.currentLevelColor = cc.color(188,36,36)\n        this.challengeButton = this.node.getChildByName(\"challengeButton\")\n        this.playerName = this.playerData.name\n        this.physicalPower = this.playerData.physicalPower\n        this.heart = this.playerData.heart\n       \n        require(\"networkMgr\").delegate = this\n\n        var signInButton = this.node.getChildByName(\"signInButton\")\n        signInButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"signInSys\")\n        })\n        signInButton.getComponent(\"redPointMgr\").redPointShowCondition = function(){\n            var signInStatus = require(\"dataMgr\").playerData.signInStatus\n            switch(signInStatus) {\n                case 1:\n                    return true\n                case 2:\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        var welfaryButton = this.node.getChildByName(\"welfaryButton\")\n        if (require(\"dataMgr\").playerData.initAdWatchedFlag == 1) {\n            welfaryButton.active = false\n        }\n        else {\n            welfaryButton.on(\"click\",function(){\n                require(\"systemsMgr\").showSystem(\"welfarySys\")\n            })\n            cc.tween(welfaryButton)\n                .repeatForever(\n                    cc.tween()\n                        .to(0.3,{angle: -45})\n                        .to(0.3,{angle: 0})\n                        .to(0.3,{angle: 45})\n                        .to(0.3,{angle: 0})\n                        .delay(1)\n                )\n                .start()\n        }\n        \n        var addHeartButton = this.node.getChildByName(\"addButton_heart\")\n        addHeartButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"addPropertyNumSys\",2)\n        })\n\n        var addPhysicalPowerButton = this.node.getChildByName(\"addButton_phy\")\n        addPhysicalPowerButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"addPropertyNumSys\",1)\n        })\n\n        var mailButton = this.node.getChildByName(\"mailButton\")\n        mailButton.on(\"click\",function(){\n            require(\"systemsMgr\").showSystem(\"mailSys\")\n        })\n        mailButton.getComponent(\"redPointMgr\").redPointShowCondition = function() {\n            var mails = require(\"dataMgr\").playerData.mails\n            var unReadNum = 0\n            for (var key in mails) {\n                var oneMail = mails[key]\n                if (oneMail.status == 0) {\n                    unReadNum += 1\n                }\n            }\n            if (unReadNum > 0) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n\n        this.setupSection(this.playerData.currentSection)\n    },\n\n    start () {\n        \n    },\n\n    setupSection(givenSection, complete = function(){}) {\n        this.selectedLevel = null\n        \n        var sectionConfig = require(\"sectionConfig\")\n        var config = sectionConfig[givenSection]\n\n        this.node.getChildByName(\"sectionTitleLabel\").getComponent(cc.Label).string = config.sectionTitle\n        this.node.getChildByName(\"sectionDescripLabel\").getComponent(cc.Label).string = config.sectionDescrip\n        \n\n        var levels = config.levels\n        this.levelAresNodes = {}\n        for (var index in levels) {\n            var strForShow = parseInt(index) + 1\n            strForShow = strForShow.toString()\n            if (strForShow.length == 1) {\n                strForShow = \"0\" + strForShow\n            }\n\n            var node = cc.instantiate(this.levelNodePrefab)\n            var label = node.getComponent(cc.Label)\n            label.string = strForShow\n\n            node.x = (index % this.levelsHorNum) * (this.levelsHorDis + node.width) + this.levelsStartPosition.x\n            node.y = -Math.floor(index / this.levelsHorNum) * (this.levelsVerDis + node.width) + this.levelsStartPosition.y\n\n            var status = this.checkLevelStatus(levels[index])\n            switch(status) {\n                case 0:\n                    node.color = this.lockedLevelColor\n                    break\n                case 1:\n                    node.color = this.unlockedLevelColor\n                    break\n                case 2:\n                    node.color = this.currentLevelColor\n                    break\n            }\n            node.getComponent(\"levelAreaNodeMgr\").delegate = this\n            node.getComponent(\"levelAreaNodeMgr\").level = levels[index]\n            this.levelAresNodes[levels[index]] = node\n            cc.find(\"Canvas/levelsArea\").addChild(node)\n        }\n        var url = config.backgroundPath\n        var self = this\n        cc.loader.loadRes(url,cc.SpriteFrame,function(err,res){\n            self.node.getChildByName(\"sectionBg\").getComponent(cc.Sprite).spriteFrame = res\n            complete()\n        })\n\n        if (givenSection == this.playerData.currentSection) {\n            this.selectedLevel = this.playerData.currentLevel\n        }\n    },\n\n    checkSectionStatus(givenSection) {\n        var currentSection = this.playerData.currentSection\n        if (givenSection > currentSection) {\n            return 0 //locked\n        }\n        else if (givenSection < currentSection) {\n            return 1 //unlocked\n        }\n        else if (givenSection == currentSection) {\n            return 2 //current\n        }\n    },\n\n    checkLevelStatus(givenLevel) {\n        var sectionConfig = require(\"sectionConfig\")\n\n        var temp = function() {\n            for (var key in sectionConfig) {\n                var levels = sectionConfig[key].levels\n                for (var i in levels) {\n                    if (givenLevel == levels[i]) {\n                        return key\n                    }\n                }\n            }\n\n            return false\n        }\n\n        var belongedSection = temp()\n        if (belongedSection != false) {\n            belongedSection = parseInt(belongedSection)\n        }\n        else {\n            return false // no such level\n        }\n\n        var sectionCheckResult = this.checkSectionStatus(belongedSection)\n        switch(sectionCheckResult) {\n            case 0:\n                return 0 //locked \n            case 1: \n                return 1 //unlocked\n            case 2:\n                var currentLevel = this.playerData.currentLevel\n                if (currentLevel == givenLevel) {\n                    return 2 //current\n                }\n                \n                for (var index in require(\"sectionConfig\")[belongedSection].levels) {\n                    var oneLevel = require(\"sectionConfig\")[belongedSection].levels[index]\n                    if (oneLevel == givenLevel) {\n                        return 1\n                    }\n\n                    if (oneLevel == currentLevel) {\n                        return 0\n                    }\n                }\n        }\n    },\n\n\n    onClickChallengeButton() {\n        var gameMgr = require(\"gameMgr\")\n        this.challengeButton.getComponent(cc.Button).interactable = false\n        if (this.physicalPowerForChallengeCost == 0) {\n            gameMgr.enterLevelScene(this.selectedLevel)\n            return\n        }\n        \n        var temp = null\n        var commitBody = null\n        if (this.physicalPowerForChallengeCost != null) {\n            temp = this.playerData.physicalPower - this.physicalPowerForChallengeCost\n            if (temp < 0) {\n                return\n            }\n            var flagValue = this.playerData.physicalPowerCostedFlag\n            if(this.selectedLevel == this.playerData.currentLevel && this.playerData.physicalPowerCostedFlag == 0) {\n                flagValue = 1\n            }\n            commitBody = {\n                physicalPower: temp,\n                physicalPowerCostedFlag: flagValue\n            }\n        }\n        \n        if (this.heartForChallengeCost != null) {\n            temp = this.playerData.heart - this.heartForChallengeCost\n            if (temp < 0) {\n                return\n            }\n            commitBody = {\n                heart: temp\n            }\n        }\n        \n        var self = this\n        var successCallBack = function() {\n            if (self.physicalPowerForChallengeCost != null) {\n                self.playerData.physicalPower = temp\n                self.playerData.physicalPowerCostedFlag = flagValue\n            }\n\n            if (self.heartForChallengeCost != null) {\n                self.playerData.heart = temp\n            }\n\n            gameMgr.enterLevelScene(self.selectedLevel)\n        }\n\n\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n    },\n\n\n    onAllRetryFailed() {\n        this.challengeButton.getComponent(cc.Button).interactable = true\n    },\n\n    dataMonitored(key,value) {\n        if (key == \"physicalPower\") {\n            this.physicalPower = value\n        }\n        else if (key == \"heart\") {\n            this.heart = value\n        }\n    }\n\n\n});\n"]}