{"version":3,"sources":["assets/scripts/singleInstanceSystems/gameMgr.js"],"names":["GameMgr","cc","Class","Component","properties","start","enterLevelScene","givenLevel","self","director","preloadScene","err","res","levelMgr","scene","getChildByName","getComponent","level","animatedToScene","sceneName","coverNode","require","reses","instantiate","width","winSize","height","opacity","on","getScene","addChild","tween","to","delay","call","loadScene","_generateLevelSceneConfig","levelConfig","result","completNum","check","Object","keys","length","networkMgr","messageObj","makeMessageObj","message","data","sendMessageByMsgObj","index","levelId","getSceneNameByLevelId","givenLevelId","levelForName","toString","levelName","setupResult","log","canvas","children","oneResult","getNodeBasicResult","node","x","y","angle","fillNodes","fillNodesResult","oneFillNode","oneFillNodeResult","push","walls","wallsResult","oneWallNode","oneWallResult","targets","targetsResult","oneTargetNode","oneTargetResult","pathWaysNode","pathWaysNodeResult","onePathWayNode","onePathWayResult","name","i","oneChildNode","oneChildResult","bullets","bulletsResult","oneBulletNode","oneBulletResult","basicResult","basic","bulletMgr","mgrResult","bulletType","pathWaysNodeName","mgr","gameMgr","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["\n// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar GameMgr = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n    enterLevelScene(givenLevel) {\n        var self = this\n        cc.director.preloadScene(\"levelScene\",null,function(err,res){\n            var levelMgr = res.scene.getChildByName(\"Canvas\").getComponent(\"levelMgr\")\n            levelMgr.level = givenLevel\n            self.animatedToScene(\"levelScene\")\n        })\n    },\n\n    animatedToScene(sceneName) {\n        var coverNode = require(\"resMgr\").reses[\"coverNodePrefab\"]\n        coverNode = cc.instantiate(coverNode)\n        coverNode.width = cc.winSize.width\n        coverNode.height = cc.winSize.height\n        coverNode.opacity = 0\n        coverNode.on(\"touchstart\",function(){})\n        cc.director.getScene().getChildByName(\"Canvas\").addChild(coverNode)\n\n        cc.tween(coverNode)\n            .to(0.3, {opacity:255})\n            .delay(0.3)\n            .call(function(){\n                cc.director.loadScene(sceneName)\n            })\n            .start()\n    },\n\n    \n    _generateLevelSceneConfig() {\n        var levelConfig = require(\"levelConfig\")\n        var result = {}\n        var completNum = 0\n        var check = function(completNum) {\n            if (completNum == Object.keys(levelConfig).length) {\n                var networkMgr = require(\"networkMgr\")\n                var messageObj = networkMgr.makeMessageObj(\"helperModule\",\"generateLevelConfigFileMessageType\")\n                messageObj.message.data = result\n                networkMgr.sendMessageByMsgObj(messageObj)\n            }\n        }\n        for (var index in Object.keys(levelConfig)) {\n            var levelId = Object.keys(levelConfig)[index]\n\n            var getSceneNameByLevelId = function(givenLevelId) {\n                var levelForName = givenLevelId\n                switch(levelForName.toString().length){\n                    case 1:\n                        levelForName = \"00\" + levelForName.toString()\n                        break\n                    case 2:\n                        levelForName = \"0\" + levelForName.toString()\n                        break\n                }\n\n                var levelName = \"level\" + levelForName\n                return levelName\n            }\n\n            var sceneName = getSceneNameByLevelId(levelId)\n            var setupResult = function(sceneName, levelId) {\n                cc.director.preloadScene(sceneName,null,function(err,res){\n                    cc.log(\"preload scene: \" + sceneName)\n                    var canvas = res.scene.children[0]\n                    var oneResult = {}\n                    var getNodeBasicResult = function(node) {\n                        var oneResult = {}\n                        oneResult.x = node.x\n                        oneResult.y = node.y\n                        oneResult.width = node.width\n                        oneResult.height = node.height\n                        oneResult.angle = node.angle\n                        return oneResult\n                    }\n                    //fillNodes\n                    var fillNodes = canvas.getChildByName(\"fillNodes\")\n                    var fillNodesResult = []\n                    cc.log(\"setup fillNodes\")\n                    for(var index in fillNodes.children) {\n                        var oneFillNode = fillNodes.children[index]\n                        var oneFillNodeResult = getNodeBasicResult(oneFillNode)   \n                        fillNodesResult.push(oneFillNodeResult)\n                    }\n                    oneResult.fillNodes = fillNodesResult\n\n                    //walls\n                    var walls = canvas.getChildByName(\"walls\")\n                    var wallsResult = []\n                    cc.log(\"setup walls\")\n                    for (var index in walls.children) {\n                        var oneWallNode = walls.children[index]\n                        var oneWallResult = getNodeBasicResult(oneWallNode)\n                        wallsResult.push(oneWallResult)\n                    }\n                    oneResult.walls = wallsResult\n\n                    //targets\n\n                    var targets = canvas.getChildByName(\"targets\")\n                    var targetsResult = []\n                    cc.log(\"setup targets\")\n                    for(var index in targets.children) {\n                        var oneTargetNode = targets.children[index]\n                        var oneTargetResult = getNodeBasicResult(oneTargetNode)\n                        targetsResult.push(oneTargetResult)\n                    }\n                    oneResult.targets = targetsResult\n\n                    //pathWaysNode\n                    var pathWaysNode = canvas.getChildByName(\"pathWaysNode\")\n                    var pathWaysNodeResult = []\n                    cc.log(\"setup pathWaysNode\")\n                    for (var index in pathWaysNode.children) {\n                        var onePathWayNode = pathWaysNode.children[index]\n                        var onePathWayResult = {}\n                        onePathWayResult.name = onePathWayNode.name\n                        onePathWayResult.children = []\n                        for (var i in onePathWayNode.children) {\n                            var oneChildNode = onePathWayNode.children[i]\n                            var oneChildResult = getNodeBasicResult(oneChildNode)\n                            onePathWayResult.children.push(oneChildResult)\n                        }\n                        pathWaysNodeResult.push(onePathWayResult)\n                    }\n                    oneResult.pathWaysNode = pathWaysNodeResult\n\n                    //bullets\n                    var bullets = canvas.getChildByName(\"bullets\")\n                    var bulletsResult = []\n                    cc.log(\"setup bullets\")\n                    for (var index in bullets.children) {\n                        var oneBulletNode = bullets.children[index]\n                        var oneBulletResult = {}\n                        var basicResult  = getNodeBasicResult(oneBulletNode)\n                        oneBulletResult.basic = basicResult\n\n                        var bulletMgr = oneBulletNode.getComponent(\"bulletMgr\")\n                        var mgrResult = {}\n                        mgrResult.bulletType = bulletMgr.bulletType\n                        mgrResult.pathWaysNodeName = \"\"\n                        if (bulletMgr.pathWaysNode != null) {\n                            mgrResult.pathWaysNodeName = bulletMgr.pathWaysNode.name\n                        }\n                        oneBulletResult.mgr = mgrResult\n                        bulletsResult.push(oneBulletResult)\n                    }\n                    oneResult.bullets = bulletsResult\n\n                    result[levelId.toString()] = oneResult\n                    completNum += 1\n                    check(completNum)\n                })\n            }\n            setupResult(sceneName,levelId)\n        }\n    }\n    // update (dt) {},\n});\n\nvar gameMgr = new GameMgr()\nmodule.exports = gameMgr"]}