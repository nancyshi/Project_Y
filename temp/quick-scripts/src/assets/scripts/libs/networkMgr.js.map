{"version":3,"sources":["assets/scripts/libs/networkMgr.js"],"names":["Networkmgr","cc","Class","Component","properties","delegate","retryDelta","maxRetryTime","retryWaitingNode","retryAction","start","sendMessage","msg","port","ip","suffix","successCallBack","xhr","XMLHttpRequest","onreadystatechange","readyState","status","url","toString","open","send","makeMessageObj","moduleName","messageTypeName","gloableConfig","require","netWorkMessageConfigs","moduleObj","basicIp","basicPort","message","obj","error","sendMessageByMsgObj","msgObj","self","retryingFlag","retryResult","msgForSend","JSON","stringify","onerror","log","currentRetryTime","undefined","retry","destroy","removeFromParent","unscheduleAllCallbacks","currentScene","director","getScene","name","mgr","getChildByName","getComponent","onAllRetryFailed","loader","loadRes","err","res","node","instantiate","bg","width","winSize","height","on","ensureButtonNode","loadScene","addChild","schedule","ontimeout","onabort","startHeartBeat","messageObj","playerId","playerData","id","response","responseText","parse","type","messages","index","oneMessage","mailId","timeStamp","tag","mail","mails","sharedMgr","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar Networkmgr = cc.Class({\n    extends: cc.Component,\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        delegate: null,\n\n        retryDelta: 1.5,\n        maxRetryTime: 3,\n\n        retryWaitingNode: null,\n        retryAction: null\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n\n    sendMessage(msg,port,ip,suffix,successCallBack) {\n        var xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                successCallBack(xhr)\n            }\n        }\n        var url = \"http://\" + ip + \":\" + port.toString() +\"/\" + suffix.toString()\n        xhr.open(\"POST\",url)\n        xhr.send(msg)\n    },\n\n    makeMessageObj(moduleName, messageTypeName) {\n        var gloableConfig = require(\"gloableConfig\")\n        \n        var netWorkMessageConfigs = gloableConfig.netWorkMessageConfigs\n        var moduleObj = netWorkMessageConfigs[moduleName]\n        \n        if (moduleObj != null) {\n            var ip = gloableConfig.basicIp\n            var port = gloableConfig.basicPort\n            if (moduleObj.ip != null) {\n                ip = moduleObj.ip\n            }\n            if (moduleObj.port != null) {\n                port = moduleObj.port\n            }\n\n            var suffix = moduleObj.suffix\n            \n            var message = moduleObj[messageTypeName]\n            var successCallBack = function(xhr){}\n            var obj = {\n                ip: ip,\n                port: port,\n                suffix: suffix,\n                message: message,\n                successCallBack: successCallBack\n            }\n            return obj\n        }\n        else {\n            cc.error(\"no such module name of \" + moduleName)\n            return null\n        }\n    },\n\n    sendMessageByMsgObj(msgObj) {\n        var url = \"https://\" + msgObj.ip + \":\" + msgObj.port.toString() + \"/\" + msgObj.suffix\n        var xhr = null\n        xhr = new XMLHttpRequest()\n        var self = this\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\n                msgObj.successCallBack(xhr)\n                if (self.retryingFlag == true) {\n                    self.retryResult = true\n                }\n            }\n        }\n        var msgForSend = JSON.stringify(msgObj.message)\n        xhr.onerror = function(){\n            cc.log(\"err\")\n            if (self.retryAction == null) {\n                self.retryAction = function(){\n                    xhr.send(msgForSend)\n                    xhr.currentRetryTime += 1\n                }\n            }\n\n            if (xhr.currentRetryTime == null || xhr.currentRetryTime == undefined) {\n                xhr.currentRetryTime = 0\n            }\n            var retry = function(xhr){\n                cc.log(\"retry\",xhr.currentRetryTime)\n                if (xhr.currentRetryTime > self.maxRetryTime) {\n                    self.retryWaitingNode.destroy()\n                    self.retryWaitingNode.removeFromParent()\n                    self.retryWaitingNode = null\n                    self.retryAction = null\n                    self.unscheduleAllCallbacks()\n\n                    //do something else\n                    var currentScene = cc.director.getScene()\n                    if (currentScene.name == \"loginScene\") {\n                        var mgr = currentScene.getChildByName(\"Canvas\").getComponent(\"loginSceneMgr\")\n                        mgr.onAllRetryFailed()\n                    }\n                    else {\n                        cc.loader.loadRes(\"prefabs/backToLoginScene\",function(err,res){\n                            var node = cc.instantiate(res)\n                            var bg = node.getChildByName(\"bg\")\n                            bg.width = cc.winSize.width\n                            bg.height = cc.winSize.height\n                            bg.on(\"touchstart\",function(){})\n\n                            var ensureButtonNode = node.getChildByName(\"others\").getChildByName(\"ensureButton\")\n                            ensureButtonNode.on(\"click\",function(){\n                                cc.director.loadScene(\"loginScene\")\n                            })\n\n                            cc.director.getScene().getChildByName(\"Canvas\").addChild(node)\n                        })  \n                    }\n                }\n                else if (xhr.currentRetryTime == 0) {\n                    cc.director.getScene().getChildByName(\"Canvas\").addChild(self.retryWaitingNode)\n                    self.schedule(self.retryAction,self.retryDelta)\n                }\n            \n            }\n            if (self.retryWaitingNode == null) {\n                cc.loader.loadRes(\"prefabs/retryWaitingNode\",function(err,res){\n                    var node = cc.instantiate(res)\n                    var bg = node.getChildByName(\"bg\")\n                    bg.width = cc.winSize.width\n                    bg.height = cc.winSize.height\n                    bg.on(\"touchstart\",function(){})\n\n                    self.retryWaitingNode = node\n                    retry(xhr)\n                })\n            }\n            else {\n                retry(xhr)\n            }\n            \n        }\n        xhr.ontimeout = function(){\n            cc.log(\"time out!!!\")\n        }\n        xhr.onabort = function(){\n            cc.log(\"abord\")\n        }\n        if (xhr.readyState == 0) {\n            xhr.open(\"POST\",url)\n        }\n        xhr.send(msgForSend)\n    },\n\n    onAllRetryFailed() {\n\n    },\n\n    startHeartBeat() {\n        var messageObj = this.makeMessageObj(\"longConnectModule\",\"heartBeatMessageType\")\n        messageObj.message.playerId = require(\"dataMgr\").playerData.id\n        messageObj.successCallBack = function(xhr) {\n            var response = xhr.responseText\n            response = JSON.parse(response)\n            if (response.type == \"message\") {\n                var messages = response.messages\n                for (var index in messages) {\n                    var oneMessage = messages[index]\n                    if (oneMessage.type == \"mailSysSendMail\") {\n                        var mailId = oneMessage.mailId\n                        var timeStamp = oneMessage.timeStamp\n                        var tag = oneMessage.tag\n                        var mail = {\n                            \"status\": 0,\n                            \"tag\": tag,\n                            \"timeStamp\": timeStamp,\n                            \"selectedOptionIndex\": -1\n                        }\n                        require(\"dataMgr\").playerData.mails[mailId] = mail\n                    }\n                }\n            }\n        }\n        //this.sendMessageByMsgObj(messageObj,true)\n        this.schedule(function(){\n            this.sendMessageByMsgObj(messageObj)\n        }, 60)\n    }\n});\n\n\nvar sharedMgr = new Networkmgr()\nmodule.exports = sharedMgr\n"]}