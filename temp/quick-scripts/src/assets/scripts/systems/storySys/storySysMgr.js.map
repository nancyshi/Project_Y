{"version":3,"sources":["assets/scripts/systems/storySys/storySysMgr.js"],"names":["cc","Class","Component","properties","contentNode","Node","storyTextNodePrefab","Prefab","disBetweenStoryTextNodes","continueLabelNode","completeButtonNode","startDelayTime","storyId","storyTextNodes","status","get","_status","set","value","active","log","header","footer","sectionDis","totalHeight","totalTextNodeNum","currentNum","textIds","onLoad","self","bg","node","getChildByName","width","winSize","height","monitoredNode","on","str","require","getTextByIdAndLanguageType","_showOneStoryText","completeStory","getComponent","Label","string","tween","repeatForever","to","opacity","start","scrollContainer","y","tempHeight","showStory","storyConfig","key","toString","config","length","delay","call","networkMgr","messageObj","makeMessageObj","message","playerId","playerData","id","successCallBack","xhr","response","responseText","JSON","parse","type","storySysId","closeSystem","Button","interactable","sendMessageByMsgObj","instantiate","_forceUpdateRenderData","ScrollView","vertical","addChild","onWillOpend","givenStoryId"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        contentNode: cc.Node,\n        storyTextNodePrefab: cc.Prefab,\n        disBetweenStoryTextNodes: 50,\n        continueLabelNode: cc.Node,\n        completeButtonNode: cc.Node,\n        startDelayTime: 1,\n        storyId: null,\n\n        storyTextNodes: [],\n        status: {\n            get() {\n                return this._status\n            },\n            set(value) {\n                this._status = value\n                // 1 = start showing a node\n                // 2 = showing complete , wating for tap to next\n                // 3 = all nodes showing complete , wating for click button to complete\n                switch(value) {\n                    case 1:\n                        this.continueLabelNode.active = false\n                        this.completeButtonNode.active = false\n                        break\n                    case 2:\n                        this.continueLabelNode.active = true\n                        this.completeButtonNode.active = false\n                        break\n                    case 3:\n                        this.continueLabelNode.active = false\n                        this.completeButtonNode.active = true\n                        break\n                    default:\n                        cc.log(\"STORYSYSMGR: WRONG STATUS VALUE PROVIDED\")\n                }\n            }\n        },\n        header: 100,\n        footer: 100,\n        sectionDis: 50,\n\n        totalHeight: 0,\n        totalTextNodeNum: null,\n        currentNum: null,\n        textIds: null\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var self = this\n        var bg = this.node.getChildByName(\"bg\")\n        bg.width = cc.winSize.width\n        bg.height = cc.winSize.height\n        this.node.width = bg.width\n        this.node.height = bg.height\n        var monitoredNode = this.contentNode.getChildByName(\"tapMonitoredNode\")\n        monitoredNode.width = bg.width\n        monitoredNode.height = bg.height\n        //cc.log(bg.width,bg.height)\n        monitoredNode.on(\"touchstart\",function(){\n            if (self.status == 2) {\n                self.currentNum += 1\n                var str = require(\"textConfig\").getTextByIdAndLanguageType(self.textIds[self.currentNum - 1])\n                self._showOneStoryText(str)\n            }\n        },this)\n        this.completeButtonNode.on(\"click\",function(){\n            if (self.status == 3) {\n                self.completeStory()\n            }\n        })\n        this.completeButtonNode.getChildByName(\"New Label\").getComponent(cc.Label).string = require(\"textConfig\").getTextByIdAndLanguageType(122)\n\n        cc.tween(this.continueLabelNode)\n            .repeatForever(cc.tween()\n                    .to(0.3, {opacity: 0})\n                    .to(0.3, {opacity: 255})    \n            )\n            .start()\n\n        var scrollContainer = this.node.getChildByName(\"scrollContainer\")\n        scrollContainer.y = bg.height / 2 - this.footer\n        this.continueLabelNode.y = -bg.height / 2 + this.footer + this.completeButtonNode.height / 2\n        this.completeButtonNode.y = -bg.height / 2 + this.footer + this.completeButtonNode.height / 2\n\n        var tempHeight = bg.height - this.header - this.footer - this.completeButtonNode.height - this.sectionDis\n        scrollContainer.height = tempHeight\n        scrollContainer.getChildByName(\"view\").height = tempHeight\n        this.contentNode.height = tempHeight\n    },\n\n    start () {\n\n        this.showStory()\n    },\n\n    showStory() {\n        if (this.storyId == null) {\n            cc.log(\"NO STORY ID PROVIDED\")\n            return\n        }\n        var storyConfig = require(\"storyConfig\")\n        var key = \"story_\" + this.storyId.toString()\n        var config = storyConfig[key]\n        var textIds = config.textIds\n        this.textIds = textIds\n        this.totalTextNodeNum = textIds.length\n        \n        this.currentNum = 1\n        var str = require(\"textConfig\").getTextByIdAndLanguageType(textIds[0])\n        var self = this\n        cc.tween(this.node)\n            .delay(self.startDelayTime)\n            .call(function(){\n                self._showOneStoryText(str)\n            })\n            .start()\n    },\n\n    completeStory() {\n        var networkMgr = require(\"networkMgr\")\n        var messageObj = networkMgr.makeMessageObj(\"storyModule\",\"completeCurrentMessageType\")\n        messageObj.message.playerId = require(\"dataMgr\").playerData.id\n        messageObj.successCallBack = function(xhr) {\n            var response = xhr.responseText\n            response = JSON.parse(response)\n            if (response.type == \"success\") {\n                var storyId = response.storyId\n                require(\"dataMgr\").playerData.storySysId = storyId\n                require(\"systemsMgr\").closeSystem(\"storySys\",3)\n            }\n        }\n        \n        this.completeButtonNode.getComponent(cc.Button).interactable = false\n        networkMgr.sendMessageByMsgObj(messageObj)\n    },\n\n    _showOneStoryText(str) {\n        this.status = 1\n        var node = cc.instantiate(this.storyTextNodePrefab)\n        node.getComponent(cc.Label).string = str\n        node.getComponent(cc.Label)._forceUpdateRenderData()\n        node.y = -this.totalHeight\n\n        this.totalHeight += node.height + this.disBetweenStoryTextNodes\n        if (this.contentNode.height < this.totalHeight) {\n            this.contentNode.height = this.totalHeight\n            this.node.getChildByName(\"scrollContainer\").getComponent(cc.ScrollView).vertical = true\n        }\n        node.opacity = 0\n        this.contentNode.addChild(node)\n        var self = this\n        cc.tween(node)\n            .to(0.5,{opacity: 255})\n            .call(function(){\n                if (self.currentNum == self.totalTextNodeNum) {\n                    self.status = 3\n                }\n                else {\n                    self.status = 2\n                }\n            })\n            .start()\n    },\n\n    onWillOpend(givenStoryId) {\n        this.storyId = givenStoryId\n    }\n    // update (dt) {},\n});\n"]}