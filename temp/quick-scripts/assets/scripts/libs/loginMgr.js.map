{"version":3,"sources":["loginMgr.js"],"names":["LoginMgr","cc","Class","properties","playerId","get","_playerId","set","value","onPlayerIdSet","LoginType","ACCOUNT","WE_CHAT_GAME","DEVICE_ID","login","loginType","_setPlayerIdFromServer","updatePlayerDataFromServer","dataMgr","require","_genarateUUID","time","sys","now","uuid","replace","c","r","Math","random","v","toString","networkMgr","msgObj","makeMessageObj","message","codeType","asyncFlag","self","wx","success","res","code","successCallBack","xhr","response","responseText","JSON","parse","type","sendMessageByMsgObj","deviceId","localStorage","getItem","setItem","log","sharedLoginMgr","module","exports"],"mappings":"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","file":"loginMgr.js","sourceRoot":"../../../../../assets/scripts/libs","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\n\nvar LoginMgr = cc.Class({\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        playerId: {\n            get() {\n                return this._playerId\n            },\n            set(value) {\n                this._playerId = value\n                if (value) {\n                    this.onPlayerIdSet()\n                }\n            }\n        },\n        LoginType: {\n            get() {\n                return {\n                    ACCOUNT: 1,\n                    WE_CHAT_GAME: 2,\n                    DEVICE_ID: 3\n                }\n            }\n        }\n        \n    },\n\n    login(loginType) {\n        this._setPlayerIdFromServer(loginType)\n    },\n\n    onPlayerIdSet() {\n        this.updatePlayerDataFromServer(this.playerId)\n    },\n\n    updatePlayerDataFromServer(playerId) {\n        var dataMgr = require(\"dataMgr\")\n        dataMgr.updatePlayerDataFromServer(playerId)\n    },\n\n    _genarateUUID() {\n        var time = cc.sys.now()\n        var uuid =  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n        uuid = uuid + time.toString()\n        return uuid\n    },\n\n    _setPlayerIdFromServer(loginType) {\n\n        var networkMgr = require(\"networkMgr\")\n        var msgObj = networkMgr.makeMessageObj(\"loginModule\",\"loginMessageType\")\n        msgObj.message.codeType = loginType\n        var asyncFlag = false\n        switch(loginType) {\n            case this.LoginType.ACCOUNT:\n                break\n            case this.LoginType.WE_CHAT_GAME:\n                asyncFlag = true\n                var self = this\n                wx.login({\n                    success: function(res) {\n                        var code = res.code\n                        if (code != null) {\n                            msgObj.message.code = code\n                            msgObj.successCallBack = function(xhr) {\n                                var response = xhr.responseText\n                                response = JSON.parse(response)\n                                if (response.type == \"login_success\") {\n                                    var playerId = response.playerId\n                                    self.playerId = playerId\n                                }\n                                else if (response.type == \"login_fail\") {\n                                            \n                                }\n                            }\n                            networkMgr.sendMessageByMsgObj(msgObj)\n                        }\n                    }\n                })\n                break\n            case this.LoginType.DEVICE_ID:\n                var deviceId = cc.sys.localStorage.getItem(\"deviceId\")\n                if (deviceId == null) {\n                    var uuid = this._genarateUUID()\n                    cc.sys.localStorage.setItem(\"deviceId\",uuid)\n                    deviceId = uuid\n                }\n                msgObj.message.code = deviceId\n                break\n            default:\n                cc.log(\"Login type erro: now it's \" + loginType)\n        }\n        if (asyncFlag == true) {\n            return\n        }\n        var self = this\n        msgObj.successCallBack = function(xhr) {\n            var response = xhr.responseText\n            response = JSON.parse(response)\n            if (response.type == \"login_success\") {\n                var playerId = response.playerId\n                self.playerId = playerId\n            }\n            else if (response.type == \"login_fail\") {\n                        \n            }\n        }\n        networkMgr.sendMessageByMsgObj(msgObj)\n    }\n});\n\nvar sharedLoginMgr = new LoginMgr()\nmodule.exports = sharedLoginMgr"]}