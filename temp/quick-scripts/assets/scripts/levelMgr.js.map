{"version":3,"sources":["levelMgr.js"],"names":["cc","Class","extends","Component","properties","bullets","minDis","maxOffsetDegree","directionTryto","flag","helper","walls","targetsNum","get","_targetsNum","set","value","onSuccess","onLoad","Helper","require","start","node","on","onTouchStart","onTouchMove","onTouchEnd","bulletsNode","find","children","wallsNode","length","graphic","getComponent","Graphics","startPoint","pointNodes","index","point","moveTo","x","y","lineTo","close","stroke","fill","event","delta","getDelta","direction","getPossiableDirection","equals","startLocation","getStartLocation","disFromStart","v2","getLocationX","getLocationY","mag","moveBullets","onDestroy","off","isPossiableWithGivenDirection","givenDirection","angle","signAngle","degree","Math","PI","abs","status","shadows","bullet","bulletMgr","nearestWallInfo","getNearestWallInfo","shadowNode","suitablePosition","width","height","dis","originNode","push","resolveShadows","targetPosition","movingDirection","log","oneShadow","i","anotherShadow","testResult","_selectStaticShadowAndShaodwForResolved","staticShadow","tempShadow","shadowForResolved","staticBorderLines","getLinesOfOneNode","staticLine","ray","makeRay","k","line","rayTest","newPoint2","p2","p1","newPoint1","ray1","position","currentDistance","targetDis","getDisToSelfBorder","disFromBorder","getSuitablePoint","updatedDis","shadow1","shadow2","temp","s1","s2","d","target","givenType","points","getPointsOfOneNode","lines","key","result"],"mappings":"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","file":"levelMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        bullets: [],\n        minDis: 100,\n        maxOffsetDegree: 30,\n        directionTryto: null,\n        flag: false,\n        helper: null,\n\n        walls: [],\n        targetsNum: {\n            get() {\n                return this._targetsNum\n            },\n            set(value) {\n                this._targetsNum = value\n                if (value == 0) {\n                    this.onSuccess()\n                }\n            }\n        }\n        \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var Helper = require(\"helper\")\n        this.helper = new Helper()\n    },\n\n    start () {\n        this.node.on(\"touchstart\",this.onTouchStart,this)\n        this.node.on(\"touchmove\",this.onTouchMove,this)\n        this.node.on(\"touchend\",this.onTouchEnd,this)\n\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        this.bullets = bulletsNode.children\n\n        var wallsNode = cc.find(\"Canvas/walls\")\n        this.walls = wallsNode.children\n        this.targetsNum = cc.find(\"Canvas/targets\").children.length\n\n        var graphic = cc.find(\"Canvas/fillNodes\").getComponent(cc.Graphics)\n        var startPoint = null\n        var pointNodes = cc.find(\"Canvas/fillNodes\").children\n        if (pointNodes.length == 0) {\n            return\n        }\n        for (var index in pointNodes) {\n            var point = pointNodes[index]\n            if (startPoint == null) {\n                graphic.moveTo(point.x, point.y)\n                startPoint = point\n            }\n\n            graphic.lineTo(point.x, point.y)\n        }\n        graphic.close()\n        graphic.stroke()\n        graphic.fill()\n    },\n\n    // update (dt) {},\n\n    onTouchStart(event){\n        this.directionTryto = null\n        this.flag = true\n    },\n    onTouchMove(event) {\n        if (this.flag == false) {\n            return\n        }\n        var delta = event.getDelta()\n        var direction = this.getPossiableDirection(delta)\n\n        if (direction == -1) {\n            this.flag = false\n            return\n        }\n        if (this.directionTryto == null) {\n            this.directionTryto = direction\n        }\n        if (direction.equals(this.directionTryto) == false) {\n            this.flag = false\n            return\n        }\n\n        var startLocation = event.getStartLocation()\n        var disFromStart = cc.v2(event.getLocationX() - startLocation.x, event.getLocationY() - startLocation.y).mag()\n        if (disFromStart >= this.minDis) {\n            //valid move\n            this.flag = false\n            this.moveBullets(this.directionTryto)\n        }\n    },\n    onTouchEnd(event) {\n\n    },\n\n    onDestroy() {\n        this.node.off(\"touchstart\",this.onTouchStart,this)\n        this.node.off(\"touchmove\",this.onTouchMove,this)\n        this.node.off(\"touchend\",this.onTouchEnd,this)\n    },\n\n    getPossiableDirection(delta) {\n        if (this.isPossiableWithGivenDirection(delta,cc.v2(1,0)) == true) {\n            return cc.v2(1,0) //right\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,-1)) == true) {\n            return cc.v2(0,-1) //down\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(-1,0)) == true) {\n            return cc.v2(-1,0) //left\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,1)) == true) {\n            return cc.v2(0,1) //up\n        }\n        else {\n            return -1 //no direction match\n        }\n    },\n    \n    isPossiableWithGivenDirection(delta,givenDirection) {\n        var angle = delta.signAngle(givenDirection)\n        var degree = angle / Math.PI * 180\n        if (Math.abs(degree) <= this.maxOffsetDegree) {\n            return true\n        }\n        else {\n            return false\n        }\n    },\n    \n    moveBullets(direction) {\n        for (var index in this.bullets) {\n            if (this.bullets[index].getComponent(\"bulletMgr\").status != 0) {\n                return\n            }\n        }\n        var shadows = []\n        for (var index in this.bullets) {\n            var bullet = this.bullets[index]\n            var bulletMgr = bullet.getComponent(\"bulletMgr\")\n            var nearestWallInfo = bulletMgr.getNearestWallInfo(direction)\n            var shadowNode = {\n                x: nearestWallInfo.suitablePosition.x,\n                y: nearestWallInfo.suitablePosition.y,\n                width: bullet.width,\n                height: bullet.height,\n                dis: nearestWallInfo.dis,\n                originNode: bullet\n            }\n            shadows.push(shadowNode)\n        }\n\n        //resolve shadows\n\n        while(this.resolveShadows(shadows,direction) == false) {\n\n        }\n\n        for (var index in shadows) {\n            var shadowNode = shadows[index]\n            var originNode = shadowNode.originNode\n            originNode.getComponent(\"bulletMgr\").targetPosition = cc.v2(shadowNode.x, shadowNode.y)\n            originNode.getComponent(\"bulletMgr\").movingDirection = direction\n            originNode.getComponent(\"bulletMgr\").status = 1\n        }\n    },\n\n    onSuccess() {\n        cc.log(\"YOU WIN\")\n    },\n\n    resolveShadows(shadows,direction) {\n        for (var index in shadows) {\n            var oneShadow = shadows[index]\n            for (var i in shadows) {\n                var anotherShadow = shadows[i]\n                if (oneShadow == anotherShadow) {\n                    continue\n                }\n\n                var testResult = this._selectStaticShadowAndShaodwForResolved(oneShadow,anotherShadow,direction)\n                if (testResult != false) {\n                    var staticShadow = testResult.staticShadow\n                    var tempShadow = testResult.shadowForResolved\n                    \n                    var staticBorderLines = this.helper.getLinesOfOneNode(staticShadow)\n                    var staticLine = null\n                    var ray = this.helper.makeRay(cc.v2(staticShadow.x,staticShadow.y),1000,cc.v2(-direction.x,-direction.y))\n\n                    for(var k in staticBorderLines) {\n                        var line = staticBorderLines[k]\n                        var dis = this.helper.rayTest(ray,line)\n                        if (dis != false) {\n                            staticLine = line\n                            break\n                        }\n                    }\n                    var newPoint2 = this.helper.makeRay(staticLine.p2,1000,cc.v2(staticLine.p2.x - staticLine.p1.x, staticLine.p2.y - staticLine.p1.y)).p2\n                    var newPoint1 = this.helper.makeRay(staticLine.p1,1000,cc.v2(staticLine.p1.x - staticLine.p2.x, staticLine.p1.y - staticLine.p2.y)).p2\n                    staticLine = {\n                        p1: newPoint1,\n                        p2: newPoint2\n                    }\n                    var ray1 = this.helper.makeRay(tempShadow.originNode.position,3000,direction)\n                    var currentDistance = this.helper.rayTest(ray1,staticLine)\n                    var targetDis = this.helper.getDisToSelfBorder(tempShadow.originNode,direction) + tempShadow.originNode.getComponent(\"bulletMgr\").disFromBorder\n                    var suitablePosition = this.helper.getSuitablePoint(tempShadow.originNode.position,currentDistance,targetDis,direction)\n                    var updatedDis = cc.v2(suitablePosition.x - tempShadow.originNode.x, suitablePosition.y - tempShadow.originNode.y).mag()\n                    tempShadow.x = suitablePosition.x\n                    tempShadow.y = suitablePosition.y\n                    tempShadow.dis = updatedDis\n                    return false\n                }\n\n            }\n        }\n        return true\n    },\n    _selectStaticShadowAndShaodwForResolved(shadow1, shadow2, direction) {\n        var temp = function(s1,s2,d,target,givenType) {\n            var points = target.helper.getPointsOfOneNode(s1.originNode)\n            points[\"origin\"] = cc.v2(s1.originNode.x,s1.originNode.y)\n            for (var index in points) {\n                var ray = target.helper.makeRay(points[index],s1.dis,d)\n                var lines = null\n                if (givenType == 1) {\n                    lines = target.helper.getLinesOfOneNode(s2.originNode)\n                }\n                if (givenType == 2) {\n                    lines = target.helper.getLinesOfOneNode(s2)\n                }\n                for (var key in lines) {\n                    var line = lines[key]\n                    var result = target.helper.rayTest(ray,line)\n                    if (result != false) {\n\n                        return true\n                    }\n                }\n            }\n            return false\n        }\n\n        if (temp(shadow1,shadow2,direction,this,1) == true && temp(shadow1,shadow2,direction,this,2) == true) {\n            return {\n                staticShadow: shadow2,\n                shadowForResolved: shadow1\n            }\n        }\n\n        if (temp(shadow2,shadow1,direction,this,1) == true && temp(shadow2,shadow1,direction,this,2) == true) {\n            return {\n                staticShadow: shadow1,\n                shadowForResolved: shadow2\n            }\n        }\n\n        return false\n    }\n\n    \n});\n\n"]}