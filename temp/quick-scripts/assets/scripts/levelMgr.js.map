{"version":3,"sources":["levelMgr.js"],"names":["cc","Class","extends","Component","properties","bullets","minDis","maxOffsetDegree","directionTryto","flag","helper","walls","targetsNum","get","_targetsNum","set","value","onSuccess","linePrefab","Prefab","bulletPrefab","playerData","retryButton","Node","heartForRetryCost","_heartForRetryCostwe","getChildByName","getComponent","Label","string","toString","heart","_heart","find","maxHeart","Button","interactable","isMoved","_maxHeart","_isMoved","currentStepNum","_currentStepNum","currentStepNumLabel","node","level","onLoad","Helper","require","setupNodesByConfig","start","on","onTouchStart","onTouchMove","onTouchEnd","bulletsNode","children","currentLevel","delegate","wallsNode","length","graphic","Graphics","startPoint","pointNodes","index","point","moveTo","x","y","lineTo","close","stroke","fill","minStepNumLabel","minStepKey","minStepNum","minSteps","undefined","event","startLocation","getStartLocation","tmpDirection","v2","getLocationX","getLocationY","dis","mag","direction","getPossiableDirection","moveBullets","onDestroy","off","delta","isPossiableWithGivenDirection","givenDirection","angle","signAngle","degree","Math","PI","abs","status","shadows","bullet","bulletMgr","nearestWallInfo","getNearestWallInfo","shadowNode","suitablePosition","width","height","originNode","push","maxTryTime","resolveShadows","willAddStepNum","isTwoPositionSimilarEqual","targetPosition","movingDirection","normalizeSelf","movingTime","v","vx","vy","movingSpeed","animatedToScene","levels","currentSection","indexOf","newLevel","newSection","commitBody","newLevels","physicalPowerCostedFlag","preLevel","self","successCallBack","commitPlayerDataToServer","oneShadow","i","anotherShadow","testResult","_selectStaticShadowAndShaodwForResolved","staticShadow","tempShadow","shadowForResolved","staticBorderLines","getLinesOfOneNode","staticLine","ray","makeRay","k","line","rayTest","newPoint2","p2","p1","newPoint1","ray1","position","currentDistance","targetDis","getDisToSelfBorder","disFromBorder","getSuitablePoint","updatedDis","shadow1","shadow2","temp","s1","s2","originCrossFlag","shadowCrossFlag","originLines","key","oneLine","isOneNodeWillCollidWithOneLineInDirection","shadowLines","result","generateWalls","levelConfig","config","wallPathes","onePath","points","realPoints","realPoint","currentPoint","lineWidth","offset","wallNodes","isClosed","instantiate","directedLine","offsetDirection","rotate","addChild","bulletConfig","con","scale","onClickRetryButton","gameMgr","enterLevelScene","onAllRetryFailed","onClickBackButton","wallPrefab","reses","targetPrefab","pathWayPrefab","levelSceneConfig","_setupFillNodes","_setupWalls","_setupTargets","_setupPathWaysNode","_setupBullets","_setupNodePropertyByConfig","givenNode","givenConfig","fillNodesConfig","fillNodes","oneNodeConfig","oneNode","wallsConfig","oneWallConfig","oneWallNode","targetsConfig","targets","oneTargetConfig","oneTargetNode","pathWaysConfig","pathWaysNode","onePathWayConfig","onePathWayNode","name","oneChildConfig","oneChildNode","bulletsConfig","oneBulletConfig","oneBulletNode","basicConfig","basic","mgrConfig","mgr","bulletType","pathWaysNodeName","pathWaysNodePath","dataMonitored","levelId","slice","parseInt"],"mappings":"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","file":"levelMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        bullets: [],\n        minDis: 50,\n        maxOffsetDegree: 45,\n        directionTryto: null,\n        flag: false,\n        helper: null,\n\n        walls: [],\n        targetsNum: {\n            get() {\n                return this._targetsNum\n            },\n            set(value) {\n                this._targetsNum = value\n                if (value == 0) {\n                    this.onSuccess()\n                }\n            }\n        },\n\n        linePrefab: cc.Prefab,\n        bulletPrefab: cc.Prefab,\n\n        playerData: null,\n        retryButton: cc.Node,\n        heartForRetryCost: {\n            get() {\n                return this._heartForRetryCostwe\n            },\n            set(value){\n                this._heartForRetryCostwe = value\n                this.retryButton.getChildByName(\"heartCostLabel\").getComponent(cc.Label).string = value.toString()\n            } \n        },\n\n        heart: {\n            get() {\n                return this._heart\n            },\n            set(value) {\n                this._heart = value\n                cc.find(\"Canvas/uiNode/heartLabel\").getComponent(cc.Label).string = value.toString() + \" / \" + this.maxHeart.toString()\n                if (value < this.heartForRetryCost) {\n                    this.retryButton.getComponent(cc.Button).interactable = false\n                }\n                else {\n                    if (this.isMoved == false) {\n                        return\n                    }\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n\n        maxHeart: {\n            get() {\n                return this._maxHeart\n            },\n            set(value) {\n                this._maxHeart = value\n            }\n        },\n\n        isMoved: {\n            get() {\n                if (this._isMoved == null) {\n                    this._isMoved = false\n                }\n                return this._isMoved\n            },\n            set(value) {\n                this._isMoved = value\n                if (value == true && this.heartForRetryCost <= this.heart) {\n                    this.retryButton.getComponent(cc.Button).interactable = true\n                }\n            }\n        },\n        currentStepNum: {\n            get() {\n                if (this._currentStepNum == null) {\n                    this._currentStepNum = 0\n                }\n                return this._currentStepNum\n            },\n            set(value) {\n                this._currentStepNum = value\n                var currentStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"currentStepNumLabel\")\n                currentStepNumLabel.getComponent(cc.Label).string = \"当前步数：\" + value.toString()\n            }\n        },\n        level: null\n        \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        var Helper = require(\"helper\")\n        this.helper = new Helper()\n        //this.level = 1\n        this.setupNodesByConfig()\n    },\n\n    start () {\n        this.node.on(\"touchstart\",this.onTouchStart,this)\n        this.node.on(\"touchmove\",this.onTouchMove,this)\n        this.node.on(\"touchend\",this.onTouchEnd,this)\n        //this.generateWalls()\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        this.bullets = bulletsNode.children\n        this.playerData = require(\"dataMgr\").playerData\n\n        this.maxHeart = this.playerData.maxHeart\n        if (this.level == this.playerData.currentLevel) {\n            this.heartForRetryCost = require(\"levelConfig\")[this.playerData.currentLevel.toString()].heartForRetryCost\n        }\n        else {\n            this.heartForRetryCost = 0\n        }\n    \n        this.heart = this.playerData.heart\n        require(\"networkMgr\").delegate = this\n        var wallsNode = cc.find(\"Canvas/walls\")\n        this.walls = wallsNode.children\n        this.targetsNum = cc.find(\"Canvas/targets\").children.length\n\n        var graphic = cc.find(\"Canvas/fillNodes\").getComponent(cc.Graphics)\n        var startPoint = null\n        var pointNodes = cc.find(\"Canvas/fillNodes\").children\n        if (pointNodes.length == 0) {\n            return\n        }\n        for (var index in pointNodes) {\n            var point = pointNodes[index]\n            if (startPoint == null) {\n                graphic.moveTo(point.x, point.y)\n                startPoint = point\n            }\n\n            graphic.lineTo(point.x, point.y)\n        }\n        graphic.close()\n        graphic.stroke()\n        graphic.fill()\n\n        var minStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"minStepNumLabel\")\n        var minStepKey = \"minStep_level_\" + this.level.toString()\n        var minStepNum = require(\"dataMgr\").playerData.minSteps[minStepKey]\n        if (minStepNum == null || minStepNum == undefined) {\n            minStepNum = \"无\"\n        }\n        minStepNumLabel.getComponent(cc.Label).string = \"最小步数：\" + minStepNum.toString()\n    },\n\n    // update (dt) {},\n\n    onTouchStart(event){\n        this.directionTryto = null\n        this.flag = true\n    },\n\n    onTouchMove(event) {\n        if (this.flag == false) {\n            return\n        }\n        var startLocation = event.getStartLocation()\n        var tmpDirection = cc.v2(event.getLocationX() - startLocation.x, event.getLocationY() - startLocation.y)\n        var dis = tmpDirection.mag()\n        if (dis < this.minDis) {\n            return\n        }\n        else {\n            var direction = this.getPossiableDirection(tmpDirection)\n            if (direction == -1) {\n                this.flag = false\n                return\n            }\n\n            if (this.directionTryto == null) {\n                this.directionTryto = direction\n            }\n\n            this.flag = false\n            this.moveBullets(this.directionTryto)\n        }\n    },\n    onTouchEnd(event) {\n\n    },\n\n    onDestroy() {\n        this.node.off(\"touchstart\",this.onTouchStart,this)\n        this.node.off(\"touchmove\",this.onTouchMove,this)\n        this.node.off(\"touchend\",this.onTouchEnd,this)\n    },\n\n    getPossiableDirection(delta) {\n        if (this.isPossiableWithGivenDirection(delta,cc.v2(1,0)) == true) {\n            return cc.v2(1,0) //right\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,-1)) == true) {\n            return cc.v2(0,-1) //down\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(-1,0)) == true) {\n            return cc.v2(-1,0) //left\n        }\n        else if (this.isPossiableWithGivenDirection(delta,cc.v2(0,1)) == true) {\n            return cc.v2(0,1) //up\n        }\n        else {\n            return -1 //no direction match\n        }\n    },\n    \n    isPossiableWithGivenDirection(delta,givenDirection) {\n        var angle = delta.signAngle(givenDirection)\n        var degree = angle / Math.PI * 180\n        if (Math.abs(degree) <= this.maxOffsetDegree) {\n            return true\n        }\n        else {\n            return false\n        }\n    },\n    \n    moveBullets(direction) {\n        for (var index in this.bullets) {\n            if (this.bullets[index].getComponent(\"bulletMgr\").status != 0) {\n                return\n            }\n        }\n        var shadows = []\n        for (var index in this.bullets) {\n            var bullet = this.bullets[index]\n            var bulletMgr = bullet.getComponent(\"bulletMgr\")\n            var nearestWallInfo = bulletMgr.getNearestWallInfo(direction)\n            var shadowNode = {\n                x: nearestWallInfo.suitablePosition.x,\n                y: nearestWallInfo.suitablePosition.y,\n                width: bullet.width,\n                height: bullet.height,\n                dis: nearestWallInfo.dis,\n                originNode: bullet\n            }\n            shadows.push(shadowNode)\n        }\n\n        //resolve shadows\n        var maxTryTime = 100\n        while(this.resolveShadows(shadows,direction) == false) {\n            if (maxTryTime <= 0) {\n                // cc.log(\"CAN'T FIND A SUITABLE POSITION\")\n                break\n            }\n            maxTryTime -= 1\n        }\n        var willAddStepNum = false\n        for (var index in shadows) {\n            var shadowNode = shadows[index]\n            var originNode = shadowNode.originNode\n            if (this.helper.isTwoPositionSimilarEqual(cc.v2(shadowNode.x,shadowNode.y),cc.v2(originNode.x, originNode.y)) == true) {\n                continue\n            }\n            \n            var bulletMgr = originNode.getComponent(\"bulletMgr\")\n            bulletMgr.targetPosition = cc.v2(shadowNode.x, shadowNode.y)\n            bulletMgr.movingDirection = direction\n            \n            bulletMgr.movingDirection.normalizeSelf()\n            if (bulletMgr.movingTime != null) {\n                var dis = cc.v2(bulletMgr.targetPosition.x - originNode.x, bulletMgr.targetPosition.y - originNode.y).mag()\n                var v = dis / bulletMgr.movingTime\n\n                bulletMgr.vx = v * bulletMgr.movingDirection.x\n                bulletMgr.vy = v * bulletMgr.movingDirection.y\n            }\n            else {\n                bulletMgr.vx = bulletMgr.movingDirection.x * bulletMgr.movingSpeed\n                bulletMgr.vy = bulletMgr.movingDirection.y * bulletMgr.movingSpeed\n            }\n            bulletMgr.status = 1\n            if (this.isMoved != true) {\n                this.isMoved = true\n            }\n            if (willAddStepNum == false) {\n                willAddStepNum = true\n            }\n        }\n        if (willAddStepNum == true) {\n            this.currentStepNum += 1\n        }\n    },\n\n    onSuccess() {\n        this.retryButton.getComponent(cc.Button).interactable = false\n        if (this.level != this.playerData.currentLevel) {\n            // cc.director.loadScene(\"mainScene\")\n            require(\"gameMgr\").animatedToScene(\"mainScene\")\n            return\n        }\n\n        var levels = require(\"sectionConfig\")[this.playerData.currentSection].levels\n        var index = levels.indexOf(this.playerData.currentLevel)\n        var newLevel = null\n        var newSection = null\n        var commitBody = null\n        if (index < levels.length -1) {\n            index += 1\n            newLevel = levels[index]\n        }\n        else {\n            newSection = this.playerData.currentSection + 1\n            var newLevels = require(\"sectionConfig\")[newSection].levels\n            newLevel = newLevels[0]\n        }\n        \n        if (newSection == null) {\n            commitBody = {\n                currentLevel: newLevel,\n                physicalPowerCostedFlag: 0    \n            } \n        }\n        else {\n            commitBody = {\n                currentSection: newSection,\n                currentLevel: newLevel,\n                physicalPowerCostedFlag: 0    \n            }\n        }\n        var minStepKey = \"minStep_level_\" + this.level.toString()\n        var minStepNum = require(\"dataMgr\").playerData.minSteps[minStepKey]\n        if (minStepNum == null || minStepNum == undefined || this.currentStepNum < minStepNum) {\n            commitBody.minSteps = {}\n            commitBody.minSteps[minStepKey] = this.currentStepNum\n        }\n        commitBody.preLevel = this.level\n        var self = this\n        var successCallBack = function(){\n            if (newSection != null) {\n                self.playerData.currentSection = newSection\n            }\n            if (commitBody.minSteps != null && commitBody.minSteps != undefined) {\n                require(\"dataMgr\").playerData.minSteps[minStepKey] = self.currentStepNum\n            }\n            self.playerData.currentLevel = newLevel\n            self.playerData.physicalPowerCostedFlag = 0\n            self.playerData.preLevel = self.level\n            require(\"gameMgr\").animatedToScene(\"mainScene\")\n        }\n        \n\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n        \n    },\n\n    resolveShadows(shadows,direction) {\n        for (var index in shadows) {\n            var oneShadow = shadows[index]\n            for (var i in shadows) {\n                var anotherShadow = shadows[i]\n                if (oneShadow == anotherShadow) {\n                    continue\n                }\n\n                var testResult = this._selectStaticShadowAndShaodwForResolved(oneShadow,anotherShadow,direction)\n                if (testResult != false) {\n                    var staticShadow = testResult.staticShadow\n                    var tempShadow = testResult.shadowForResolved\n                    // cc.log(\"static: \" + staticShadow.originNode.name, \"temp: \" + tempShadow.originNode.name)\n                    var staticBorderLines = this.helper.getLinesOfOneNode(staticShadow)\n                    var staticLine = null\n                    var ray = this.helper.makeRay(cc.v2(staticShadow.x,staticShadow.y),1000,cc.v2(-direction.x,-direction.y))\n\n                    for(var k in staticBorderLines) {\n                        var line = staticBorderLines[k]\n                        var dis = this.helper.rayTest(ray,line)\n                        if (dis != false) {\n                            staticLine = line\n                            break\n                        }\n                    }\n                    var newPoint2 = this.helper.makeRay(staticLine.p2,1000,cc.v2(staticLine.p2.x - staticLine.p1.x, staticLine.p2.y - staticLine.p1.y)).p2\n                    var newPoint1 = this.helper.makeRay(staticLine.p1,1000,cc.v2(staticLine.p1.x - staticLine.p2.x, staticLine.p1.y - staticLine.p2.y)).p2\n                    staticLine = {\n                        p1: newPoint1,\n                        p2: newPoint2\n                    }\n                    var ray1 = this.helper.makeRay(tempShadow.originNode.position,3000,direction)\n                    var currentDistance = this.helper.rayTest(ray1,staticLine)\n                    var targetDis = this.helper.getDisToSelfBorder(tempShadow.originNode,direction) + tempShadow.originNode.getComponent(\"bulletMgr\").disFromBorder\n                    var suitablePosition = this.helper.getSuitablePoint(tempShadow.originNode.position,currentDistance,targetDis,direction)\n                    var updatedDis = cc.v2(suitablePosition.x - tempShadow.originNode.x, suitablePosition.y - tempShadow.originNode.y).mag()\n                    tempShadow.x = suitablePosition.x\n                    tempShadow.y = suitablePosition.y\n                    tempShadow.dis = updatedDis\n                    return false\n                }\n\n            }\n        }\n        return true\n    },\n    _selectStaticShadowAndShaodwForResolved(shadow1, shadow2, direction) {\n\n        var self = this\n        var temp = function(s1, s2) {\n            var dis = s1.dis\n            var originCrossFlag = false\n            var shadowCrossFlag = false\n\n            var originLines = self.helper.getLinesOfOneNode(s2)\n            for (var key in originLines) {\n                var oneLine = originLines[key]\n                if (self.helper.isOneNodeWillCollidWithOneLineInDirection(s1.originNode,oneLine,direction,dis) != false) {\n                    originCrossFlag = true\n                    break\n                }\n            }\n\n            if (originCrossFlag == false) {\n                return false\n            }\n\n            var shadowLines = self.helper.getLinesOfOneNode(s2.originNode)\n            for (var key in shadowLines) {\n                var oneLine = shadowLines[key]\n                if (self.helper.isOneNodeWillCollidWithOneLineInDirection(s1.originNode,oneLine,direction,dis) != false) {\n                    shadowCrossFlag = true\n                    break\n                }\n            }\n\n            if (shadowCrossFlag == false) {\n                return false\n            }\n\n            return true\n        }\n\n        if (temp(shadow1,shadow2) == true) {\n            var result = {\n                staticShadow: shadow2,\n                shadowForResolved: shadow1\n            }\n            return result\n        }\n\n        if (temp(shadow2,shadow1) == true) {\n            var result = {\n                staticShadow: shadow1,\n                shadowForResolved: shadow2\n            }\n            return result\n        }\n\n        \n        return false\n    },\n\n    generateWalls() {\n        var levelConfig = require(\"levelConfig\")\n        var currentLevel = this.level\n\n        var config = levelConfig[currentLevel]\n        var wallsNode = cc.find(\"Canvas/walls\")\n        for (var index in config.wallPathes) {\n            var onePath = config.wallPathes[index]\n\n            var points = onePath.points\n            var realPoints = []\n            for (var i in points) {\n                var realPoint = null\n                if (i == 0) {\n                    realPoint = cc.v2(points[i].x, points[i].y)\n                }\n                else {\n                    var currentPoint = points[i]\n                    realPoint = cc.v2(realPoints[i - 1].x + currentPoint.x, realPoints[i - 1].y + currentPoint.y)\n                }\n                \n                realPoints.push(realPoint)\n            }\n            var lineWidth = onePath.lineWidth\n            var offset = onePath.offset\n            var wallNodes = []\n            var isClosed = onePath.isClosed\n            if (isClosed == true) {\n                var startPoint = realPoints[0]\n                realPoints.push(startPoint)\n            }\n            for (var i in realPoints) {\n                if (i == 0) {\n                    continue\n                }\n                \n                var node = cc.instantiate(this.linePrefab)\n                node.height = lineWidth\n                var directedLine = cc.v2(realPoints[i].x - realPoints[i - 1].x, realPoints[i].y - realPoints[i - 1].y)\n                node.width = directedLine.mag()\n    \n                var degree = directedLine.signAngle(cc.v2(1,0)) / Math.PI * 180\n                node.angle = -degree\n                node.x = realPoints[i].x - directedLine.x / 2\n                node.y = realPoints[i].y - directedLine.y / 2\n                var offsetDirection = directedLine.rotate(Math.PI / 2)\n                offsetDirection.normalizeSelf()\n                node.x += node.height / 2 * offsetDirection.x\n                node.y += node.height / 2 * offsetDirection.y\n\n                node.x += offset.x\n                node.y += offset.y\n                wallNodes.push(node)\n                wallsNode.addChild(node)                \n            }\n        }\n\n        var bulletConfig = config.bullets\n        var bulletsNode = cc.find(\"Canvas/bullets\")\n        for (var index in bulletConfig) {\n            var con = bulletConfig[index]\n            var bullet = cc.instantiate(this.bulletPrefab)\n            bullet.x = con.x\n            bullet.y = con.y\n            bullet.width = bullet.width * con.scale\n            bullet.height = bullet.height * con.scale\n            bulletsNode.addChild(bullet)\n        } \n    },\n\n\n    onClickRetryButton() {\n        var gameMgr = require(\"gameMgr\")\n        if (this.heartForRetryCost == 0) {\n            gameMgr.enterLevelScene(this.level)\n            return\n        }\n        var temp = this.playerData.heart - this.heartForRetryCost\n        if (temp < 0) {\n            return\n        }\n\n        var commitBody = {\n            heart: temp\n        }\n        var self = this\n        var successCallBack = function() {\n            self.playerData.heart = temp\n            // self.heart = temp\n            gameMgr.enterLevelScene(self.level)\n        }\n        this.retryButton.getComponent(cc.Button).interactable = false\n        require(\"dataMgr\").commitPlayerDataToServer(commitBody,successCallBack)\n    },\n    onAllRetryFailed() {\n        this.retryButton.getComponent(cc.Button).interactable = true\n    },\n\n    onClickBackButton() {\n        // cc.director.loadScene(\"mainScene\")\n        require(\"gameMgr\").animatedToScene(\"mainScene\")\n    },\n\n    setupNodesByConfig() {\n        var wallPrefab = require(\"resMgr\").reses[\"wallPrefab\"]\n        var bulletPrefab = require(\"resMgr\").reses[\"bulletPrefab\"]\n        var targetPrefab = require(\"resMgr\").reses[\"targetPrefab\"]\n        var pathWayPrefab = require(\"resMgr\").reses[\"pathWayPrefab\"]\n        var levelSceneConfig = require(\"levelSceneConfig\")[this.level]\n\n        this._setupFillNodes(levelSceneConfig)\n        this._setupWalls(levelSceneConfig,wallPrefab)\n        this._setupTargets(levelSceneConfig,targetPrefab)\n        this._setupPathWaysNode(levelSceneConfig,pathWayPrefab)\n        this._setupBullets(levelSceneConfig,bulletPrefab)\n    },\n    _setupNodePropertyByConfig(givenNode, givenConfig) {\n        for (var key in givenConfig) {\n            givenNode[key] = givenConfig[key]\n        }\n    },\n    _setupFillNodes(levelSceneConfig) {\n        var fillNodesConfig = levelSceneConfig.fillNodes\n        var fillNodes = cc.find(\"Canvas/fillNodes\")\n        for(var index in fillNodesConfig) {\n            var oneNodeConfig = fillNodesConfig[index]\n            var oneNode = new cc.Node()\n            this._setupNodePropertyByConfig(oneNode,oneNodeConfig)\n            fillNodes.addChild(oneNode)\n        }\n    },\n\n    _setupWalls(levelSceneConfig,wallPrefab) {\n        var wallsConfig = levelSceneConfig.walls\n        var walls = cc.find(\"Canvas/walls\")\n        for(var index in wallsConfig) {\n            var oneWallConfig = wallsConfig[index]\n            var oneWallNode = cc.instantiate(wallPrefab)\n            this._setupNodePropertyByConfig(oneWallNode,oneWallConfig)\n            walls.addChild(oneWallNode)\n        }\n    },\n\n    _setupTargets(levelSceneConfig, targetPrefab) {\n        var targetsConfig = levelSceneConfig.targets\n        var targets = cc.find(\"Canvas/targets\") \n        for (var index in targetsConfig) {\n            var oneTargetConfig = targetsConfig[index]\n            var oneTargetNode = cc.instantiate(targetPrefab)\n            this._setupNodePropertyByConfig(oneTargetNode,oneTargetConfig)\n            targets.addChild(oneTargetNode)\n        }\n    },\n    \n    _setupPathWaysNode(levelSceneConfig,pathWayPrefab) {\n        var pathWaysConfig = levelSceneConfig.pathWaysNode\n        var pathWaysNode = cc.find(\"Canvas/pathWaysNode\")\n        for (var index in pathWaysConfig) {\n            var onePathWayConfig = pathWaysConfig[index]\n            var onePathWayNode = new cc.Node(onePathWayConfig.name)\n            for (var index in onePathWayConfig.children){\n                var oneChildConfig = onePathWayConfig.children[index]\n                var oneChildNode = cc.instantiate(pathWayPrefab)\n                this._setupNodePropertyByConfig(oneChildNode,oneChildConfig)\n                onePathWayNode.addChild(oneChildNode)\n            }\n            pathWaysNode.addChild(onePathWayNode)\n        }\n    },\n\n    _setupBullets(levelSceneConfig, bulletPrefab) {\n        var bulletsConfig = levelSceneConfig.bullets\n        var bullets = cc.find(\"Canvas/bullets\")\n        for (var index in bulletsConfig) {\n            var oneBulletConfig = bulletsConfig[index]\n            var oneBulletNode = cc.instantiate(bulletPrefab)\n            \n            var basicConfig = oneBulletConfig.basic\n            //this._setupNodePropertyByConfig(oneBulletNode,basicConfig)\n            var mgrConfig = oneBulletConfig.mgr\n            var bulletMgr = oneBulletNode.getComponent(\"bulletMgr\")\n            bulletMgr.bulletType = mgrConfig.bulletType\n            this._setupNodePropertyByConfig(oneBulletNode,basicConfig)\n            if (bulletMgr.bulletType == 2) {\n                if (mgrConfig.pathWaysNodeName != \"\" && mgrConfig.pathWaysNodeName != null) {\n                    var pathWaysNodePath = \"Canvas/pathWaysNode/\" + mgrConfig.pathWaysNodeName\n                    var pathWaysNode = cc.find(pathWaysNodePath)\n                    bulletMgr.pathWaysNode = pathWaysNode\n                }\n            }\n\n            bullets.addChild(oneBulletNode)\n        }\n    },\n\n\n    dataMonitored(key,value) {\n        if (key.indexOf(\"minStep_level_\") != -1) {\n            //typically one key is \"minStep_level_1\"\n            var levelId = key.slice(14)\n            if (parseInt(levelId) == parseInt(this.level)) {\n                var minStepNumLabel = this.node.getChildByName(\"uiNode\").getChildByName(\"minStepNumLabel\")\n                minStepNumLabel.getComponent(cc.Label).string = \"最小步数：\" + value.toString()\n            }\n        }\n\n        else if (key == \"heart\") {\n            this.heart = value\n        }\n    }\n\n});\n\n"]}