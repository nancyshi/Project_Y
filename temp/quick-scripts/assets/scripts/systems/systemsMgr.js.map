{"version":3,"sources":["systemsMgr.js"],"names":["SystemsMgr","cc","Class","extends","Component","properties","welfarySys","get","_welfarySys","setupSysProperty","systems","signInSys","_signInSys","addPropertyNumSys","_addPropertyNumSys","mailSys","_mailSys","selectSectionSys","_selectSectionSys","_systems","givenPrefabName","givenName","givenMgrName","givenSysProperty","uiPrefab","require","reses","opendNode","name","mgrName","showSystem","givenSysName","para","givenSys","getSysBySysName","log","ui","instantiate","mgr","getComponent","onWillOpend","others","getChildByName","bg","width","winSize","height","on","director","getScene","addChild","scale","tween","to","start","closeSystem","call","destroy","systemsGloableDataMonitored","key","value","mailSysGloableMonitored","onReachCondition","givenTag","givenMailId","networkMgr","messageObj","makeMessageObj","message","playerId","playerData","id","tag","mailId","successCallBack","xhr","response","responseText","JSON","parse","type","isEnd","mailConditionIndex","newMail","mail","mails","notificaitionMgr","notiStr","showNoti","sendMessageByMsgObj","mailSysConfig","tags","Object","keys","index","oneTag","conditionIndex","element","conditions","conditionType","conditionPara","indexOf","levelId","slice","parseInt","minStepNum","mailSysGloableSendOneMail","complete","delay","systemsMgr","module","exports"],"mappings":"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","file":"systemsMgr.js","sourceRoot":"../../../../../assets/scripts/systems","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\n\n//a typical system will have an ui , which will be created by a prefab\n//other system will not be contained by here, such as notificaition system\nvar SystemsMgr = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        welfarySys: {\n            get() {\n                if (this._welfarySys == null) {\n                    this._welfarySys = this.setupSysProperty(\"welfarySysPrefab\",\"welfarySys\",\"welfarySysMgr\")\n                    this.systems[\"welfarySys\"] = this._welfarySys\n                }\n                return this._welfarySys\n            }\n        },\n        signInSys: {\n            get() {\n                if (this._signInSys == null) {\n                    this._signInSys = this.setupSysProperty(\"signInSysPrefab\", \"signInSys\",\"signInSysMgr\")\n                    this.systems[\"signInSys\"] = this._signInSys\n                }\n                return this._signInSys\n            }\n        },\n\n        addPropertyNumSys: {\n            get() {\n                if (this._addPropertyNumSys == null) {\n                    this._addPropertyNumSys = this.setupSysProperty(\"addPropertyNumSysPrefab\",\"addPropertyNumSys\",\"addPropertyNumSysMgr\")\n                    this.systems[\"addPropertyNumSys\"] = this._addPropertyNumSys\n                }\n                return this._addPropertyNumSys\n            }\n        },\n\n        mailSys: {\n            get() {\n                if (this._mailSys == null) {\n                    this._mailSys = this.setupSysProperty(\"mailSysPrefab\",\"mailSys\",\"mailSysMgr\")\n                    this.systems[\"mailSys\"] = this._mailSys\n                }\n                return this._mailSys\n            }\n        },\n        \n        selectSectionSys: {\n            get() {\n                if (this._selectSectionSys == null) {\n                    this._selectSectionSys = this.setupSysProperty(\"selectSectionSysPrefab\",\"selectSectionSys\",\"selectSectionUIMgr\")\n                    this.systems[\"selectSectionSys\"] = this._selectSectionSys\n                }\n                return this._selectSectionSys\n            }\n        },\n\n        systems: {\n            get() {\n                if (this._systems == null) {\n                    this._systems = {}\n                }\n                return this._systems\n            }\n        }\n    },\n\n    setupSysProperty(givenPrefabName, givenName, givenMgrName) {\n        var givenSysProperty = {}\n        givenSysProperty.uiPrefab = require(\"resMgr\").reses[givenPrefabName]\n        givenSysProperty.opendNode = null\n        givenSysProperty.name = givenName\n        givenSysProperty.mgrName = givenMgrName\n        return givenSysProperty\n    },\n\n    showSystem(givenSysName, para = null) {\n        var givenSys = this.getSysBySysName(givenSysName)\n        if (givenSys.opendNode != null) {\n            cc.log(\"this sys has been opend , can't reopen: \" + givenSys.name)\n            return\n        }\n        var ui = cc.instantiate(givenSys.uiPrefab)\n        var mgrName = this.systems[givenSys.name].mgrName\n        var mgr = ui.getComponent(mgrName)\n        if (mgr != null && typeof mgr.onWillOpend === \"function\") {\n            mgr.onWillOpend(para)\n        }\n        var others = ui.getChildByName(\"others\")\n        var bg = ui.getChildByName(\"bg\")\n        if (bg != null) {\n            bg.width = cc.winSize.width\n            bg.height = cc.winSize.height\n            bg.on(\"touchstart\",function(){})\n        }\n        cc.director.getScene().getChildByName(\"Canvas\").addChild(ui)\n        givenSys.opendNode = ui\n        if (others != null) {\n            others.scale = 0\n            cc.tween(others)\n                .to(0.3,{scale: 1})\n                .start()\n        }\n        else {\n            ui.scale = 0\n            cc.tween(ui)\n                .to(0.3,{scale: 1})\n                .start()\n        }\n    },\n\n    closeSystem(givenSysName) {\n        var givenSys = this.getSysBySysName(givenSysName)\n        var opendNode = givenSys.opendNode\n        if (opendNode == null) {\n            cc.log(givenSys.name + \"has not been opend, no need to colse\")\n            return\n        }\n\n        var others = opendNode.getChildByName(\"others\")\n        if (others != null) {\n            cc.tween(others)\n                .to(0.3, {scale: 0})\n                .call(function(){\n                    opendNode.destroy()\n                    givenSys.opendNode = null\n                })\n                .start()\n        }\n        else {\n            cc.tween(opendNode)\n                .to(0.3, {scale: 0})\n                .call(function(){\n                    opendNode.destroy()\n                    givenSys.opendNode = null\n                })\n        }\n    },\n\n    getSysBySysName(givenSysName) {\n        switch(givenSysName){\n            case \"welfarySys\" :\n                return this.welfarySys\n            case \"signInSys\":\n                return this.signInSys\n            case \"addPropertyNumSys\":\n                return this.addPropertyNumSys\n            case \"mailSys\":\n                return this.mailSys\n            case \"selectSectionSys\":\n                return this.selectSectionSys\n            default:\n                cc.log(\"no such sys\")\n                return false\n        }\n    },\n\n    systemsGloableDataMonitored(key,value) {\n        //mailSys\n            //monitored whether reach mail condition\n        this.mailSysGloableMonitored(key,value)\n    },\n\n\n    mailSysGloableMonitored(key,value) {\n        \n        var onReachCondition = function(givenTag,givenMailId) {\n            var networkMgr = require(\"networkMgr\")\n            var messageObj = networkMgr.makeMessageObj(\"mailModule\",\"reachConditionMessageType\")\n            messageObj.message.playerId = require(\"dataMgr\").playerData.id\n            messageObj.message.tag = givenTag\n            messageObj.message.mailId = givenMailId\n            messageObj.successCallBack = function(xhr) {\n                var response = xhr.responseText\n                response = JSON.parse(response)\n                if (response.type == \"success\") {\n                    var isEnd = response.isEnd\n                    if (isEnd == 0) {\n                        require(\"dataMgr\").playerData.mailConditionIndex[givenTag] += 1\n                    }\n                    else {\n                        require(\"dataMgr\").playerData.mailConditionIndex[givenTag] = -1\n                    }\n                    var newMail = response.mail\n                    require(\"dataMgr\").playerData.mails[givenMailId] = newMail\n                    var notificaitionMgr = require(\"notificationMgr\")\n                    var notiStr = \"你收到一封新邮件，快去查看吧\"\n                    notificaitionMgr.showNoti(notiStr)\n                }\n            }\n            networkMgr.sendMessageByMsgObj(messageObj)\n        }\n        var mailSysConfig = require(\"mailSysConfig\")\n        var tags = Object.keys(mailSysConfig)\n        for (var index in tags) {\n            var oneTag = tags[index]\n            var conditionIndex = require(\"dataMgr\").playerData.mailConditionIndex[oneTag]\n            if (conditionIndex == -1) {\n                continue\n            }\n            var element = mailSysConfig[oneTag].conditions[conditionIndex]\n            var conditionType = element.conditionType\n            var conditionPara = element.conditionPara\n\n            if (conditionType == 1) {\n                //reach given level id\n                if (key != \"preLevel\") {\n                    continue\n                }\n                \n                if (value == conditionPara) {\n                    var mailId = element.mailId\n                    onReachCondition(oneTag,mailId)\n                }\n                \n            }\n            else if (conditionType == 2) {\n                //min step num of given level less than a value\n                if (key.indexOf(\"minStep_level_\") == -1) {\n                    continue\n                }\n\n                var levelId = key.slice(14)\n                if (parseInt(levelId) == conditionPara.levelId){\n                    if (value <= conditionPara.minStepNum) {\n                        var mailId = element.mailId\n                        onReachCondition(oneTag,mailId)\n                    }\n                }\n            }\n        }\n    },\n\n    mailSysGloableSendOneMail(givenMailId,givenTag,complete = function(){},delay = 0) {\n        var networkMgr = require(\"networkMgr\")\n        var messageObj = networkMgr.makeMessageObj(\"mailModule\",\"sendMailMessageType\")\n        messageObj.message.playerId = require(\"dataMgr\").playerData.id\n        messageObj.message.mailId = givenMailId\n        messageObj.message.tag = givenTag\n        messageObj.message.delay = delay\n        messageObj.successCallBack = function(xhr) {\n            var response = xhr.responseText\n            response = JSON.parse(response)\n            if (response.type == \"success\") {\n                complete()\n            }\n        }\n        networkMgr.sendMessageByMsgObj(messageObj)\n    },\n\n    // getSectionLevelInfoByLevelId(givenLevelId) {\n    //     var result = null\n    //     var sectionConfig = require(\"sectionConfig\")\n    //     for (var key in sectionConfig) {\n    //         var oneConfig = sectionConfig[key]\n    //         var levels = oneConfig.levels\n    //         for (var index in levels) {\n    //             if (givenLevelId == levels[index]) {\n    //                 var currentLevel = givenLevelId\n                    \n    //             }\n    //         }\n    //     }\n    //     return result\n    // }\n    // update (dt) {},\n});\n\nvar systemsMgr = new SystemsMgr()\nmodule.exports = systemsMgr"]}