{"version":3,"sources":["mainSceneMgr.js"],"names":["cc","Class","extends","Component","properties","sectionNameLabelNode","Node","levelNodes","connectLineNodes","levelNodePrefab","Prefab","levelNodesConnectLinePrefab","selectedSection","physicalLabelNode","heartLabelNode","mailSysButtonNode","signInSysButtonNode","welfarySysButtonNode","addHeartButtonNode","addPhysicalPowerButtonNode","selectSectionButtonNode","levelNodeStartPosition","v2","levelNodesHorDis","levelNodesVerDis","levelNodesNumPerLine","onLoad","setupData","setupUI","start","getComponent","Label","string","require","playerData","heart","toString","physicalPower","systemsMgr","on","showSystem","redPointShowCondition","mails","unReadNum","key","oneMail","status","signInStatus","flag","initAdWatchedFlag","active","tween","repeatForever","to","angle","delay","setupSectionPerformance","currentSection","log","destroyAllChildren","removeAllChildren","sectionConfig","config","sectionTitle","sectionDes","sectionDescrip","showText","levels","index","oneLevel","oneLevelNode","instantiate","mgr","level","_checkLevelStatus","delegate","_setupLevelNodePosition","addChild","children","oneNode","preNode","connectLine","v","x","y","width","mag","degree","signAngle","Math","PI","result","_getMidPointOfTwoPoints","position","givenNode","givenIndex","rowIndex","colIndex","floor","maxX","point1","point2","_checkSectionStatus","givenSection","parseInt","givneLevel","sectionKey","_getSectionKeyByLevel","sectionStatus","currentLevel","levelsArry","indexOf","givenLevel","levelId","oneConfig","levelsConfig","dataMonitored","value","oneMgr"],"mappings":"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","file":"mainSceneMgr.js","sourceRoot":"../../../../../assets/scripts/mainScene","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        sectionNameLabelNode: cc.Node,\n        levelNodes: cc.Node,\n        connectLineNodes: cc.Node,\n        levelNodePrefab: cc.Prefab,\n        levelNodesConnectLinePrefab: cc.Prefab,\n        selectedSection: null,\n        physicalLabelNode: cc.Node,\n        heartLabelNode: cc.Node,\n        mailSysButtonNode: cc.Node,\n        signInSysButtonNode: cc.Node,\n        welfarySysButtonNode: cc.Node,\n        addHeartButtonNode: cc.Node,\n        addPhysicalPowerButtonNode: cc.Node,\n        selectSectionButtonNode: cc.Node,\n        levelNodeStartPosition: cc.v2(0,0),\n        levelNodesHorDis: 10,\n        levelNodesVerDis: 20,\n        levelNodesNumPerLine: 4\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.setupData()\n        this.setupUI()\n    },\n\n    start () {\n\n    },\n\n    setupUI() {\n        this.heartLabelNode.getComponent(cc.Label).string = require(\"dataMgr\").playerData.heart.toString()\n        this.physicalLabelNode.getComponent(cc.Label).string = require(\"dataMgr\").playerData.physicalPower.toString()\n        var systemsMgr = require(\"systemsMgr\")\n        this.mailSysButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"mailSys\")\n        })\n        this.mailSysButtonNode.getComponent(\"redPointMgr\").redPointShowCondition = function() {\n            var mails = require(\"dataMgr\").playerData.mails\n            var unReadNum = 0\n            for (var key in mails) {\n                var oneMail = mails[key]\n                if (oneMail.status == 0) {\n                    unReadNum += 1\n                }\n            }\n            if (unReadNum > 0) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n\n\n        this.signInSysButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"signInSys\")\n        })\n        this.signInSysButtonNode.getComponent(\"redPointMgr\").redPointShowCondition = function() {\n            var signInStatus = require(\"dataMgr\").playerData.signInStatus\n            switch(signInStatus) {\n                case 1:\n                    return true\n                case 2:\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        this.addPhysicalPowerButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"addPropertyNumSys\",1)\n        })\n        this.addHeartButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"addPropertyNumSys\",2)\n        })\n\n        var flag = require(\"dataMgr\").playerData.initAdWatchedFlag\n        if (flag == 1) {\n            this.welfarySysButtonNode.active = false\n        }\n        else {\n            cc.tween(this.welfarySysButtonNode)\n                .repeatForever(cc.tween()\n                    .to(0.3,{angle: -45})\n                    .to(0.3,{angle: 0})\n                    .to(0.3,{angle: 45})\n                    .to(0.3,{angle: 0})\n                    .delay(1)\n                )\n                .start()\n            \n            this.welfarySysButtonNode.on(\"click\",function(){\n                systemsMgr.showSystem(\"welfarySys\")\n            })\n        }\n\n        this.selectSectionButtonNode.on(\"click\",function(){\n            systemsMgr.showSystem(\"selectSectionSys\")\n        })\n\n        this.setupSectionPerformance()\n    },\n\n    setupData() {\n        this.selectedSection = require(\"dataMgr\").playerData.currentSection\n    },\n\n    setupSectionPerformance() {\n        if (this.selectedSection == null) {\n            cc.log(\"not selected one section, can not setup section of mainScene mgr\")\n            return\n        }\n        this.levelNodes.destroyAllChildren()\n        this.levelNodes.removeAllChildren()\n        this.connectLineNodes.destroyAllChildren()\n        this.connectLineNodes.removeAllChildren()\n        var sectionConfig = require(\"sectionConfig\")\n        var config = sectionConfig[this.selectedSection]\n        var sectionTitle = config.sectionTitle\n        var sectionDes = config.sectionDescrip\n        var showText = sectionTitle + \" \" + sectionDes\n        this.sectionNameLabelNode.getComponent(cc.Label).string = showText\n\n        var levels = config.levels\n        for (var index in levels) {\n            var oneLevel = levels[index]\n            var oneLevelNode = cc.instantiate(this.levelNodePrefab)\n            var mgr = oneLevelNode.getComponent(\"levelNodeMgr\")\n            mgr.level = oneLevel\n            mgr.status = this._checkLevelStatus(oneLevel)\n            mgr.delegate = this\n            this._setupLevelNodePosition(oneLevelNode,index)\n            this.levelNodes.addChild(oneLevelNode)\n        }\n\n        for (var index in this.levelNodes.children){\n            if (index == 0) {\n                continue\n            }\n            var oneNode = this.levelNodes.children[index]\n            var preNode = this.levelNodes.children[(index - 1)]\n            var connectLine = cc.instantiate(this.levelNodesConnectLinePrefab)\n            var v = cc.v2(preNode.x - oneNode.x, preNode.y - oneNode.y)\n            connectLine.width = v.mag()\n            var degree= v.signAngle(cc.v2(1,0)) / Math.PI * 180\n            connectLine.angle = -degree\n            var result = this._getMidPointOfTwoPoints(oneNode.position, preNode.position)\n            connectLine.x = result.x\n            connectLine.y = result.y\n            this.connectLineNodes.addChild(connectLine)\n        }\n    },\n    _setupLevelNodePosition(givenNode, givenIndex) {\n        \n        var rowIndex = givenIndex % this.levelNodesNumPerLine\n        var colIndex = Math.floor(givenIndex / this.levelNodesNumPerLine)\n\n        var maxX = this.levelNodeStartPosition.x + this.levelNodesHorDis * (this.levelNodesNumPerLine - 1)\n        if (colIndex % 2 == 0) {\n            givenNode.x = this.levelNodeStartPosition.x + rowIndex * this.levelNodesHorDis\n        }\n        else {\n            givenNode.x = maxX - rowIndex * this.levelNodesHorDis\n        }\n        givenNode.y = this.levelNodeStartPosition.y + colIndex * this.levelNodesVerDis\n        \n    },\n\n    _getMidPointOfTwoPoints(point1,point2) {\n        var v = cc.v2(point2.x - point1.x, point2.y - point1.y)\n        var x = point1.x + v.x / 2\n        var y = point1.y + v.y / 2\n        return cc.v2(x,y)\n    },\n\n\n    _checkSectionStatus(givenSection) {\n        var currentSection = require(\"dataMgr\").playerData.currentSection\n        if (typeof givenSection !== \"number\") {\n            givenSection = parseInt(givenSection)\n        }\n        if (givenSection > currentSection) {\n            return 0 //locked\n        }\n        else if (givenSection < currentSection) {\n            return 1 //unlocked\n        }\n        else if (givenSection == currentSection) {\n            return 2 //current\n        }\n    },\n\n    _checkLevelStatus(givneLevel) {\n        var sectionKey = this._getSectionKeyByLevel(givneLevel)\n        if (sectionKey == false) {\n            return false //no such level\n        }\n       \n        var sectionStatus = this._checkSectionStatus(sectionKey)\n        switch(sectionStatus) {\n            case 0:\n                return 0 //locked\n            case 1:\n                return 1 //unlocked\n            case 2:\n                var currentLevel = require(\"dataMgr\").playerData.currentLevel\n                if (currentLevel == givneLevel) {\n                    return 2 //current\n                }\n\n                var sectionConfig = require(\"sectionConfig\")[sectionKey]\n                var levelsArry = sectionConfig.levels\n                if (levelsArry.indexOf(givneLevel) > levelsArry.indexOf(currentLevel)) {\n                    return 0 //locked\n                }\n                return 1 //unlocked\n        }\n    },\n    _getSectionKeyByLevel(givenLevel) {\n        var levelId = parseInt(givenLevel)\n        var sectionConfig = require(\"sectionConfig\")\n        for (var key in sectionConfig) {\n            var oneConfig = sectionConfig[key]\n            var levelsConfig = oneConfig.levels\n            if (levelsConfig.indexOf(levelId) != -1) {\n                return key\n            }\n        }\n\n        return false\n    },\n\n\n    dataMonitored(key,value) {\n        if (key == \"physicalPower\") {\n            this.physicalLabelNode.getComponent(cc.Label).string = value.toString()\n        }\n        else if (key == \"heart\") {\n            this.heartLabelNode.getComponent(cc.Label).string = value.toString()\n        }\n        for(var index in this.levelNodes.children) {\n            var oneMgr = this.levelNodes.children[index].getComponent(\"levelNodeMgr\")\n            oneMgr.dataMonitored(key,value)\n        }\n    }\n\n    // update (dt) {},\n});\n"]}